<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>个人主页</title>
  
  <subtitle>愿我的只言片语，为你的成长带来帮助！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://myblong.zkb/"/>
  <updated>2019-08-03T09:57:12.785Z</updated>
  <id>https://myblong.zkb/</id>
  
  <author>
    <name>左康波</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>准确的置换工作流程</title>
    <link href="https://myblong.zkb/2019/08/03/share/%E7%BD%AE%E6%8D%A2%E8%B4%B4%E5%9B%BE%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    <id>https://myblong.zkb/2019/08/03/share/置换贴图的工作流/</id>
    <published>2019-08-03T08:01:32.142Z</published>
    <updated>2019-08-03T09:57:12.785Z</updated>
    
    <content type="html"><![CDATA[<p>**</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本教程试图涵盖和阐明从ZBrush或Mudbox生成和应用精确位移贴图到Maya的V-Ray，3ds Max的V-Ray，Cinema 4D的V-Ray或Maya的Arnold（MtoA）的过程</p><p>**<br><a id="more"></a><br><!DOCTYPE html><html dir="ltr" lang="zh-CN" scrolltop="NaN" class="translated-ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><head><title>准确的置换工作流程|  Akin Bilgic</title><meta name="description" content="An in-depth tutorial detailing the step-by-step procedures of an Accurate Displacement Workflow for ZBrush, Mudbox, V-Ray for Maya, V-Ray for 3ds Max, V-Ray for Cinema 4D, and Arnold Render."><meta name="keywords" content="Accurate, Displacement, Workflow, Tutorial, Article, Floating, Point, 32bit, 16bit, ZBrush, Mudbox, V-Ray, VRay, Arnold, Maya, 3ds Max, Cinema 4D, C4D, MtoA, Akin, Bilgic"><meta name="robots" content="index, follow"><link rel="shortcut icon" href="https://www.cggallery.com/favicon.ico"><link rel="image_src" href="https://i.loli.net/2019/08/03/4rgv6GJiYc8wKpP.jpg"><script type="text/javascript" src="http://raw.githack.com/zuokangbo/zuokangbo.github.io/master/AkinBilgic_files/jquery.min.js"></script><script type="text/javascript" src="http://raw.githack.com/zuokangbo/zuokangbo.github.io/master/AkinBilgic_files/selecthidden.js"></script><script type="text/javascript">var _gaq = _gaq || [];_gaq.push(['_setAccount', 'UA-1600784-4']);_gaq.push(['_trackPageview']);(function() {var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);})();</script><style>/** GLOBALS - MAIN **/*{margin: 0px;padding: 0px;border: 0px;outline: 0px;box-sizing: border-box;-moz-box-sizing: border-box;-webkit-box-sizing: border-box;}html, body{height: 100%;background-color: #222;background: url('images/bg.jpg') fixed;-webkit-text-size-adjust: 100%;}/** GLOBALS - TEXT **/p, a, li, input, textarea, .fancybox-error, .fancybox-title{font-family: Arial, Helvetica, sans-serif;font-weight: normal;font-size: 12px;color: #cfcfcf;}h1, h2, h3, label, input[type="submit"], #menu li a, #contact p, #contact a, .tutorial_figure_label, #donate a, .displacement_select, .calc_input, .calc_result{font-family: "Century Gothic", CenturyGothic, Futura, "Gills Sans", "Trebuchet MS", Arial, sans-serif;font-weight: normal;font-size: 14px;color: #cfcfcf;text-transform: uppercase;}a:hover, #menu a.active, #menu li a:hover, #contact a:hover{color: #f8c100;}h1{font-size: 26px;}h2{font-size: 16px;display: inline;}h3{font-size: 14px;display: inline;}/** GLOBALS - LISTS **/ul li{margin-left: 20px;padding: 2px 0px;}.ul_indent{padding-left: 20px;}ol li{margin-left: 25px;padding: 2px 0px;list-style-type: decimal-leading-zero;}.ol_indent{padding-left: 25px;}/** GLOBALS - INPUT **/input, textarea, select{padding: 10px;outline: 0px;border: 1px solid #444;border-radius: 5px;background: #222;}select{padding: 5px;width: 100%;color: #f8c100;font-size: 16px;text-transform: none;}input:focus, textarea:focus, select:focus{border: 1px solid #555;background: #272727;}.checkbox{position: relative;width: 25px;height: 25px;border: 1px solid #444;border-radius: 5px;background: #222;}.checkbox label{position: absolute;left: 0px;top: 0px;width: 23px;height: 23px;cursor: pointer;}.checkbox label:after{content: '';position: absolute;left: 5px;top: 5px;width: 10px;height: 5px;border: 3px solid #EEE;border-top: none;border-right: none;transform: rotate(-45deg);-ms-transform: rotate(-45deg);-webkit-transform: rotate(-45deg);visibility: hidden;}input[type=checkbox]{visibility: hidden;}input[type=checkbox]:checked + label:after{visibility: visible;}input[type="submit"]{padding: 8px 10px;border: 1px solid #303030;background: #4F4F4F;font-size: 14px;cursor: pointer;appearance: none;-moz-appearance: none;-webkit-appearance: none;}input[type="submit"]:focus, input[type="submit"]:hover{color: #333;background: #f8c100;}/** MAIN LAYOUT **/#gradient_left{position: fixed;top: 0px;left: 0px;height: 100%;width: 30%;background:         linear-gradient(left, rgba(0,0,0,0.6) 15%, rgba(0,0,0,0) 100%);background: -webkit-linear-gradient(left, rgba(0,0,0,0.6) 15%, rgba(0,0,0,0) 100%);background:    -moz-linear-gradient(left, rgba(0,0,0,0.6) 15%, rgba(0,0,0,0) 100%);background:     -ms-linear-gradient(left, rgba(0,0,0,0.6) 15%, rgba(0,0,0,0) 100%);background:      -o-linear-gradient(left, rgba(0,0,0,0.6) 15%, rgba(0,0,0,0) 100%);}#gradient_right{position: fixed;top: 0px;right: 0px;height: 100%;width: 20%;background:         linear-gradient(right, rgba(0,0,0,0.6) 0%, rgba(0,0,0,0) 100%);background: -webkit-linear-gradient(right, rgba(0,0,0,0.6) 0%, rgba(0,0,0,0) 100%);background:    -moz-linear-gradient(right, rgba(0,0,0,0.6) 0%, rgba(0,0,0,0) 100%);background:     -ms-linear-gradient(right, rgba(0,0,0,0.6) 0%, rgba(0,0,0,0) 100%);background:      -o-linear-gradient(right, rgba(0,0,0,0.6) 0%, rgba(0,0,0,0) 100%);}#wrapper{width: 1830px;margin: 0px auto;}#navigation{position: fixed;width: 260px;padding: 35px 15px 35px 0px;text-align: right;z-index: 20;}#content{position: relative;width: 1000px;margin:0 auto;padding: 0px 29px 0px 29px;border: 1px solid #444;border-top: 0px;border-radius: 0px 0px 30px 30px;box-shadow: 0px 0px 25px #111;background: #222;z-index: 10;}#copyright{position: relative;float: right;width: 770px;padding: 25px 30px 35px 30px;z-index: 10;}#copyright p{font-size: 11px;color: #555;text-align: center;}#demoreel{padding-bottom: 20px;}#gallery{padding-bottom: 40px;}#about{}#contact{}.section{padding: 30px 0px;}.subsection{padding: 30px 0px 20px 0px;}.column_left{float: left;width: 47%;}.column_right{float: right;width: 47%;}.title{width: 100%;margin: 0px 0px 10px 0px;border-bottom: 2px solid #f8c100;}.subtitle{width: 100%;margin: 0px 0px 10px 0px;border-bottom: 1px dotted #f8c100;}.subtitle h2{font-weight: bold;color: #f8c100;}/** NAVIGATION **/#logo{}#menu{position: relative;left: 16px;padding: 40px 0px;}#menu li{list-style-type: none;margin: 0px;padding: 0px;}#menu li a{font-size: 26px;text-decoration: none;padding-right: 16px;}#menu li a.active{background: url('images/nav_arrow.gif') no-repeat right center;}#share{}/** DEMOREEL **/#demoreel_slideshow {position: relative;width: 710px;height: 400px;}#demoreel_slideshow img{position: absolute;top: 0px;left: 0px;z-index: 10;opacity: 0;border-radius: 5px;}#demoreel_slideshow img.active{z-index: 20;opacity: 1;}#demoreel_slideshow img.last-active{z-index: 15;}#demoreel_movie{}.demoreel_links{float: right;padding: 10px 0px 0px 30px;}/** THUMBNAILS **/.thumbnails{margin: -5px -6px -5px -5px;}.thumbnails a{position: relative;float: left;margin: 5px;}.thumbnails img{display: block;border-radius: 5px;}.thumbnails_video{position: absolute;right: 0px;bottom: 0px;width: 30px;height: 30px;background: url('images/icon_video.png') no-repeat;}.thumbnails_label{position: absolute;left: 0px;bottom: 0px;padding: 0px 3px;border-radius: 0px 5px 0px 5px;background: rgba(0,0,0,0.6);text-shadow: 0px 0px 5px #000;}#gallery .thumbnails img{width: 230px;height: 120px;}#tutorials .thumbnails img{width: 350px;height: 150px;}/** TUTORIALS **/#tutorial_header{}.tutorial_tagline{float: left;padding-bottom: 30px;}.tutorial_version{float: right;padding-bottom: 30px;}.tutorial_image{float: left;}.tutorial_image img{border-radius: 10px;}.tutorial_figure{width: 550px;margin: 30px auto;padding: 10px;background: #292929;border-radius: 10px;}.tutorial_figure_image{float: left;width: 530px;max-height: 530px;margin-bottom: 10px;background: #222;}.tutorial_figure_label{float: left;padding-right: 10px;color: #f8c100;font-weight: bold;}.tutorial_figure_text{float: left;max-width: 430px;padding-left: 10px;border-left: 1px dashed #555;}.tutorial_quote{background: #292929;margin: 30px 80px;padding: 15px;border-radius: 10px;}.tutorial_table{margin: 0px 0px;border-radius: 10px;}.tutorial_table_row{}.tutorial_table_left{white-space: nowrap;vertical-align: top;text-align: right;padding-right: 2px;}.tutorial_table_right{vertical-align: top;padding-bottom: 5px;}#conclusion, #notes{float: left;width: 420px;}#donate{float: right;width: 240px;}#donate input{margin-bottom: 5px;padding-left: 32px;}#donate form{position: relative;}.donate_icon{position: absolute;left: 7px;top: 7px;width: 21px;height: 21px;pointer-events: none}#icon_donate_paypal{background: url('images/icon_donate_paypal.png') no-repeat;}#icon_donate_bitcoin{background: url('images/icon_donate_bitcoin.png') no-repeat;}/** ABOUT **/#about_text{float: left;width: 400px;}#about_image{float: right;width: 300px;}#about_image img{border-radius: 5px;}/** CONTACT **/#contact_name{float: left;width: 220px;margin-top: 10px;padding-bottom: 10px;}#contact_email{float: left;width: 220px;margin-top: 10px;padding-bottom: 10px;}#contact_website{display: none;}#contact_info{float: right;width: 240px;margin-top: 10px;padding-top: 10px;}#contact_subject{float: left;width: 440px;padding-bottom: 10px;}#contact_message{float: left;padding-bottom: 20px;}#contact_send{float: left;width: 710px;text-align: center;}#contact img{vertical-align: middle;margin: 0px 10px 5px 0px;}#contact p, #contact label{display: block;}#contact_form input[name="name"], #contact_form input[name="email"]{width: 200px;}#contact_form input[name="subject"]{width: 420px;}#contact_form textarea{width: 710px;height: 200px;overflow: auto;resize: vertical;}/** ICONS **/.icon_facebook, .icon_twitter, .icon_google, .icon_linkedin, .icon_pdf{display: inline-block;vertical-align: middle;width: 42px;height: 42px;}.icon_facebook{background: url('images/icon_share_facebook.png') no-repeat right top;}.icon_twitter{background: url('images/icon_share_twitter.png') no-repeat right top;}.icon_google{background: url('images/icon_share_google.png') no-repeat right top;}.icon_linkedin{background: url('images/icon_linkedin.png') no-repeat right top;}.icon_pdf{background: url('images/icon_file_pdf.png') no-repeat right top;}.icon_facebook:hover, .icon_twitter:hover, .icon_google:hover, .icon_linkedin:hover, .icon_pdf:hover{background-position: right bottom;}/**FANCYBOX **/.fancybox-wrap, .fancybox-skin, .fancybox-outer, .fancybox-inner, .fancybox-image, .fancybox-wrap iframe, .fancybox-wrap object, .fancybox-nav, .fancybox-nav span, .fancybox-tmp{padding: 0px;margin: 0px;border: 0px;outline: none;vertical-align: top;}.fancybox-tmp {position: absolute;top: -9999px;left: -9999px;visibility: hidden;}.fancybox-wrap {position: absolute;top: 0px;left: 0px;z-index: 1002;}.fancybox-skin {position: relative;background: #000;color: #cfcfcf;text-shadow: none;border-radius: 5px;}.fancybox-opened {z-index: 1003;}.fancybox-outer, .fancybox-inner {position: relative;}.fancybox-inner {overflow: hidden;}.fancybox-type-iframe .fancybox-inner {-webkit-overflow-scrolling: touch;}.fancybox-error {font-size: 14px;color: #444;margin: 0px;padding: 10px;white-space: nowrap;}.fancybox-image, .fancybox-iframe {display: block;width: 100%;height: 100%;}.fancybox-image {max-width: 100%;max-height: 100%;}#fancybox-loading {position: fixed;top: 50%;left: 50%;margin-top: -21px;margin-left: -21px;background-position: 0 -108px;opacity: 0.8;cursor: pointer;z-index: 1002;}#fancybox-loading div {width: 42px;height: 42px;background: url('images/fancybox_loading.gif') center center no-repeat;}.fancybox-close, .fancybox-prev span, .fancybox-next span {background-image: url('images/fancybox_buttons.png');}.fancybox-nav {position: absolute;top: 0px;width: 40%;height: 100%;cursor: pointer;text-decoration: none;background: transparent;-webkit-tap-highlight-color: rgba(0,0,0,0);z-index: 1004;}.fancybox-nav span {position: absolute;top: 50%;width: 36px;height: 34px;margin-top: -18px;cursor: pointer;z-index: 1004;}.fancybox-close {position: absolute;top: -18px;right: -18px;width: 36px;height: 36px;cursor: pointer;z-index: 1004;}.fancybox-prev {left: 0px;}.fancybox-next {right: 0px;}.fancybox-prev span {left: -25px;background-position: 0 -36px;}.fancybox-next span {right: -25px;background-position: 0 -72px;}.fancybox-prev:hover span {background-position: -36px -36px;}.fancybox-next:hover span {background-position: -36px -72px;}.fancybox-close:hover {background-position: -36px 0px;}.fancybox-nav:hover span {visibility: visible;}.fancybox-type-iframe .fancybox-prev, .fancybox-type-iframe .fancybox-next{    width: 10px;}/* FANCYBOX OVERLAY HELPER */.fancybox-lock {overflow: hidden;}.fancybox-overlay {position: absolute;top: 0px;left: 0px;overflow: hidden;display: none;z-index: 1001;background: rgba(0, 0, 0, .75);}.fancybox-overlay-fixed {position: fixed;bottom: 0px;right: 0px;}.fancybox-lock .fancybox-overlay {overflow: auto;overflow-y: scroll;}/* FANCYBOX TITLE HELPER */.fancybox-title {visibility: hidden;position: relative;text-shadow: none;z-index: 1005;}.fancybox-opened .fancybox-title {visibility: visible;}.fancybox-title-float-wrap {position: absolute;bottom: 0px;right: 50%;margin-bottom: -35px;z-index: 1003;text-align: center;}.fancybox-title-float-wrap .child {display: inline-block;margin-right: -100%;padding: 2px 20px;background: transparent;background: rgba(0, 0, 0, 0.8);border-radius: 15px;text-shadow: 0 1px 2px #222;color: #FFF;font-weight: bold;line-height: 24px;white-space: nowrap;}.fancybox-title-outside-wrap {position: relative;margin-top: 10px;color: #fff;}.fancybox-title-inside-wrap {padding-top: 10px;}.fancybox-title-over-wrap {position: absolute;bottom: 0px;left: 0px;color: #fff;padding: 10px;background: #000;background: rgba(0, 0, 0, .8);}/** OVERRIDES **/.clr{clear: both;}.left{float: left;}.right{float: right;}.end{margin-bottom: 0px;padding-bottom: 0px;}.hide{display: none;}.highlight{font-weight: bold;color: #bfa03c;}.gold, .gold:hover{color: #f8c100;}.silver, .silver:hover{color: #cfcfcf;}.uppercase{text-transform: uppercase;}.lowercase{text-transform: lowercase;}.center{text-align: center;display: block;}</style></head></head><body scrolltop="NaN" style="zoom: 1;"><div id="content"><div id="tutorial" class="section"><div id="tutorial_header"><div class="title"><h1><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">准确的位移工作流程</font></font></h1></div><div class="tutorial_tagline"><h3><span class="gold"><b><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">来自：</font></font></b></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> ZBrush / Mudbox</font></font></h3><br><h3><span class="gold"><b><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">to：</font></font></b></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> V-Ray（Maya，3ds Max，Cinema 4D）/ Arnold（Maya）</font></font></h3></div><div class="tutorial_version"><a class="fancybox gold" href="https://www.cggallery.com/tutorials/displacement/#changelog" target="_blank" rel="external"><h3 class="gold"><b><span class="lowercase"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">v</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 1.4</font></font></b></h3></a><h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> -  2015年4月</font></font></h3><div id="changelog" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">更新日志</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">v1.0  -  2013年5月1日 - 公开发布。</font></font></p><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">v1.1  -  2013年5月10日 - 添加了ZBrush的DPSubPix设置的附加信息。</font></font></p><p>v1.2 - July 26 2013 - Fixed a typo in Mudbox's Normalize To Search Distance setting ('Checked' meant to be 'Unchecked').</p><p>v1.3 - January 30 2014 - Updated procedure for ZBrush, and added procedure for V-Ray for C4D.</p><p>v1.4 - April 20 2015 - Updated procedures to disable displacement map filtering and utilize the VRayHDRI loader for 3ds Max.</p></div></div><div class="tutorial_image"><img src="https://i.loli.net/2019/08/03/TthocXwFB5gizvY.jpg" width="710" height="160" alt=""></div><div class="clr"></div></div><div id="intro" class="subsection"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">介绍</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">本教程试图涵盖和阐明从ZBrush或Mudbox生成和应用精确位移贴图到Maya的V-Ray，3ds Max的V-Ray，Cinema 4D的V-Ray或Maya的Arnold（MtoA）的过程。 。</font></font></p><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">围绕位移图以及它们应该如何工作通常会有很多混乱和错误的信息。</font><font style="vertical-align: inherit;">你有时会看到艺术家将位移贴图加载到他们的低分辨率几何体上并使用强度和深度值进行播放，直到它看起来有点类似于它们的高分辨率几何体并假设它尽可能接近它们。</font><font style="vertical-align: inherit;">但是使用正确的工作流程，您不必调整设置或适应“足够接近” - 它将从一开始就正确地工作，以尽可能准确地匹配您的高分辨率几何。</font></font></p><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">我们将首先介绍浮点位移图如何工作的一些基本概念，以及如何识别您是否获得了正确的结果。</font><font style="vertical-align: inherit;">然后我们将介绍艺术家经常遇到的一些常见陷阱以及如何避免这些陷阱。</font><font style="vertical-align: inherit;">最后，我将提供逐步程序，使位移映射在您选择的软件中准确工作。</font></font></p><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果您已经了解了基本概念并且只想要技术分步过程，请单击</font></font><a href="https://www.cggallery.com/tutorials/displacement/#procedures" class="scroll" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">此处</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">跳过该权限。</font></font></p></div><div id="concepts" class="subsection"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">浮点位移如何工作</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">位移贴图是一种获取高分辨率几何信息并将其烘焙到可应用于低分辨率几何图形的图像的方法。</font><font style="vertical-align: inherit;">然后，渲染器将使用此贴图尽可能准确地复制高分辨率几何细节。</font><font style="vertical-align: inherit;">正确生成的浮点位移贴图将使您的低分辨率几何图形非常准确地与您的高分辨率几何图形匹配 - 从一开始就是如此。</font></font></p><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这是因为正确生成的浮点位移贴图以​​非常合理的方式工作：位移贴图的像素值直接对应于3D包的场景单位。</font><font style="vertical-align: inherit;">因此，像素值为1.0将使网格取代1.0场景单位。</font><font style="vertical-align: inherit;">像素值为0.5将网格替换为0.5个场景单位。</font><font style="vertical-align: inherit;">并且像素值0.0不会取代您的网格。</font><font style="vertical-align: inherit;">都很合乎逻辑。</font><font style="vertical-align: inherit;">并且因为置换贴图的像素值以浮点格式存储，所以它们可以包含远高于1.0的像素值，以及远低于0.0的负像素值。</font><font style="vertical-align: inherit;">这是存储精确位移信息的好方法。</font></font></p><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">我们可以使用简单的测试场景来说明这一点：</font></font><br></p><ul><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">沿上/下轴在不同位置上的3个平面，每个平面仅由一个多边形组成，每个平面都有一个默认的平面UV贴图。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">顶部平面在上/下轴上为35.0单位。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">中间平面在上/下轴上为0.0个单位。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">底部平面在上/下轴上为-20.0单位。</font></font></li></ul><div class="tutorial_figure"><a class="fancybox" href="<a></a>"><img class="tutorial_figure_image" src="https://i.loli.net/2019/08/03/wrtiV2eh65vaHlE.jpg" alt=""></a><p class="tutorial_figure_label"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">图01</font></font></p><p class="tutorial_figure_text"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">三个相同的平面位于上/下轴上的不同位置。</font><font style="vertical-align: inherit;">如果您想自己尝试，请以多种格式</font></font><br><a href="https://www.cggallery.com/files/displacement.zip" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">下载</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">此测试设置。</font></font></p><div class="clr"></div></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">我们将场景导入ZBrush或Mudbox等程序，将中间平面细分几次，然后对其进行简单的雕刻。</font><font style="vertical-align: inherit;">首先，我们将中心的一个点向上拉，使其接触到它上方的平面，然后在两侧向下拉两个点，直到它们只是触及底部的平面。</font><font style="vertical-align: inherit;">我们还将在表面上写一些内容以获得更多细节。</font></font></p><div class="tutorial_figure"><a class="fancybox" href="https://i.loli.net/2019/08/03/csRbnFxLNtuXOAD.jpg" target="_blank" rel="external"><img class="tutorial_figure_image" src="https://i.loli.net/2019/08/03/csRbnFxLNtuXOAD.jpg" alt=""></a><p class="tutorial_figure_label"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">图02</font></font></p><p class="tutorial_figure_text"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">带有雕刻的中间平面用于到达顶部和底部平面。</font></font></p><div class="clr"></div></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">完成后，我们可以继续生成中间平面的置换贴图（使用下面列出的步骤）。</font><font style="vertical-align: inherit;">我们现在可以在像Nuke这样的程序中打开和检查地图 - 这个程序本身可以使用浮点图像。</font></font></p><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在Nuke查看器中，我们可以测试生成的置换贴图。</font><font style="vertical-align: inherit;">当我们将光标悬停在图像的中心点上时 - 这对应于我们拉动网格触摸顶部平面的位置 -  Nuke向我们显示了大约35.0的像素值，如果您还记得我们放置的位置沿上/下轴的顶部平面。</font><font style="vertical-align: inherit;">此外，当我们将鼠标悬停在与我们下拉的两个点中的任何一个相对应的大致位置上时，我们看到的像素值大约为-20.0，也正是我们沿着上/下轴放置底部平面的位置。</font></font></p><div class="tutorial_figure"><a class="fancybox" href="https://i.loli.net/2019/08/03/F4ygarLRWuVcIJM.jpg" target="_blank" rel="external"><img class="tutorial_figure_image" src="https://i.loli.net/2019/08/03/F4ygarLRWuVcIJM.jpg" alt=""></a><p class="tutorial_figure_label"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">图03</font></font></p><p class="tutorial_figure_text"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将鼠标悬停在Nuke查看器中的置换贴图的点上会显示其像素值。</font><font style="vertical-align: inherit;">此处图像为红色，因为位移只需要一个通道来存储其信息 - 因此它存储在红色通道中。</font><font style="vertical-align: inherit;">负像素值也不是直接可见的，因为它们低于0.0  - 我们的显示器的黑点。</font></font></p><div class="clr"></div></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">虽然我们可能无法从原始视觉角度直接在位移图中看到太多，但它所包含的数据肯定存在......而且实际上所有的位移图都是 - </font><font style="vertical-align: inherit;">用于存储位移</font><i><font style="vertical-align: inherit;">数据</font></i><font style="vertical-align: inherit;">的</font></font><i><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">图像</font></font></i><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font></font><i><font style="vertical-align: inherit;"></font></i><font style="vertical-align: inherit;"></font></p><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">所以我们可以假设这是一个正确生成的位移图，因为我们提前知道我们沿着上/下轴放置上下平面的高低。</font><font style="vertical-align: inherit;">当我们将位移贴图应用到我们的3D软件中的中间平面（使用下面列出的程序）并点击渲染时，我们得到了与雕刻程序完全相同的结果 - 中心点刚刚触及顶部平面35.0在它上面的单位，侧面的两个点刚好接触它下面的-20.0单位的底部平面，其余的细节正确移位。</font><font style="vertical-align: inherit;">没有'位移量'，'移位'或'中间点'设置必须摆弄 - 它正确且准确地从一开始就取代网格。</font></font></p><div class="tutorial_figure"><a class="fancybox" href="./准确的位移工作流程_ Akin Bilgic_files/displacement_figure_04.jpg"><img class="tutorial_figure_image" src="https://i.loli.net/2019/08/03/AVyeJaXmLF9nM51.jpg" alt=""></a><p class="tutorial_figure_label"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">图04</font></font></p><p class="tutorial_figure_text"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">位移贴图应用于中间平面并渲染 - 与我们在雕刻程序中的完全匹配。</font></font></p><div class="clr"></div></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">即使此示例使用相当极端的值（向上35.0单位向下，向下向下20单位），结果仍然准确。</font><font style="vertical-align: inherit;">在另一个例子中，我们将位移应用于具有多个UV接缝的更复杂的对象，并且仍然获得正确的结果 - 甚至在接缝处也是如此。</font><font style="vertical-align: inherit;">球体侧面的盒子四面都是5个单位，用作可视指示器以确认正确的位移量。</font></font></p><div class="tutorial_figure"><a class="fancybox" href="./准确的位移工作流程_ Akin Bilgic_files/displacement_figure_05.jpg"><img class="tutorial_figure_image" src="https://i.loli.net/2019/08/03/XYDiwpbRhLHxGvP.jpg" alt=""></a><p class="tutorial_figure_label"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">图05</font></font></p><p class="tutorial_figure_text"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">置换贴图应用于更复杂的对象，在多个UV接缝处发生位移而没有问题。</font></font></p><div class="clr"></div></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">最后，下面是现实世界生产环境中浮点位移映射的示例。</font><font style="vertical-align: inherit;">您在右侧看到的细节完全来自位移贴图 - 没有涉及法线或凹凸贴图 - 并且它精确匹配原始雕刻的高分辨率几何体。</font></font></p><div class="tutorial_figure"><a class="fancybox" href="./准确的位移工作流程_ Akin Bilgic_files/displacement_figure_06.jpg"><img class="tutorial_figure_image" src="https://i.loli.net/2019/08/03/wJqVcxOpPhugSlv.jpg" alt=""></a><p class="tutorial_figure_label"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">图06</font></font></p><p class="tutorial_figure_text"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在左侧：未应用置换贴图</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">的basemesh在右侧：应用了置换贴图的basemesh。</font></font></p><div class="clr"></div></div></div><div id="pitfalls" class="subsection"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">常见的陷阱和避免它们</font></font></h2></div><h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">紫外线很重要</font></font></h3><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">置换贴图通常需要对象的良好UV布局。</font><font style="vertical-align: inherit;">可能没有重叠的UV，因为它会导致生成的地图出错。</font><font style="vertical-align: inherit;">此外，ZBrush特别不喜欢UV直接放在UV板的边缘（正如一些自动UV生成方法所做的那样） - 因此要确保UV总是略微放在UV板的边缘内。</font></font></p><br><h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">仔细检查您的Basemeshes</font></font></h3><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">请记住，在更高细分级别进行雕刻时，下部细分顶点的位置通常也会受到影响。</font><font style="vertical-align: inherit;">因此，导入到雕刻程序中的低分辨率网格可能不再与用于生成置换贴图的低分辨率网格完全相同。</font><font style="vertical-align: inherit;">始终仔细检查以确保您生成的置换贴图的低分辨率网格与您应用置换贴图的网格相同。</font></font></p><br><h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">浮点位移图与尺度相关</font></font></h3><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">由于浮点位移图的像素值直接对应于场景单位，因此对象的比例成为保证精确位移量的重要因素。</font><font style="vertical-align: inherit;">如果在生成置换贴图后向上或向下缩放低分辨率网格，则置换贴图将不再具有相对于基础网格的新比例的准确强度值。</font><font style="vertical-align: inherit;">地图将必须使用新的对象比例重新生成，或者通过V-Ray中的“位移量”设置或Arnold中的位移“高度”设置进行补偿。</font><font style="vertical-align: inherit;">例如：如果您将对象缩放到x2，则必须增加位移量设置x2以进行补偿。</font></font></p><br><h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">浮点-vs-整数</font></font></h3><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">下面列出的程序包括生成32位浮点位移贴图，但如果您处于特别关注保存硬盘空间的生产设置中，您还可以使用16位浮点（半浮点）并仍然获得几乎相同的结果。</font><font style="vertical-align: inherit;">但是，确保使用16位</font></font><i><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">浮点</font></font></i><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">格式存储图像非常重要，而不是16位</font></font><i><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">整数</font></font></i><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">格式。</font><font style="vertical-align: inherit;">整数格式在此工作流程中无法正常工作，您必须完成整个“位移量”和“移位”歌曲和舞蹈才能使它们正常工作。</font><font style="vertical-align: inherit;">这是因为整数格式不支持负像素值，浮点位移贴图使用这些值来表示雕刻区域。</font><font style="vertical-align: inherit;">如果您不确定如何获取其中一个，请坚持下面列出的程序以获得32位浮点位移贴图。</font></font></p><br><h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">只有这么多的位移才能可靠地做到</font></font></h3><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在理想的世界中，浮点位移映射始终产生精确，准确的结果，与原始高分辨率网格完全没有区别。</font><font style="vertical-align: inherit;">不幸的是，3D软件并不理想 - 每个软件包都有自己的方法来完成类似的任务。</font><font style="vertical-align: inherit;">这有时会导致位移精度的细微变化，这是平滑算法的主题。</font><font style="vertical-align: inherit;">一些软件包使用像Catmull-Clark这样的算法来平滑它们的网格，而其他软件包使用它们自己完全不同的方法。</font><font style="vertical-align: inherit;">直到有一天，所有软件包都同意使用相同的算法（比如皮克斯的OpenSubdiv计划 - 通过电子邮件向软件公司发送电子邮件，鼓励他们实施它！），您的高分辨率网格与移位的低分辨率网格之间可能会略有不同。</font><font style="vertical-align: inherit;">好消息是，如果你的basemesh不是非常低的多边形，这些变化往往是微妙的，并且变得不那么重要。</font><font style="vertical-align: inherit;">基本上，不要指望流离失所是一个神奇的子弹。</font><font style="vertical-align: inherit;">如果您只是尝试通过置换贴图将一个简单的多边形立方体转换为苹果，那么如果您遇到问题，请不要感到惊讶。</font><font style="vertical-align: inherit;">为您的低多边形对象提供正确的形状和多边形分辨率，并让位移包含细节。</font></font></p><br></div><div id="procedures" class="subsection scrollto"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">置换程序</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">所以现在我们知道浮点位移图如何工作以及对它们的期望。</font><font style="vertical-align: inherit;">只需按下正确的按钮即可在我们的3D软件包中正确生成并应用它们。</font><font style="vertical-align: inherit;">下面我已经详细介绍了如何从您选择的主要雕刻包中生成浮点位移贴图的步骤 - 并将它们应用于您选择的渲染器中。</font></font></p><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以下工作流程中的每个设置都是仔细测试的结果。</font><font style="vertical-align: inherit;">如果您对任何设置感到好奇，只需单击步骤旁边的“（？）”即可查看弹出窗口，说明设置的作用以及设置原因。</font></font></p><br><div class="column_left"><div class="subtitle"><label for="procedure_from_select"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">选择您的雕刻软件：</font></font></label><select id="procedure_from_select"><option value="ZBrushMultimap"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">ZBrush（多重贴图导出器）</font></font></option><option value="ZBrushSubpalette"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">ZBrush（置换子面板）</font></font></option><option value="Mudbox"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Mudbox中</font></font></option></select></div><div id="ZBrushMultimap" class="procedure_from" style="display: block;"><ol><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">打开或导入具有多个细分级别的高分辨率网格。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果从其他程序导入高分辨率网格 - 通过转到工具选项板重建下部细分，展开几何子选项板，然后单击“重建细分”按钮，直到达到所需的最低级别。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在ZPlugin面板中，展开Multi Map Exporter子选项板，并确保突出显示Displacement按钮。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将“地图大小”滑块设置为最适合您需要的图像分辨率。</font><font style="vertical-align: inherit;">（推荐2048或更高）</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'翻转V'设置为ON。（将此设置为ON可以补偿ZBrush内部处理UV贴图的方式 - 与Maya和Max等程序相比，它沿垂直轴翻转。）</font></font><div id="explain_zbrush_flipv" class="hide"><div class="subtitle"><h2>Flip V Setting</h2></div><p>Setting this to ON compensates for the way ZBrush handles UV maps internally - which is flipped along the vertical axis compared to programs like Maya and Max.</p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">单击“导出选项”按钮以显示其他地图选项。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将“SubDiv Level”滑块设置为您想要低分辨率basemesh的细分级别。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将“自适应”设置为OFF。（将此设置为ON应该可以生成更高质量的置换贴图。但通过实验，我发现它不可靠，而且在更大的分辨率下通常是不必要的。有时甚至会导致位移图完全无用 - 所以我建议将其关闭。） </font></font><div id="explain_zbrush_adaptive" class="hide"><div class="subtitle"><h2>Adaptive Setting</h2></div><p>Setting this to ON is supposed to produce a higher-quality displacement map.<br>But through experimentation I have found it to be unreliable and generally unnecessary at larger resolutions.<br>At times it can even result in a displacement map that is completely useless - So I recommend leaving it OFF.</p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'DPSubPix'设置为'4'。（此设置确定为对象创建的置换贴图的精度。较高的值会导致生成更高质量的置换贴图，但生成时间会更长。如果您的高分辨率网格是非常高的多边形（16mil或更大），或者您的置换贴图大小较低（2048或更低），那么您可以将其设置为较低的值，如2。）</font></font><div id="explain_zbrush_dpsubpix" class="hide"><div class="subtitle"><h2>DPSubPix Setting</h2></div><p>This setting determines the accuracy of the displacement map created for the object.<br>Higher values cause a higher-quality displacement map to be generated, but will take longer to generate.<br>If your high resolution mesh is very high poly (16mil or larger), or your displacement map size low (2048 or lower), then you can get away with setting this to a lower value like 2.</p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'SmoothUV'设置为OFF。（将此设置为OFF将禁用我们的低分辨率网格上的UV平滑。我们将在渲染器中匹配此设置，以确保准确映射位移详细信息。）</font></font><div id="explain_zbrush_smoothuv" class="hide"><div class="subtitle"><h2>SmoothUV Setting</h2></div><p>Setting this to OFF disables UV Smoothing on our low res mesh.<br>We'll match this setting in our renderer to ensure an accurate mapping of displacement details.</p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'Mid'设置为'0'。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_zbrush_mid" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_zbrush_mid" class="hide"><div class="subtitle"><h2>Mid Setting</h2></div><p>Setting this to 0 makes the displacement map pixel value of 0.0 act as the mid point where no displacement is being applied - which is what we want for an accurate floating-point displacement map.</p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'3 Channels'设置为OFF。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_zbrush_3channels" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_zbrush_3channels" class="hide"><div class="subtitle"><h2>3 Channels Setting</h2></div><p>Setting this to OFF stores our displacement information using only the RED channel of our generated displacement map.<br>32bit Displacement only needs one channel to store its info, so this setting will slightly reduce file sizes without losing any info.</p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'32位'和'EXR'设置为ON。（将此设置为OFF仅使用我们生成的置换贴图的RED通道存储位移信息。32位置换只需要一个通道来存储其信息，因此此设置将略微减小文件大小而不会丢失任何信息。）</font></font><div id="explain_zbrush_32bit" class="hide"><div class="subtitle"><h2>32Bit Setting</h2></div><p>Setting this to ON enables the export of a 32bit floating-point displacement map.</p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'Scale'设置为'1'。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_zbrush_scale" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_zbrush_scale" class="hide"><div class="subtitle"><h2>Scale Setting</h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">此设置确定生成的置换贴图的像素值的比例。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">由于我们需要精确的1：1匹配，因此我们将其保留为默认值1。</font></font></p></div></li><li><a class="fancybox" href="https://www.cggallery.com/images/tutorials/displacement_settings_zbrush_multimap.jpg" title="ZBrush设置" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以下</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是要验证的上述设置的屏幕抓图。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">单击“创建所有地图”按钮，选择要保存地图的文件名和目录。</font><font style="vertical-align: inherit;">（如果文件类型显示TIF，请不要担心，因为我们启用了EXR按钮，它实际上将以EXR格式保存）</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">单击“保存”按钮以运行置换贴图生成。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">您的置换贴图现在可以使用了！</font></font></li></ol><br><p><b><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关于ZBrush的和Multimap之导出插件的说明：</font></font></b><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在ZBrush 4R6之前的版本中，Multimap之导出插件只允许出口32位中的TIFF格式-这Maya和3ds Max中可发生问题。</font><font style="vertical-align: inherit;">因此，如果您在4R6之前的版本中使用Multimap Exporter插件，您可能必须在Nuke或Photoshop中将生成的32位TIFF转换为EXR，然后才能在Maya或3ds Max中使用它们。</font><font style="vertical-align: inherit;">如果在Photoshop中转换为EXR，请确保图像模式（图像菜单 - &gt;模式）设置为RGB颜色而非灰度，因为这也会导致问题。</font></font></p></div><div id="ZBrushSubpalette" class="procedure_from hidden" style="display: none;"><ol><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">打开或导入具有多个细分级别的高分辨率网格。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果从其他程序导入高分辨率网格 - 通过转到工具选项板重建下部细分，展开几何子选项板，然后单击“重建细分”按钮，直到达到所需的最低级别。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“工具”调板中，展开“几何”子选项板，并将当前“SDiv”值设置为您希望低分辨率基础网格的细分级别。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“工具”调板中，展开“UV贴图”子选项板，并将“UV贴图大小”设置为最适合您需要的图像分辨率。</font><font style="vertical-align: inherit;">（推荐2048或更高）</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“工具”调板中，展开“置换”子选项板，然后单击右上角的大空框并从弹出菜单中选择任何alpha图像。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">现在图像被加载到框中，下方和右侧的“Mid”值不再显示为灰色，因此将其设置为值“0”。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">单击同一个包含alpha图像的大框，然后从左上角选择“Alpha Off”再次清除该框。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将“自适应”设置为OFF。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_zbrush_adaptive" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'DPSubPix'设置为'4'。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_zbrush_dpsubpix" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'SmoothUV'设置为OFF。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_zbrush_smoothuv" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'翻转V'设置为ON。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_zbrush_flipv" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'Scale'设置为'1'。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_zbrush_scale" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'3 Channels'设置为OFF。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_zbrush_3channels" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'32Bit'设置为ON。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_zbrush_32bit" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a></li><li><a class="fancybox" href="https://www.cggallery.com/images/tutorials/displacement_settings_zbrush_subpalette.jpg" title="ZBrush设置" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以下</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是要验证的上述设置的屏幕抓图。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">单击“创建和导出地图”按钮，选择要保存地图的文件名和目录，然后选择“OpenEXR 32bit”作为文件类型。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">单击“保存”按钮以运行置换贴图生成。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">您的置换贴图现在可以使用了！</font></font></li></ol></div><div id="Mudbox" class="procedure_from hidden" style="display: none;"><ol><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">打开或导入具有多个细分级别的高分辨率网格。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果从其他程序导入高分辨率网格 - 通过选择“网格 - &gt;重建细分级别”重建下部细分</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从菜单栏转到“UV和地图 - &gt;提取纹理贴图 - &gt;新操作”。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从“要生成的地图”列表中选中“置换地图”。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“目标模型”框中：为您的basemesh选择最低所需细分级别的网格 - 通常为0级。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'Smooth Target Models'设置为CHECKED。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_mudbox_smoothtarget" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_mudbox_smoothtarget" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">平滑目标模型设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将此设置为CHECKED将在低分辨率网格变为细分曲面后生成位移贴图。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这也是我们如何设置相应的渲染器以在渲染时处理低分辨率网格。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将“Smooth Target UVs”设置为UNCHECKED。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_mudbox_smoothuv" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_mudbox_smoothuv" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">平滑目标UV设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将此设置为UNCHECKED将禁用我们的低分辨率网格上的UV平滑。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">我们将在渲染器中匹配此设置，以确保准确映射位移详细信息。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将“使用折痕和硬边”设置为“已检查”。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“源模型”框中：在最高细分级别选择网格。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'Smooth Source Models'设置为CHECKED。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_mudbox_smoothsource" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_mudbox_smoothsource" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">平滑源模型设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将此设置为CHECKED将应用多边形面平滑到最高级别网格，这将平滑高分辨率网格中仍然可见的任何多边形边缘。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这个值变得不那么重要了你的最高细分级别的更高的polycount，并且可以选择在非常高的多边形级别保持UNCHECKED。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将方法设置为'Ray Casting' </font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_mudbox_method" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_mudbox_method" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法设定</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">设置射线投射方法通常会提供最高质量的置换贴图。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">但是如果遇到交叉或薄几何的问题，您也可以尝试“细分”方法。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将“选择样品”设置为“最接近LowRes网格”。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'Test Both Sides'设置为CHECKED。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">单击“最佳猜测”按钮以估计搜索距离编号。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_mudbox_searchdistance" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_mudbox_searchdistance" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">搜索距离设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">搜索距离指定从低分辨率网格物体表面投射光线到搜索高分辨率网格物体表面的距离。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">最佳猜测按钮通常可以为此提供一个足够好的工作，但有时在极端位移的情况下它可能会达不到。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果您知道对象具有极端位移量，则最好手动将其设置为更高的值，以确保在置换贴图中不会发生削波。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从下拉列表中选择“为所有目标生成一个地图”。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">图像大小：选择最适合您需求的图像分辨率（建议2048或更高）。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'Antialiasing'设置为'Off'。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_mudbox_antialiasing" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_mudbox_antialiasing" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">搜索距离设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将此设置为UNCHECKED可确保置换贴图中的像素不会受到抗锯齿的影响 - 这会扭曲其高度值。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将“Normalize To Search Distance”设置为UNCHECKED。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_mudbox_normalize" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_mudbox_normalize" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">搜索距离设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将此设置为UNCHECKED将禁用根据“搜索距离”值过早夹紧置换贴图像素值。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将“地图类型”设置为“纹理”。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">单击“基本文件名”选项框（...），选择要保存地图的文件名和目录，然后选择“OpenEXR 32bit Floating-Point”作为文件类型。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将“预览为凹凸贴图”设置为UNCHECKED。</font></font></li><li><a class="fancybox" href="https://www.cggallery.com/images/tutorials/displacement_settings_mudbox.jpg" title="Mudbox设置" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以下</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是要验证的上述设置的屏幕抓图。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">单击“提取”按钮以运行置换贴图生成。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">您的置换贴图现在可以使用了！</font></font></li></ol></div></div><div class="column_right"><div class="subtitle"><label for="procedure_to_select"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">选择您的渲染器：</font></font></label><select id="procedure_to_select"><option value="V-Ray_Maya"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">maya for V-Ray</font></font></option><option value="V-Ray_Max"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">适用于3ds Max的V-Ray</font></font></option><option value="V-Ray_C4D"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">适用于Cinema 4D的V-Ray</font></font></option><option value="Arnold_Maya"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">arnold for maya</font></font></option></select></div><div id="V-Ray_Maya" class="procedure_to" style="display: none;"><ol><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">导入您的低分辨率网格（仔细检查您的低分辨率网格是从您生成的置换贴图完全相同的网格）。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">选择网格，打开属性编辑器，然后选择对象的“形状”节点选项卡。</font><font style="vertical-align: inherit;">然后在属性编辑器的菜单中点击“属性 - &gt;的V-Ray”，并检查“分区”，“细分和置换质量”和“位移控制”这些额外的属性添加到您的网格的形状节点。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">滚动到属性编辑器的底部，展开“额外V-Ray属性”卷展栏。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'渲染为细分曲面'设置为CHECKED。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_maya_vray_subdivision" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_maya_vray_subdivision" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">渲染为细分设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将此设置为CHECKED将在应用置换贴图之前将我们的低分辨率网格转换为平滑细分曲面。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这与ZBrush和Mudbox设置生成置换贴图的方式相匹配。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'Subdivide UVs'设置为UNCHECKED。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_maya_vray_smoothuv" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_maya_vray_smoothuv" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">细分UV设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将此设置为UNCHECKED将禁用我们的低分辨率网格上的UV平滑。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这与ZBrush和Mudbox设置生成置换贴图的方式相匹配。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将“Edge Length”设置为4.0以开始，并根据需要降低以获得更好的位移质量（以更高的渲染时间为代价）。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从Displacement Type下拉列表中选择“Normal Displacement”。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_maya_vray_normal" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_maya_vray_normal" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">正常位移设置</font></font></h2></div><p>While Normal Displacement is generally the best all-around setting for displacement mapping type, you may be able to get even higher quality results with 2D Mapping.<br>As long as your UVs are good, you can experiment with both displacement types to see which gives the best results.</p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将'Keep Continuity'设置为CHECKED。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_maya_vray_continuity" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_maya_vray_continuity" class="hide"><div class="subtitle"><h2>Keep Continuity Setting</h2></div><p>Setting this to CHECKED will have V-Ray keep displaced face edges connected without splits.</p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">取消选中“过滤纹理”以禁用对置换贴图的过滤，并保留雕刻的高频细节。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将所有其他设置保留为默认值。  </font></font><a class="fancybox" href="https://www.cggallery.com/images/tutorials/displacement_settings_vray_maya.jpg" title="V-Ray Maya设置" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以下</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是要验证的上述设置的屏幕抓图。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">打开Hypershade，创建VRayMtl并将其分配给网格。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在Hypershade的Shading Groups选项卡中，选择新创建的VRayMtlSG并按住右键选择“Graph Network”以在Hypergraph的工作区中查看对象和VRayMtl节点。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从Maya的左侧超大阴影节点列表中向工作区添加“置换”节点，然后从“置换”节点中间点击拖动到VRayMtlSG节点，然后选择“默认”。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从maya左侧的hypershade节点列表中将“File”节点添加到工作区，从File节点到Displacement节点的中间单击拖动，然后选择“Other ...”</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在连接编辑器的左侧，单击“OutColor”旁边的加号将其展开并选择“OutColorR”，然后选择右侧的“Displacement”值来连接它们。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_maya_vray_outcolor" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_maya_vray_outcolor" class="hide"><div class="subtitle"><h2>OutColorR to Displacement Setting</h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">我们将ZBrush和Mudbox都设置为仅将生成的置换贴图信息存储到RED通道。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">因此，将OutColorR连接到位移量是逻辑上的，并避免Maya将RED，GREEN和BLUE通道平均在一起的趋势 - </font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这将导致位移强度应该是1/3（因为其他通道只是黑色）。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在超图中选择“文件”节点，打开属性编辑器，然后在“图像名称”框中加载先前生成的置换贴图。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在属性编辑器的菜单中，单击“属性 - &gt; V-Ray”并选中“纹理输入Gamma”和“允许负色”以将这些额外属性添加到“文件”节点。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">滚动到属性编辑器的底部，打开“V-Ray Extra Attributes”卷展栏，将颜色空间更改为“Linear”并选中“Allow Negative Colors”。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">打开“Maya渲染设置”窗口，转到“V-Ray”选项卡，然后打开“全局选项”卷展栏。</font><font style="vertical-align: inherit;">确保选中“Displacement”旁边的复选框。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">你们都安装好了！</font><font style="vertical-align: inherit;">渲染以验证。</font></font></li></ol></div><div id="V-Ray_Max" class="procedure_to hidden" style="display: block;"><ol><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">导入您的低分辨率网格（仔细检查您的低分辨率网格是从您生成的置换贴图完全相同的网格）。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">选择网格，然后在“修改”选项卡中为对象添加“展开UVW”修改器。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“编辑UV”卷展栏下，单击“打开UV编辑器...”按钮。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“编辑UV”窗口中，激活顶点选择模式并选择所有UV（Ctrl + A）。</font><font style="vertical-align: inherit;">然后转到“工具 - &gt;断开”以分开所有UV边缘。</font><font style="vertical-align: inherit;">关闭“编辑UV”窗口。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_max_vray_breakuv" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_max_vray_breakuv" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">打破UV设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这是一个阻止3ds Max平滑你的UV的黑客，因为它没有内置这个功能</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.Meshsmooth的'Old Style Mapping'类似但仍然无法预测地扭曲你的UV。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“展开UVW”修改器上方的对象上添加“Turbosmooth”修改器。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将迭代次数设置为0（或者您希望在视口中看到的任何平滑度）。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">选中'渲染Iters'并将其值设置为3. </font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_max_vray_renderiters" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_max_vray_renderiters" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">渲染迭代设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将其设置为值3可确保网格尽可能接近细分曲面，从而防止边缘伪影。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果您的低分辨率网格具有相当高的多边形数，那么您可以将其设置为值2。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">向对象添加“VRayDisplacementMod”修改器。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">检查'3D Mapping'。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_max_vray_3dmapping" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_max_vray_3dmapping" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">3D映射设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">虽然3D Mapping通常是位移贴图类型的最佳全方位设置，但您可以通过2D贴图获得更高质量的结果。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">只要你的紫外线很好，你可以试验两种位移类型，看看哪种效果最好。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">单击“无”按钮，然后从“材质/贴图浏览器”弹出窗口中选择“VRayHDRI”。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">打开材质编辑器并将VRayHDRI按钮拖动到空材质编辑器插槽或石墨材质节点图，然后选择“实例”作为方法。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在VRayHDRI的属性中，选择位图框旁边的“...”按钮，找到并将先前生成的置换贴图加载到位图框中。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“颜色空间”组中，确保将“类型”设置为“无”以告诉V-Ray我们生成的置换贴图是线性图像。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将所有其他设置保留为默认值。</font><font style="vertical-align: inherit;">您可以关闭或最小化材质编辑器。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">返回VRayDisplacementMod修改器，取消选中“Filter Texmap”以禁用对置换贴图的过滤并保留雕刻的高频细节。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将“Edge Length”设置为4.0以开始，并根据需要降低以获得更好的位移质量（以更高的渲染时间为代价）。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">检查'保持连续性'。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_max_vray_continuity" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_max_vray_continuity" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">保持连续性设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将此设置为CHECKED将使V-Ray保持移位的面边缘连接而不会分割。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将“Texmap Min”和“Texmap Max”设置为超出生成的置换贴图中找到的最大正像素值或负像素值的值。</font><font style="vertical-align: inherit;">这个值可以自动在核弹使用“CurvesTool”节点“最大亮度像素”模式所看到发现</font></font><a class="fancybox" href="https://www.cggallery.com/images/tutorials/displacement_settings_nuke.jpg" title="核弹设置" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这里</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">如果您无法访问Nuke，那么您可以通过从-1.0分钟和1.0最大值开始实验这些值。</font><font style="vertical-align: inherit;">如果您发现在位移的极高或低点发生任何削波，请展开这些值。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_max_vray_bounds" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_max_vray_bounds" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Texmap最小和最大设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">此值设置位移的边界，因此我们的想法是将其设置得足够大，使其包含所有移位的细节而不进行任何裁剪。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将这些值设置得过高可能会降低渲染器的速度。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将所有其他设置保留为默认值。</font></font><br><a class="fancybox" href="https://www.cggallery.com/images/tutorials/displacement_settings_vray_max.jpg" title="V-Ray Max设置" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以下</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是要验证的上述设置的屏幕抓图。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">打开3ds Max Render Setup窗口，转到“V-Ray”选项卡，然后打开“Global Switches”卷展栏。</font><font style="vertical-align: inherit;">确保选中“Displacement”旁边的复选框。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">你们都安装好了！</font><font style="vertical-align: inherit;">渲染以验证。</font></font></li></ol></div><div id="V-Ray_C4D" class="procedure_to hidden" style="display: none;"><ol><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">导入您的低分辨率网格（仔细检查您的低分辨率网格是从您生成的置换贴图完全相同的网格）。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从材质管理器的“创建” - &gt;“着色器” - &gt;“VrayBridge”菜单中创建“vrayAdvancedMaterial”。</font><font style="vertical-align: inherit;">将其拖到对象管理器中的模型上。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">接下来，从同一菜单创建一个'vrayDisplaceMaterial'。</font><font style="vertical-align: inherit;">将其拖动到对象管理器中的模型上，这样您现在应该将两个材质并排放置在高级材质右侧的位移上。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">打开vrayDisplaceMaterial。</font><font style="vertical-align: inherit;">在纹理槽中，单击箭头并添加VrayBridge  - &gt; vrayShader。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">单击着色器，然后在下拉列表中将其设置为“vrayBitmap”。</font><font style="vertical-align: inherit;">将颜色空间设置为线性并加载到生成的置换贴图中。</font><font style="vertical-align: inherit;">最后选中“允许负色”框。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">返回vrayDisplaceMaterial的主要选项，选中“Tounds Bounds”和“Use As Subdivision Surface”框。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">还要确保将“置换”类型设置为“3D映射”，并选中“保持连续性”。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">此时我们还要确保'Amount'值设置为'3.0'而不是'1.0'。</font><font style="vertical-align: inherit;">这是一个特别需要Cinema 4D的黑客，因为它期望我们EXR的GREEN和BLUE通道中的位移信息。</font><font style="vertical-align: inherit;">当它们在这些通道中找不到任何内容时（因为我们仅在RED通道中保存了位移信息），它会使用空的GREEN和BLUE通道平均RED通道中的信息 - 导致位移1/3的强度应该是它应该的。</font><font style="vertical-align: inherit;">因此，将“数量”设置设置为3.0而不是1.0可以补偿这一点，以便为我们提供与原始高分辨率网格匹配的正确位移量。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“渲染设置” - &gt;“VrayBridge” - &gt;“位移”中，首先将默认边长设置为“4.0”，然后根据需要降低以获得更好的位移质量（以更高的渲染时间为代价）。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">确保在vray渲染设置的选项选项卡中选中Displacement。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">你们都安装好了！</font><font style="vertical-align: inherit;">渲染以验证。</font></font></li></ol><br><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">由</font></font><a href="http://www.generatormotion.com/" target="_blank"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Rich Nosworthy</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">慷慨提供的C4D程序</font><font style="vertical-align: inherit;">。</font></font></p><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果还有什么不清楚的话，</font><font style="vertical-align: inherit;">他还会整理</font><font style="vertical-align: inherit;">上述程序</font><font style="vertical-align: inherit;">的</font></font><a href="https://vimeo.com/83413372" target="_blank"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">视频教程</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font></font></p> </div><div id="Arnold_Maya" class="procedure_to hidden" style="display: none;"><ol><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">导入您的低分辨率网格（仔细检查您的低分辨率网格是从您生成的置换贴图完全相同的网格）。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">选择网格，打开属性编辑器，然后展开“Arnold”卷展栏以及包含的“细分”和“置换属性”卷展栏。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“细分”卷展栏下，将“类型”设置为“catclark”。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_maya_arnold_subdivision" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_maya_arnold_subdivision" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">细分设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将此设置为CATCLARK将在应用置换贴图之前将我们的低分辨率网格转换为平滑细分曲面。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这与ZBrush和Mudbox设置生成置换贴图的方式相匹配。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“细分”卷展栏下，将“迭代”设置为类似于5的值，并根据需要提高以获得更好的位移质量（以更高的渲染时间为代价）。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“细分”卷展栏下，将“UV平滑”设置为“线性”。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_maya_arnold_smoothuv" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_maya_arnold_smoothuv" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">UV平滑设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将此设置为LINEAR将禁用我们的低分辨率网格上的UV平滑。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这与ZBrush和Mudbox设置生成置换贴图的方式相匹配。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在“置换属性”卷展栏下，将“边距填充”设置为超出生成的置换贴图中找到的最大正像素值或负像素值的值。</font><font style="vertical-align: inherit;">此值可在核弹使用“CurvesTool”节点“最大亮度像素”模式看到自动找到</font></font><a class="fancybox" href="https://www.cggallery.com/images/tutorials/displacement_settings_nuke.jpg" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这里</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">如果您无法访问Nuke，那么您可以从1.0开始试验此值。</font><font style="vertical-align: inherit;">如果您发现在位移的极高或低点发生任何削波，则提高该值。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_maya_arnold_bounds" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_maya_arnold_bounds" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">边界填充设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">此值设置位移的边界，因此我们的想法是将其设置得足够大，使其包含所有移位的细节而不进行任何裁剪。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将这些值设置得过高可能会降低渲染器的速度。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将所有其他设置保留为默认值。</font></font><br><a class="fancybox" href="https://www.cggallery.com/images/tutorials/displacement_settings_arnold.jpg" title="阿诺德设置" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以下</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是要验证的上述设置的屏幕抓图。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">打开Hypershade并为对象指定aiStandard材质。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">单击Hypershade中的着色组选项卡，然后选择新创建的aiStandardSG并按住右键选择“Graph Network”，以便在Hypergraph的工作区中看到对象和aiStandard节点。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从maya的左侧超文本节点列表中向工作区添加“Displacement”节点，然后从Displacement节点中间点击拖动到aiStandardSG节点，然后选择“Default”。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从Maya的左侧超文本节点列表中将“文件”节点添加到工作区，然后从“文件”节点中间点击拖动到“置换”节点，然后选择“其他...”</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在连接编辑器的左侧，单击“OutColor”旁边的加号将其展开并选择“OutColorR”，然后选择右侧的“Displacement”值进行连接。</font></font><a class="fancybox" href="https://www.cggallery.com/tutorials/displacement/#explain_maya_arnold_outcolor" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（？）</font></font></a><div id="explain_maya_arnold_outcolor" class="hide"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">OutColorR到位移设置</font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">我们将ZBrush和Mudbox都设置为仅将生成的置换贴图信息存储到RED通道。</font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">因此，将OutColorR连接到位移量是逻辑上的，并避免Maya将RED，GREEN和BLUE通道平均在一起的趋势 - </font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这将导致位移强度应该是1/3（因为其他通道只是黑色）。</font></font></p></div></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在超图中选择“文件”节点，转到属性编辑器，然后在“图像名称”框中加载先前生成的置换贴图。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">打开Maya渲染设置窗口，转到“覆盖”选项卡，并确保未选中“忽略位移”旁边的复选框。</font></font></li><li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">你们都安装好了！</font><font style="vertical-align: inherit;">渲染以验证。</font></font></li></ol></div></div><div class="clr"></div></div><div id="conclusion" class="subsection end"><div class="subtitle"><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"><h2>结论</h2></font></font></h2></div><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">希望这有助于为您清理常常令人困惑的Displacement Mapping主题。</font><font style="vertical-align: inherit;">这是一个非常重要的工具，可帮助您保持高分辨率资产的精益和生产友好性。</font></font></p><font color="#FF0000"><h4>转自akin</h4></font><div class="clr"></div></div></div><div class="clr"></div></div></body></html><!-- 来必力City版安装代码 --><div id="lv-container" data-id="city" data-uid="MTAyMC80NTQ2Ny8yMTk3OQ=="><script type="text/javascript">   (function(d, s) {       var j, e = d.getElementsByTagName(s)[0];       if (typeof LivereTower === 'function') { return; }       j = d.createElement(s);       j.src = 'https://cdn-city.livere.com/js/embed.dist.js';       j.async = true;       e.parentNode.insertBefore(j, e);   })(document, 'script');</script><noscript> 为正常使用来必力评论功能请激活JavaScript</noscript></div><!-- City版安装代码已完成 --></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;**&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本教程试图涵盖和阐明从ZBrush或Mudbox生成和应用精确位移贴图到Maya的V-Ray，3ds Max的V-Ray，Cinema 4D的V-Ray或Maya的Arnold（MtoA）的过程&lt;/p&gt;
&lt;p&gt;**&lt;br&gt;
    
    </summary>
    
      <category term="外网知识分享" scheme="https://myblong.zkb/categories/%E5%A4%96%E7%BD%91%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="渲染" scheme="https://myblong.zkb/tags/%E6%B8%B2%E6%9F%93/"/>
    
      <category term="zbrush" scheme="https://myblong.zkb/tags/zbrush/"/>
    
  </entry>
  
  <entry>
    <title>houdini深度层的输出笔记</title>
    <link href="https://myblong.zkb/2019/07/30/share/houdini%E6%B7%B1%E5%BA%A6%E5%90%88%E6%88%90%E8%BE%93%E5%87%BA/"/>
    <id>https://myblong.zkb/2019/07/30/share/houdini深度合成输出/</id>
    <published>2019-07-29T16:12:38.222Z</published>
    <updated>2019-07-29T16:12:38.312Z</updated>
    
    <content type="html"><![CDATA[<p>**</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p> 主要是houdini输出深度层的设置<br>**<br><a id="more"></a><br><html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns="http://www.w3.org/TR/REC-html40"><head><meta http-equiv="Content-Type" content="text/html; charset=gb2312"><meta name="ProgId" content="Word.Document"><meta name="Generator" content="Microsoft Word 14"><meta name="Originator" content="Microsoft Word 14"><title></title><!--[if gte mso 9]><xml><o:DocumentProperties><o:Author>zkb</o:Author><o:LastAuthor>zkb</o:LastAuthor><o:Revision>1</o:Revision><o:Pages>1</o:Pages></o:DocumentProperties><o:CustomDocumentProperties><o:KSOProductBuildVer dt:dt="string" >2052-11.3.0.8632</o:KSOProductBuildVer></o:CustomDocumentProperties></xml><![endif]--><!--[if gte mso 9]><xml><o:OfficeDocumentSettings></o:OfficeDocumentSettings></xml><![endif]--><!--[if gte mso 9]><xml><w:WordDocument><w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel><w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery><w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery><w:DocumentKind>DocumentNotSpecified</w:DocumentKind><w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing><w:View>Web</w:View><w:Compatibility><w:DontGrowAutofit/><w:BalanceSingleByteDoubleByteWidth/><w:DoNotExpandShiftReturn/><w:UseFELayout/></w:Compatibility><w:Zoom>0</w:Zoom></w:WordDocument></xml><![endif]--><!--[if gte mso 9]><xml><w:LatentStyles DefLockedState="false"  DefUnhideWhenUsed="true"  DefSemiHidden="true"  DefQFormat="false"  DefPriority="99"  LatentStyleCount="260" ><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  QFormat="true"  Name="Normal" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  QFormat="true"  Name="heading 1" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  QFormat="true"  Name="heading 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  QFormat="true"  Name="heading 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  QFormat="true"  Name="heading 4" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  QFormat="true"  Name="heading 5" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  QFormat="true"  Name="heading 6" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  QFormat="true"  Name="heading 7" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  QFormat="true"  Name="heading 8" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  QFormat="true"  Name="heading 9" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="index 1" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="index 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="index 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="index 4" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="index 5" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="index 6" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="index 7" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="index 8" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="index 9" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="toc 1" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="toc 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="toc 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="toc 4" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="toc 5" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="toc 6" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="toc 7" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="toc 8" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="toc 9" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Normal Indent" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="footnote text" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="annotation text" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="header" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="footer" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="index heading" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  QFormat="true"  Name="caption" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="table of figures" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="envelope address" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="envelope return" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="footnote reference" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="annotation reference" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="line number" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="page number" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="endnote reference" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="endnote text" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="table of authorities" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="macro" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="toa heading" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Bullet" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Number" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List 4" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List 5" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Bullet 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Bullet 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Bullet 4" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Bullet 5" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Number 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Number 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Number 4" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Number 5" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  QFormat="true"  Name="Title" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Closing" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Signature" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  UnhideWhenUsed="false"  Name="Default Paragraph Font" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Body Text" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Body Text Indent" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Continue" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Continue 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Continue 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Continue 4" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="List Continue 5" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Message Header" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  QFormat="true"  Name="Subtitle" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Salutation" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Date" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Body Text First Indent" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Body Text First Indent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Note Heading" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Body Text 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Body Text 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Body Text Indent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Body Text Indent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Block Text" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Hyperlink" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="FollowedHyperlink" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  QFormat="true"  Name="Strong" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  QFormat="true"  Name="Emphasis" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Document Map" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Plain Text" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="E-mail Signature" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Normal (Web)" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="HTML Acronym" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="HTML Address" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="HTML Cite" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="HTML Code" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="HTML Definition" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="HTML Keyboard" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="HTML Preformatted" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="HTML Sample" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="HTML Typewriter" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="HTML Variable" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  UnhideWhenUsed="false"  Name="Normal Table" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="annotation subject" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="No List" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="1 / a / i" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="1 / 1.1 / 1.1.1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Article / Section" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Simple 1" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Simple 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Simple 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Classic 1" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Classic 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Classic 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Classic 4" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Colorful 1" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Colorful 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Colorful 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Columns 1" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Columns 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Columns 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Columns 4" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Columns 5" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Grid 1" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Grid 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Grid 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Grid 4" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Grid 5" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Grid 6" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Grid 7" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Grid 8" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table List 1" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table List 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table List 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table List 4" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table List 5" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table List 6" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table List 7" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table List 8" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table 3D effects 1" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table 3D effects 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table 3D effects 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Contemporary" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Elegant" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Professional" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Subtle 1" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Subtle 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Web 1" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Web 2" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Web 3" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Balloon Text" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Grid" ></w:LsdException><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Theme" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Placeholder Text" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="No Spacing" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Paragraph" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Quote" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Intense Quote" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid Accent 6" ></w:LsdException></w:LatentStyles></xml><![endif]--><style>@font-face{font-family:"Times New Roman";}@font-face{font-family:"宋体";}@font-face{font-family:"Wingdings";}@font-face{font-family:"Calibri";}@font-face{font-family:"微软雅黑";}@font-face{font-family:"Verdana";}p.MsoNormal{mso-style-name:正文;mso-style-parent:"";margin:0pt;margin-bottom:.0001pt;mso-pagination:none;text-align:justify;text-justify:inter-ideograph;font-family:Calibri;mso-fareast-font-family:宋体;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;}span.10{font-family:'Times New Roman';}span.15{font-family:'Times New Roman';color:rgb(0,0,255);text-decoration:underline;text-underline:single;}p.p{mso-style-name:"普通\(网站\)";margin-top:5.0000pt;margin-right:0.0000pt;margin-bottom:5.0000pt;margin-left:0.0000pt;mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;mso-pagination:none;text-align:left;font-family:Calibri;mso-fareast-font-family:宋体;mso-bidi-font-family:'Times New Roman';font-size:12.0000pt;}span.msoIns{mso-style-type:export-only;mso-style-name:"";text-decoration:underline;text-underline:single;color:blue;}span.msoDel{mso-style-type:export-only;mso-style-name:"";text-decoration:line-through;color:red;}table.MsoNormalTable{mso-style-name:普通表格;mso-style-parent:"";mso-style-noshow:yes;mso-tstyle-rowband-size:0;mso-tstyle-colband-size:0;mso-padding-alt:0.0000pt 5.4000pt 0.0000pt 5.4000pt;mso-para-margin:0pt;mso-para-margin-bottom:.0001pt;mso-pagination:widow-orphan;font-family:'Times New Roman';font-size:10.0000pt;mso-ansi-language:#0400;mso-fareast-language:#0400;mso-bidi-language:#0400;}@page{mso-page-border-surround-header:no;  mso-page-border-surround-footer:no;}@page Section0{margin-top:72.0000pt;margin-bottom:72.0000pt;margin-left:90.0000pt;margin-right:90.0000pt;size:595.3000pt 841.9000pt;layout-grid:15.6000pt;}div.Section0{page:Section0;}</style></head><body style="tab-interval:21pt;text-justify-trim:punctuation;"><!--StartFragment--><div class="Section0" style="layout-grid:15.6000pt;"><p class="p" align="center" style="margin-top:5.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;mso-pagination:widow-orphan;text-align:center;"><b><span style="mso-spacerun:'yes';font-family:微软雅黑;color:rgb(255,0,0);font-weight:bold;font-size:12.0000pt;mso-font-kerning:0.0000pt;"><font face="微软雅黑">在</font>houdini中</span></b><b><span style="mso-spacerun:'yes';font-family:微软雅黑;color:rgb(255,0,0);font-weight:bold;font-size:12.0000pt;mso-font-kerning:0.0000pt;"><font face="微软雅黑">输出</font>deep层方法</span></b><b><span style="mso-spacerun:'yes';font-family:微软雅黑;color:rgb(255,0,0);font-weight:bold;font-size:12.0000pt;mso-font-kerning:0.0000pt;"><o:p></o:p></span></b></p><p class="p" style="margin-top:5.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;mso-pagination:widow-orphan;"><span style="mso-spacerun:'yes';font-family:Verdana;mso-fareast-font-family:宋体;font-size:12.0000pt;mso-font-kerning:0.0000pt;">Output Picture<font face="宋体">的路径不需要输入序列 直接</font><font face="Verdana">&#160; .jpg </font><font face="宋体">即可；</font></span><span style="mso-spacerun:'yes';font-family:Verdana;mso-fareast-font-family:宋体;font-size:12.0000pt;mso-font-kerning:0.0000pt;"><o:p></o:p></span></p><p class="p" style="margin-top:5.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;mso-pagination:widow-orphan;"><span style="mso-spacerun:'yes';font-family:Verdana;mso-fareast-font-family:宋体;font-size:12.0000pt;mso-font-kerning:0.0000pt;">DCM filename <font face="宋体">需要填写输出的路径序列</font><font face="Verdana">&#160; .exr</font></span><span style="mso-spacerun:'yes';font-family:Verdana;mso-fareast-font-family:宋体;font-size:12.0000pt;mso-font-kerning:0.0000pt;"><o:p></o:p></span></p><p class="p" style="margin-top:5.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;mso-pagination:widow-orphan;"><span style="mso-spacerun:'yes';font-family:微软雅黑;font-size:12.0000pt;mso-font-kerning:0.0000pt;"><font face="微软雅黑">在</font>nuke里用deep holdout抠像。</span><span style="mso-spacerun:'yes';font-family:微软雅黑;font-size:12.0000pt;mso-font-kerning:0.0000pt;"><o:p></o:p></span></p><p class="p" style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;margin-left:0.0000pt;mso-pagination:widow-orphan;"><span><a href="http://album.sina.com.cn/pic/002OjXwFzy7kC4jehYg9c" target="_blank" rel="external"><img width="624" height="502" src="https://i.loli.net/2019/07/30/5d3f1945ea6cb99034.png"></a></span><span style="mso-spacerun:'yes';font-family:Calibri;mso-fareast-font-family:宋体;mso-bidi-font-family:'Times New Roman';font-size:12.0000pt;mso-font-kerning:0.0000pt;"><o:p></o:p></span></p><p class="p" style="margin-top:5.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;mso-pagination:widow-orphan;"><span style="mso-spacerun:'yes';font-family:Calibri;mso-fareast-font-family:宋体;font-size:11.0000pt;mso-font-kerning:0.0000pt;"><br></span><span style="mso-spacerun:'yes';font-family:Calibri;mso-fareast-font-family:宋体;font-size:11.0000pt;mso-font-kerning:0.0000pt;">&#160;</span><span style="mso-spacerun:'yes';font-family:Calibri;mso-fareast-font-family:宋体;font-size:11.0000pt;mso-font-kerning:0.0000pt;"><o:p></o:p></span></p><p class="p" style="margin-top:5.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;mso-pagination:widow-orphan;"><b><i><span style="mso-spacerun:'yes';font-family:微软雅黑;color:rgb(34,177,76);font-weight:bold;font-style:italic;font-size:12.0000pt;mso-font-kerning:0.0000pt;"><font face="微软雅黑">一般</font></span></i></b><b><i><span style="mso-spacerun:'yes';font-family:微软雅黑;color:rgb(34,177,76);font-weight:bold;font-style:italic;font-size:12.0000pt;mso-font-kerning:0.0000pt;"><font face="微软雅黑">在出</font></span></i></b><b><i><span style="mso-spacerun:'yes';font-family:微软雅黑;color:rgb(34,177,76);font-weight:bold;font-style:italic;font-size:12.0000pt;mso-font-kerning:0.0000pt;">deep层给后期，有时候会偷懒直接渲染一个deep给他们，因为渲染deep的时间很慢，而且渲染出来的效果也还行。</span></i></b><span style="mso-spacerun:'yes';font-family:微软雅黑;color:rgb(34,177,76);font-size:12.0000pt;mso-font-kerning:0.0000pt;"><o:p></o:p></span></p><p class="p" style="margin-top:5.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;mso-pagination:widow-orphan;"><b><span style="mso-spacerun:'yes';font-family:微软雅黑;color:rgb(255,126,0);font-weight:bold;font-size:12.0000pt;mso-font-kerning:0.0000pt;"><font face="微软雅黑">但如果想要效果质量更好的话，时间条件也允许，，</font></span></b><span style="mso-spacerun:'yes';font-family:微软雅黑;color:rgb(255,126,0);font-size:12.0000pt;mso-font-kerning:0.0000pt;"><o:p></o:p></span></p><p class="p" style="margin-top:5.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;mso-pagination:widow-orphan;"><b><span style="mso-spacerun:'yes';font-family:微软雅黑;color:rgb(255,126,0);font-weight:bold;font-size:12.0000pt;mso-font-kerning:0.0000pt;"><font face="微软雅黑">最好出一个没有</font>deep的</span></b><b><span style="mso-spacerun:'yes';font-family:微软雅黑;color:rgb(255,126,0);font-weight:bold;font-size:12.0000pt;mso-font-kerning:0.0000pt;"><font face="微软雅黑">带各种通道的</font>aov序列</span></b><b><span style="mso-spacerun:'yes';font-family:微软雅黑;color:rgb(255,126,0);font-weight:bold;font-size:12.0000pt;mso-font-kerning:0.0000pt;"><font face="微软雅黑">；和一个不带任何灯光材质的</font>deep层，然后就再nuke里进行抠除。</span></b><span style="mso-spacerun:'yes';font-family:微软雅黑;color:rgb(255,126,0);font-size:12.0000pt;mso-font-kerning:0.0000pt;"><o:p></o:p></span></p><p class="p" style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;margin-left:0.0000pt;mso-pagination:widow-orphan;"><span><a href="http://album.sina.com.cn/pic/002OjXwFzy7tbG78CMl7d" target="_blank" rel="external"><img width="624" height="401" src="https://i.loli.net/2019/07/30/5d3f1945e1af061557.png"></a></span><span style="mso-spacerun:'yes';font-family:Calibri;mso-fareast-font-family:宋体;mso-bidi-font-family:'Times New Roman';font-size:12.0000pt;mso-font-kerning:0.0000pt;"><o:p></o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:Calibri;mso-fareast-font-family:宋体;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p></div><!--EndFragment--></body></html><!-- 来必力City版安装代码 --><div id="lv-container" data-id="city" data-uid="MTAyMC80NTQ2Ny8yMTk3OQ=="><script type="text/javascript">   (function(d, s) {       var j, e = d.getElementsByTagName(s)[0];       if (typeof LivereTower === 'function') { return; }       j = d.createElement(s);       j.src = 'https://cdn-city.livere.com/js/embed.dist.js';       j.async = true;       e.parentNode.insertBefore(j, e);   })(document, 'script');</script><noscript> 为正常使用来必力评论功能请激活JavaScript</noscript></div><!-- City版安装代码已完成 --></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;**&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt; 主要是houdini输出深度层的设置&lt;br&gt;**&lt;br&gt;
    
    </summary>
    
      <category term="houdini相关" scheme="https://myblong.zkb/categories/houdini%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="深度合成" scheme="https://myblong.zkb/tags/%E6%B7%B1%E5%BA%A6%E5%90%88%E6%88%90/"/>
    
      <category term="houdini" scheme="https://myblong.zkb/tags/houdini/"/>
    
  </entry>
  
  <entry>
    <title>houdini深度层的运用笔记</title>
    <link href="https://myblong.zkb/2019/07/29/share/houdini%E6%B7%B1%E5%BA%A6%E5%90%88%E6%88%90/"/>
    <id>https://myblong.zkb/2019/07/29/share/houdini深度合成/</id>
    <published>2019-07-29T15:31:11.126Z</published>
    <updated>2019-07-29T15:31:11.216Z</updated>
    
    <content type="html"><![CDATA[<p>**</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  深度通道给CG的后期制作提供了巨大的便利特别是对于LiveAction来说,那可是相当方便的.还有就是对于毛发跟烟雾流体的遮罩问题,也可以完美解决.调节起来也是相当方便的.唯一的问题就是Deep层的数据量是很大的.需要比较多的硬盘空间。</p><p>**<br><a id="more"></a><br><html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns="http://www.w3.org/TR/REC-html40"><head><meta http-equiv="Content-Type" content="text/html; charset=gb2312"><meta name="ProgId" content="Word.Document"><meta name="Generator" content="Microsoft Word 14"><meta name="Originator" content="Microsoft Word 14"><title></title><!--[if gte mso 9]><xml><o:DocumentProperties><o:Author>孔泽文</o:Author><o:LastAuthor>zkb</o:LastAuthor><o:Revision>1</o:Revision><o:Pages>6</o:Pages><o:Characters>335</o:Characters><o:Lines>2</o:Lines><o:Paragraphs>1</o:Paragraphs></o:DocumentProperties><o:CustomDocumentProperties><o:KSOProductBuildVer dt:dt="string" >2052-11.3.0.8632</o:KSOProductBuildVer></o:CustomDocumentProperties></xml><![endif]--><!--[if gte mso 9]><xml><o:OfficeDocumentSettings></o:OfficeDocumentSettings></xml><![endif]--><!--[if gte mso 9]><xml><w:WordDocument><w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel><w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery><w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery><w:DocumentKind>DocumentNotSpecified</w:DocumentKind><w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing><w:PunctuationKerning></w:PunctuationKerning><w:View>Web</w:View><w:Compatibility><w:DontGrowAutofit/><w:BalanceSingleByteDoubleByteWidth/><w:DoNotExpandShiftReturn/><w:UseFELayout/></w:Compatibility><w:Zoom>0</w:Zoom></w:WordDocument></xml><![endif]--><!--[if gte mso 9]><xml><w:LatentStyles DefLockedState="false"  DefUnhideWhenUsed="true"  DefSemiHidden="true"  DefQFormat="false"  DefPriority="99"  LatentStyleCount="260" ><w:LsdException Locked="false"  Priority="0"  SemiHidden="false"  UnhideWhenUsed="false"  QFormat="true"  Name="Normal" ></w:LsdException><w:LsdException Locked="false"  Priority="9"  SemiHidden="false"  UnhideWhenUsed="false"  QFormat="true"  Name="heading 1" ></w:LsdException><w:LsdException Locked="false"  Priority="9"  SemiHidden="false"  QFormat="true"  Name="heading 2" ></w:LsdException><w:LsdException Locked="false"  Priority="9"  SemiHidden="false"  QFormat="true"  Name="heading 3" ></w:LsdException><w:LsdException Locked="false"  Priority="9"  SemiHidden="false"  QFormat="true"  Name="heading 4" ></w:LsdException><w:LsdException Locked="false"  Priority="9"  SemiHidden="false"  QFormat="true"  Name="heading 5" ></w:LsdException><w:LsdException Locked="false"  Priority="9"  SemiHidden="false"  QFormat="true"  Name="heading 6" ></w:LsdException><w:LsdException Locked="false"  Priority="9"  SemiHidden="false"  QFormat="true"  Name="heading 7" ></w:LsdException><w:LsdException Locked="false"  Priority="9"  SemiHidden="false"  QFormat="true"  Name="heading 8" ></w:LsdException><w:LsdException Locked="false"  Priority="9"  SemiHidden="false"  QFormat="true"  Name="heading 9" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="index 1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="index 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="index 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="index 4" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="index 5" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="index 6" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="index 7" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="index 8" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="index 9" ></w:LsdException><w:LsdException Locked="false"  Priority="39"  SemiHidden="false"  Name="toc 1" ></w:LsdException><w:LsdException Locked="false"  Priority="39"  SemiHidden="false"  Name="toc 2" ></w:LsdException><w:LsdException Locked="false"  Priority="39"  SemiHidden="false"  Name="toc 3" ></w:LsdException><w:LsdException Locked="false"  Priority="39"  SemiHidden="false"  Name="toc 4" ></w:LsdException><w:LsdException Locked="false"  Priority="39"  SemiHidden="false"  Name="toc 5" ></w:LsdException><w:LsdException Locked="false"  Priority="39"  SemiHidden="false"  Name="toc 6" ></w:LsdException><w:LsdException Locked="false"  Priority="39"  SemiHidden="false"  Name="toc 7" ></w:LsdException><w:LsdException Locked="false"  Priority="39"  SemiHidden="false"  Name="toc 8" ></w:LsdException><w:LsdException Locked="false"  Priority="39"  SemiHidden="false"  Name="toc 9" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Normal Indent" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="footnote text" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="annotation text" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="header" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="footer" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="index heading" ></w:LsdException><w:LsdException Locked="false"  Priority="35"  SemiHidden="false"  QFormat="true"  Name="caption" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="table of figures" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="envelope address" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="envelope return" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="footnote reference" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="annotation reference" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="line number" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="page number" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="endnote reference" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="endnote text" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="table of authorities" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="macro" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="toa heading" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Bullet" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Number" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List 4" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List 5" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Bullet 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Bullet 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Bullet 4" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Bullet 5" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Number 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Number 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Number 4" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Number 5" ></w:LsdException><w:LsdException Locked="false"  Priority="10"  SemiHidden="false"  UnhideWhenUsed="false"  QFormat="true"  Name="Title" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Closing" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Signature" ></w:LsdException><w:LsdException Locked="false"  Priority="1"  SemiHidden="false"  Name="Default Paragraph Font" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Body Text" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Body Text Indent" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Continue" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Continue 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Continue 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Continue 4" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Continue 5" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Message Header" ></w:LsdException><w:LsdException Locked="false"  Priority="11"  SemiHidden="false"  UnhideWhenUsed="false"  QFormat="true"  Name="Subtitle" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Salutation" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Date" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Body Text First Indent" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Body Text First Indent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Note Heading" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Body Text 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Body Text 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Body Text Indent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Body Text Indent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Block Text" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Hyperlink" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="FollowedHyperlink" ></w:LsdException><w:LsdException Locked="false"  Priority="22"  SemiHidden="false"  UnhideWhenUsed="false"  QFormat="true"  Name="Strong" ></w:LsdException><w:LsdException Locked="false"  Priority="20"  SemiHidden="false"  UnhideWhenUsed="false"  QFormat="true"  Name="Emphasis" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Document Map" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Plain Text" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="E-mail Signature" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Normal (Web)" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="HTML Acronym" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="HTML Address" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="HTML Cite" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="HTML Code" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="HTML Definition" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="HTML Keyboard" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="HTML Preformatted" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="HTML Sample" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="HTML Typewriter" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="HTML Variable" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Normal Table" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="annotation subject" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="No List" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="1 / a / i" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="1 / 1.1 / 1.1.1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Article / Section" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Simple 1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Simple 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Simple 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Classic 1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Classic 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Classic 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Classic 4" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Colorful 1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Colorful 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Colorful 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Columns 1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Columns 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Columns 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Columns 4" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Columns 5" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Grid 1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Grid 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Grid 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Grid 4" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Grid 5" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Grid 6" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Grid 7" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Grid 8" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table List 1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table List 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table List 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table List 4" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table List 5" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table List 6" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table List 7" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table List 8" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table 3D effects 1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table 3D effects 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table 3D effects 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Contemporary" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Elegant" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Professional" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Subtle 1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Subtle 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Web 1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Web 2" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Web 3" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Balloon Text" ></w:LsdException><w:LsdException Locked="false"  Priority="39"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Table Grid" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Table Theme" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Placeholder Text" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="No Spacing" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="List Paragraph" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Quote" ></w:LsdException><w:LsdException Locked="false"  Priority="99"  SemiHidden="false"  Name="Intense Quote" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3 Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid Accent 1" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3 Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid Accent 2" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3 Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid Accent 3" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3 Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid Accent 4" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3 Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid Accent 5" ></w:LsdException><w:LsdException Locked="false"  Priority="60"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Shading Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="61"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light List Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="62"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Light Grid Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="63"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 1 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="64"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Shading 2 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="65"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 1 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="66"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium List 2 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="67"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 1 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="68"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 2 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="69"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Medium Grid 3 Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="70"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Dark List Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="71"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Shading Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="72"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful List Accent 6" ></w:LsdException><w:LsdException Locked="false"  Priority="73"  SemiHidden="false"  UnhideWhenUsed="false"  Name="Colorful Grid Accent 6" ></w:LsdException></w:LatentStyles></xml><![endif]--><style>@font-face{font-family:"Times New Roman";}@font-face{font-family:"宋体";}@font-face{font-family:"等线";}@font-face{font-family:"Wingdings";}p.MsoNormal{mso-style-name:正文;mso-style-parent:"";margin:0pt;margin-bottom:.0001pt;mso-pagination:none;text-align:justify;text-justify:inter-ideograph;font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;}span.10{font-family:等线;}span.15{font-family:等线;font-size:9.0000pt;}span.16{font-family:等线;font-size:9.0000pt;}p.MsoHeader{mso-style-name:页眉;mso-style-noshow:yes;margin:0pt;margin-bottom:.0001pt;border-bottom:1.0000pt solid windowtext;mso-border-bottom-alt:0.7500pt solid windowtext;padding:0pt 0pt 1pt 0pt ;layout-grid-mode:char;mso-pagination:none;text-align:center;font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:9.0000pt;mso-font-kerning:1.0000pt;}p.MsoFooter{mso-style-name:页脚;mso-style-noshow:yes;margin:0pt;margin-bottom:.0001pt;layout-grid-mode:char;mso-pagination:none;text-align:left;font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:9.0000pt;mso-font-kerning:1.0000pt;}span.msoIns{mso-style-type:export-only;mso-style-name:"";text-decoration:underline;text-underline:single;color:blue;}span.msoDel{mso-style-type:export-only;mso-style-name:"";text-decoration:line-through;color:red;}table.MsoNormalTable{mso-style-name:普通表格;mso-style-parent:"";mso-style-noshow:yes;mso-tstyle-rowband-size:0;mso-tstyle-colband-size:0;mso-padding-alt:0.0000pt 5.4000pt 0.0000pt 5.4000pt;mso-para-margin:0pt;mso-para-margin-bottom:.0001pt;mso-pagination:widow-orphan;font-family:'Times New Roman';font-size:10.0000pt;mso-ansi-language:#0400;mso-fareast-language:#0400;mso-bidi-language:#0400;}@page{mso-page-border-surround-header:no;  mso-page-border-surround-footer:no;}@page Section0{margin-top:72.0000pt;margin-bottom:72.0000pt;margin-left:90.0000pt;margin-right:90.0000pt;size:595.3000pt 841.9000pt;layout-grid:15.6000pt;}div.Section0{page:Section0;}</style></head><body style="tab-interval:21pt;text-justify-trim:punctuation;"><!--StartFragment--><div class="Section0" style="layout-grid:15.6000pt;"><p class="MsoNormal" align="center" style="text-align:center;"><b><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';color:rgb(255,0,0);font-weight:bold;font-size:18.0000pt;mso-font-kerning:1.0000pt;">D</span></b><b><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';color:rgb(255,0,0);font-weight:bold;font-size:18.0000pt;mso-font-kerning:1.0000pt;">eep</span></b><b><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';color:rgb(255,0,0);font-weight:bold;font-size:18.0000pt;mso-font-kerning:1.0000pt;">&nbsp;</span></b><b><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';color:rgb(255,0,0);font-weight:bold;font-size:18.0000pt;mso-font-kerning:1.0000pt;"><font face="等线">层</font></span></b><b><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';color:rgb(255,0,0);font-weight:bold;font-size:18.0000pt;mso-font-kerning:1.0000pt;"><font face="等线">遮罩渲染</font></span></b><b><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';color:rgb(255,0,0);font-weight:bold;font-size:18.0000pt;mso-font-kerning:1.0000pt;"><font face="等线">与后期</font>houdini种的应用</span></b><b><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';color:rgb(255,0,0);font-weight:bold;font-size:18.0000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></b></p><p class="MsoNormal" align="center" style="text-align:center;"><b><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';color:rgb(255,0,0);font-weight:bold;font-size:18.0000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></b></p><p class="MsoNormal" align="center" style="text-align:center;"><b><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';color:rgb(255,0,0);font-weight:bold;font-size:18.0000pt;mso-font-kerning:1.0000pt;">Zkb</span></b><b><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';color:rgb(255,0,0);font-weight:bold;font-size:18.0000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></b></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">1:</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">把</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">场景中不需要的内容</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">建立到其他分层去，或者屏蔽掉</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">,如</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">灯光</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">，</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">雾气</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">，</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">如果是</font>vdb的可以单独把vdb出一个深度层。</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">2：</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">渲染设置</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">。</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">&#9;</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">设置</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">Deep格式</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">&#9;</span><img width="464" height="605" src="https://i.loli.net/2019/07/29/5d3f0e221f4c035709.png"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">&#9;</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">渲染参数</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">设置</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><img width="407" height="302" src="https://i.loli.net/2019/07/29/5d3f0e21ee65576378.png"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><img width="326" height="81" src="https://i.loli.net/2019/07/29/5d3f0e21a1b7f16417.png"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">以下三个</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">参数</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">&nbsp;</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">勾</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">选会减少文件大小</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">，</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">默认是</font>32位。</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">看</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">场景</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">选择</font> <font face="等线">全部</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">不</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">选</font> <font face="等线">可以</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">避免出错</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">&nbsp;<font face="等线">但</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">文件会比较大</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">&nbsp;<font face="等线">（建议</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">测试</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">一下</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">）</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">如果全部</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">不</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">选</font> <font face="等线">复杂</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">场景</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">会非常大，建议用一些优化方式去选择，</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><img width="381" height="119" src="https://i.loli.net/2019/07/29/5d3f0e21bb5d729438.png"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">关闭</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">AOV层</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">渲染优化</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">可以把灯光和阴影都屏蔽掉。</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">可以把</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">以上设置保存为一个渲染预设，下次直接调用</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">，</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">然后在修改一些参数就完成了。</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">然后自己</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">渲染一张看看有没有问题，</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">以及</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">渲染的时间，一般的</font>deep</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">渲染时间</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">在</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">3分钟</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">左右是比较正常的，如果时间</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">超出</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">太多，则需要进行进一步的检查</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">和优化整个过程了。</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">Houdini使用Deep层作为遮罩</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">由于</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">deep图片太大</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">&nbsp;<font face="等线">避免</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">视图卡死</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">&nbsp;</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">首先，</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">关闭</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">视图显示</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal"><img width="504" height="272" src="https://i.loli.net/2019/07/29/5d3f0e220f21422780.png"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">1</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">：在</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">摄像机</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">视图的</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">设置中，填入</font>deep</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">的序列数据，</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">&#9;</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal"><img width="554" height="96" src="https://i.loli.net/2019/07/29/5d3f0e21c76c976441.png"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">2：</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">在摄像机</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">参数</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">中，增加一个参数</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">（</font>BackGround Images as Matte</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">）</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;">,并且</span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><font face="等线">勾选这个参数</font></span><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p></o:p></span></p><p class="MsoNormal"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal"><img width="554" height="102" src="https://i.loli.net/2019/07/29/5d3f0e21c736f76439.png"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal" style="text-indent:21.0000pt;"><span style="mso-spacerun:'yes';font-family:等线;mso-bidi-font-family:'Times New Roman';font-size:10.5000pt;mso-font-kerning:1.0000pt;"><o:p>&nbsp;</o:p></span></p></div><!--EndFragment--></body></html><!-- 来必力City版安装代码 --><div id="lv-container" data-id="city" data-uid="MTAyMC80NTQ2Ny8yMTk3OQ=="><script type="text/javascript">   (function(d, s) {       var j, e = d.getElementsByTagName(s)[0];       if (typeof LivereTower === 'function') { return; }       j = d.createElement(s);       j.src = 'https://cdn-city.livere.com/js/embed.dist.js';       j.async = true;       e.parentNode.insertBefore(j, e);   })(document, 'script');</script><noscript> 为正常使用来必力评论功能请激活JavaScript</noscript></div><!-- City版安装代码已完成 --></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;**&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  深度通道给CG的后期制作提供了巨大的便利特别是对于LiveAction来说,那可是相当方便的.还有就是对于毛发跟烟雾流体的遮罩问题,也可以完美解决.调节起来也是相当方便的.唯一的问题就是Deep层的数据量是很大的.需要比较多的硬盘空间。&lt;/p&gt;
&lt;p&gt;**&lt;br&gt;
    
    </summary>
    
      <category term="houdini相关" scheme="https://myblong.zkb/categories/houdini%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="深度合成" scheme="https://myblong.zkb/tags/%E6%B7%B1%E5%BA%A6%E5%90%88%E6%88%90/"/>
    
      <category term="houdini" scheme="https://myblong.zkb/tags/houdini/"/>
    
  </entry>
  
  <entry>
    <title>nuke深度合成笔记</title>
    <link href="https://myblong.zkb/2019/07/26/share/nuke%E6%B7%B1%E5%BA%A6%E5%90%88%E6%88%90/"/>
    <id>https://myblong.zkb/2019/07/26/share/nuke深度合成/</id>
    <published>2019-07-25T16:11:53.691Z</published>
    <updated>2019-07-25T16:15:49.145Z</updated>
    
    <content type="html"><![CDATA[<p>**</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  深度通道给CG的后期制作提供了巨大的便利特别是对于LiveAction来说,那可是相当方便的.还有就是对于毛发跟烟雾流体的遮罩问题,也可以完美解决.调节起来也是相当方便的.唯一的问题就是Deep层的数据量是很大的.需要比较多的硬盘空间。</p><p>**<br><a id="more"></a><br><div class="note"><p>通常来说，在一个普通的CG Render中，每一个pixel只有1个sample；可是在Deep pass中，每一个pixel可能有多个sample（同一个2D采样点有多个深度信息）</p><p>Deep实际上是把3D位置信息带到2D世界中来，而且不需要真实3D场景 - 实际上是2.5D</p><p>DeepEXR包括deep data和depth data</p><p>Deep pass肉眼看全黄色，因为R(deep.front) + G(deep.back) &gt;1  ，把Viewer的Exposure调低可以看到细节</p><div class="image-container image-float-center"><div class="image-wrapper"><img src="https://i.loli.net/2019/07/26/5d39d2a26ee3f40836.jpg"></div></div><p>只有Dot节点、NoOp节点和ScanlineRender节点可用于Deep Pipeline</p><p>Octane plug-in 不支持Deep pass，但Arnold plug-in支持</p><p>若想在Nuke里面增加Holdout和准确的Particle System，必须用到Deep Data</p><p>处理完各物体的Deep流程之后必须要Write出不包含Deep的EXR（若有需要可输出DeepEXR）作为下一阶段流程的Precomp</p><p>***************************************************************************************************************</p><p>▼利用Deep Compositing的好处：</p><p>1. 通过DeeptoPoints可以看到3D点云，准确找到摄像机前各物体的位置</p><p>2. 通过不同物体不同的Deep Pass，可以实现物体前后关系互换</p><p>3. 根据深度进行编辑。e.g. 若有运动物体从40米远处运动到20米远，可在nuke中通过ScanlineRende和Camera加入Particle雨、雾(Particle需要DeepHoldout所有东西)</p><p>4. 可以通过ScanlineRende和Camera(Nuke中) / 新增物体Deep Data(C4D)，在场景中增加3D物体，利用Deep进行合成</p><p>***************************************************************************************************************</p><p>▼Deep相关节点：</p><p>【DeepSample】查看指定pixel的sample(1个或多个)</p><p>【DeepRead】读取Deep文件</p><p>【DeepReformat】Deep的Reformat</p><p>【DeepTransform】Deep的Transform</p><p>【DeepCrop】通过znear / zfar 两个截面截取Deep范围，数值可以参考Viewer下方白色数值(当Vewer上方第二格调到deep.front)</p><p>【DeepRecolor】为DeepData染色，2D和3D。若勾选“target input alpha”，证明需要取"color"中的alpha而不是"depth / deep"中的</p><p>【DeepToPoints】根据Camera把Deep转化为3D点云</p><div class="image-container image-float-center"><div class="image-wrapper"><img class="dou-preview-image dou-preview-image-zoom-in" src="https://i.loli.net/2019/07/26/5d39d2cb5a25172882.jpg"></div><p>【DeepCopyBBox】复制BBox，减少系统不必要的运算</p><p>【DeepHoldout】从Main(后景)Holdout掉前景，可以减少不需要的deep data；若全部DeepMerge一起最后输出的DeepData太Heavy。DeepHoldout输出2D Data，可以连接2D节点。</p><p>【DeepMerge】Comebine(=merge) / Holdout，若勾选"drop hidden sample"，藏在后景的Deep Data Sample会被丢弃</p><p>【DeepWrite】单独输出Deep+depth Data</p><p>★输出普通EXR时要在Deep Data转化为2D之后Remove(deep channel和depth channel)，不然Nuke会crash。------ EXR和DeepEXR是分开的</p><p>【DeepToImage】把Deep Data转化为2D画面。DeepToImage输出2D Data，可以连接2D节点。</p><p>【DeepFromImage】上面连接2D画面。z 是到Camera距离的一个平面。没有景深。</p><p>【DeepFromFrames】上面连接2D画面。zmin / zmax 是到Camera距离的范围。比起DeepFromImage会有景深感，但只是一个静帧。</p><div class="image-container image-float-center"><div class="image-wrapper"><img class="dou-preview-image dou-preview-image-zoom-in" src="https://i.loli.net/2019/07/26/5d39d2a29802035436.jpg"></div></div><p></p><p></p><p></p><p></p><p></p></div><!-- 来必力City版安装代码 --><div id="lv-container" data-id="city" data-uid="MTAyMC80NTQ2Ny8yMTk3OQ=="><script type="text/javascript">   (function(d, s) {       var j, e = d.getElementsByTagName(s)[0];       if (typeof LivereTower === 'function') { return; }       j = d.createElement(s);       j.src = 'https://cdn-city.livere.com/js/embed.dist.js';       j.async = true;       e.parentNode.insertBefore(j, e);   })(document, 'script');</script><noscript> 为正常使用来必力评论功能请激活JavaScript</noscript></div><!-- City版安装代码已完成 --></div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;**&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  深度通道给CG的后期制作提供了巨大的便利特别是对于LiveAction来说,那可是相当方便的.还有就是对于毛发跟烟雾流体的遮罩问题,也可以完美解决.调节起来也是相当方便的.唯一的问题就是Deep层的数据量是很大的.需要比较多的硬盘空间。&lt;/p&gt;
&lt;p&gt;**&lt;br&gt;
    
    </summary>
    
      <category term="nuke相关" scheme="https://myblong.zkb/categories/nuke%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="nuke" scheme="https://myblong.zkb/tags/nuke/"/>
    
      <category term="深度合成" scheme="https://myblong.zkb/tags/%E6%B7%B1%E5%BA%A6%E5%90%88%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>mari4.5猫的皮肤纹理绘制</title>
    <link href="https://myblong.zkb/2019/07/25/share/mari%E7%8C%AB%E7%9A%84%E7%9A%AE%E8%82%A4%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/"/>
    <id>https://myblong.zkb/2019/07/25/share/mari猫的皮肤纹理绘制/</id>
    <published>2019-07-25T15:05:53.212Z</published>
    <updated>2019-07-25T15:06:09.981Z</updated>
    
    <content type="html"><![CDATA[<p>**</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  在国内贴图制作软件被substance painter大部分占领的情况下，还有一款贴图制作软件没有被国内重视。相比substance painter,MARI可以输出高达精度的贴图纹理和多象限绘制的能力，同时兼顾游戏和影视绘制高精度纹理的需求，对硬件要求也更高。</p><p>**<br><a id="more"></a><br><div class="content"><div class="content-container layout-text-media pad-left" style="display: table;"><div class="media" style="float: left;"><div class="text-media"><div class="media-wrapper"><div class="media-container" style="max-width: 1201px;"><div class="media-shadow"><iframe class="media-frame video" autostart="false" frameborder="0" width="100%" height="100%" src="//player.bilibili.com/player.html?aid=60703360&cid=105651175&page=1" style="max-width: 720.6px; height: 405px; width: 720.6px;"></iframe></div><div class="credit"></div></div></div></div></div><div class="text" style="width: 40%; display: table-cell;"><div class="container" style="display: table-cell; width: auto;"><h2 class="date">March 2019</h2><h3>国外mari直播讲解教学</h3><p><a style="font-size:30px; color:#00FA9A;" href="https://www.bilibili.com/video/av60703360" target="_blank">在线观看</a></p></div></div></div></div><!-- 来必力City版安装代码 --><div id="lv-container" data-id="city" data-uid="MTAyMC80NTQ2Ny8yMTk3OQ=="><script type="text/javascript">   (function(d, s) {       var j, e = d.getElementsByTagName(s)[0];       if (typeof LivereTower === 'function') { return; }       j = d.createElement(s);       j.src = 'https://cdn-city.livere.com/js/embed.dist.js';       j.async = true;       e.parentNode.insertBefore(j, e);   })(document, 'script');</script><noscript> 为正常使用来必力评论功能请激活JavaScript</noscript></div><!-- City版安装代码已完成 --></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;**&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  在国内贴图制作软件被substance painter大部分占领的情况下，还有一款贴图制作软件没有被国内重视。相比substance painter,MARI可以输出高达精度的贴图纹理和多象限绘制的能力，同时兼顾游戏和影视绘制高精度纹理的需求，对硬件要求也更高。&lt;/p&gt;
&lt;p&gt;**&lt;br&gt;
    
    </summary>
    
      <category term="mair相关" scheme="https://myblong.zkb/categories/mair%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="贴图" scheme="https://myblong.zkb/tags/%E8%B4%B4%E5%9B%BE/"/>
    
      <category term="mari" scheme="https://myblong.zkb/tags/mari/"/>
    
  </entry>
  
  <entry>
    <title>敏捷开发指导思想</title>
    <link href="https://myblong.zkb/2019/07/24/share/%E5%BC%80%E5%8F%91%E7%9A%84%E6%8C%87%E5%AF%BC%E6%80%9D%E6%83%B3/"/>
    <id>https://myblong.zkb/2019/07/24/share/开发的指导思想/</id>
    <published>2019-07-24T14:42:50.152Z</published>
    <updated>2019-07-24T15:15:02.279Z</updated>
    
    <content type="html"><![CDATA[<pre><code>@[TOC](敏捷开发指导思想)</code></pre><a id="more"></a><div class="show-content-free">            <h1>敏捷概述</h1><h2>背景</h2><blockquote><p>敏捷开发最早被提出应用于软件开发管理流程中。随着时代发展，软件规模和复杂度激增，需求变化加快，软件开发过程日益“重型化”，因此轻量级的，更能适应变化的敏捷软件开发方法被普遍认可并迅速发展流行。</p></blockquote><h2>敏捷宣言（原则）</h2><blockquote><p>个体和交互 胜过 过程和工具<br>可以工作的软件 胜过 面面俱到的文档<br>客户合作 胜过 合同谈判<br>响应变化 胜过 遵循计划</p></blockquote><hr><h1>认识敏捷</h1><blockquote><p>统一认识：敏捷=理念（敏捷核心思想）<em>优秀实践（敏捷的经验积累）</em>具体应用（结合自身，灵活应用）</p></blockquote><h2>理念</h2><ol><li><h4>聚焦客户（视觉）价值（Value），消除浪费</h4><ul><li>部分完成但没最终落地的工作。</li><li>开发完成但没有被客户应用的特性。</li><li>人员流动导致经验不能累计，重复学习。</li><li>移交导致信息丢失。</li><li>任务切换（研究表明多任务工作会导致效率下降20%-40%）。</li><li>因任务或资源互相依赖而导致工作停滞。</li><li>缺陷，解决缺陷本身就是浪费，而且缺陷越遗留到后面浪费越大。</li></ul></li><li><h4>激发团队（Team）潜能，加强协作</h4><ul><li><strong>激发团队</strong><ul><li>通过目标牵引团队自主工作</li><li>当团队自管理时效率最高</li><li>当团队成员不被打扰时，工作效率最高</li><li>当团队解决自我问题时，提升最快</li><li>团队成员共同参与计划制定、任务安排，关注团队目标、共担责任</li><li>人们对自己做出的承诺比别人要求的更认真</li><li>人们会尽力做到最好</li><li>在强大的压力下努力工作，会自然降低对质量的要求</li></ul></li><li><strong>沟通协作</strong><ul><li>广泛的面对面的交流是团队工作高效的方式</li><li>白板沟通 优于 电话沟通 优于 邮件沟通 优于 文档、录制的音视频</li></ul></li></ul></li><li><h4>不断调整以适应（Adapting）变化</h4><ul><li><strong>适应变化</strong><ul><li>认清“客户是逐步发现真正的需求”。</li><li>小批量快速交付是关键。</li><li>通过迭代计划不断调整以适应需求变化</li></ul></li><li><strong>应持续保持良好的架构</strong><ul><li>良好的架构是适应变化的基石<ol><li>软件开发特点是内容庞大、内容持续增长、持续周期长，因此需要良好的架构来保证长期的演进</li><li>优秀的架构通过可扩展性来很好的适应需求的变化，对敏捷起到支持作用，相反拙劣的架构会阻碍敏捷</li><li>良好架构有助于定制合适的增量开发/集成计划，使分层分级的可持续集成更加容易</li></ol></li><li>架构需要尽早验证和持续维护<ol><li>通过迭代来实现和验证架构，有利于架构的尽早稳定</li><li>特殊效果表现需识别影响架构的需求，优先实现，规避架构风险</li><li>通过重构及时维护和优化架构，使架构保持生命力</li></ol></li><li>利用多层次的反馈不断调整以逼近目标</li></ul></li></ul></li></ol><h2>实践</h2><ol><li><h4>因地制宜选择合适的敏捷实践</h4></li><li><h4>敏捷团队(SCRUM)</h4><ul><li><p><strong>产品负责人ProductOwner（PO）</strong>-产品经理/游戏策划/导演</p><ul><li><blockquote><p>负责产品，代表相关的利益</p></blockquote></li><li><p>提供愿景</p></li><li><p>代表利益相关人（如观众、Marketing、管理者等），对产品投资回报负责</p></li><li><p>确定产品发布计划</p></li><li><p>定义产品并确定优先级</p></li><li><p>验收迭代结果.并根据验收结果和需求变化刷新需求清单和优先级</p></li></ul></li><li><p><strong>SCRUM主管Scrum Master（SM）：</strong></p><ul><li><blockquote><p>确保Scurm正确使用和收益最大化，但是不做决定（不命令和控制Team）</p></blockquote></li><li><p>辅导团队正确应用敏捷实践</p></li><li><p>引导团队建立并遵守規则</p></li><li><p>保护团队不受打扰</p></li><li><p>推动解决团队遇到的障碍</p></li><li><p>激励团队</p></li></ul></li><li><p><strong>开发团队（Team）：</strong></p><ul><li><blockquote><p>负责自我管理开发产品的人组成的跨职能团队</p></blockquote></li><li><p>负责估计工作量并根据自身能力找出最佳方案完成任务且保证交付质重</p></li><li><p>向OP和利益相关人演示工作成果</p></li><li><p>团队自我管理、持续改进</p></li></ul></li></ul></li><li><h4>工作件</h4><ul><li><strong>产品Backlog（需求清单）</strong><ul><li>什么是产品Backlog<ul><li>经过优先级排序的动态刷新的产品需求清单，用来制定发布计划和迭代计划。</li></ul></li><li>产品Blocklog的好处<ul><li>通过需求的动态管理应对变化，避免浪费;</li><li>易于优先交付对用户价值高的需求。</li></ul></li><li>产品Blocklog关键要点<ul><li>清楚表述列表中每个需求任务对用户带来的价值，做为优先级排序的重要参考；</li><li>动态的需求管理而非"冻结"方式，PO持续地管理和及时刷新需求清单，在每轮迭代前，都要重新筛选出高优先级需求进入本轮迭代；</li><li>迭代的需求分析过程，而非一次性分析清楚所有需求（只对近期迭代要做的需求进行详细分析，其它需求停留在粗粒度）</li><li>[图片上传失败...(image-e6b495-1543726686826)]</li></ul></li></ul></li><li><strong>迭代Backlog</strong><ul><li>什么是迭代<ul><li>迭代Backlog是团队在一轮迭代中的"任务"（Task）清单，是团队的详细迭代开发计划；</li><li>当团队接收从产品Blocklog挑选出要在本轮迭代实现的需求时，召开团队迭代计划会议，将需求转化为具体的"任务"；</li><li>每项任务信息包括当前剩余工作量和贲任人。</li></ul></li><li>好处<ul><li>将需求分解成更细小的任务，利于对迭代内进度进行精确控制；</li><li>剩余工作量可用来实时跟踪团队当前进展。</li></ul></li><li>关键要点<ul><li>'任务"由团队成员自己分解和定义，而不是上级指派，支撑需求完成的所有工作都可以列为任务；</li><li>任务要落实到具体的贲任人；</li><li>任务粒度要小，工作量大于两天的任务要进一步分解；</li><li>用小时做为任务剩余工作量的估计单位，并每日重估计和刷新。</li></ul></li></ul></li><li><strong>完成标准</strong><ul><li>什么的完成标准<ul><li>基于"随时可向用户发布"的目标制定衡量团队工作是否已完成的标准，由团队和PO形成共识；</li></ul></li><li>好处<ul><li>共同协商的完成标准是团队的自我承诺，团队会更认真；</li><li>用于准确评估团队工作进展；</li><li>清晰和明确的完成标准保证了每次迭代是高质量的。</li></ul></li><li>关键要点<ul><li>团队自协商：团队根掮项目实际情况来定义完成标准，并严格遵守；</li><li>有层次：一般分为三个层次：Story级别，迭代级和发布级，每个级别都有各自的完成标准。</li></ul></li></ul></li></ul></li><li><h4>管理实践</h4><ul><li><strong>Sprint计划会议</strong><ul><li>什么是计划会议<ul><li>每轮迭代启动前，团队共同讨论本轮迭代详细开发计划的过程，输入是产品Backlog，输出是团队迭代Backlog</li><li>多团队迭代计划会议要分层召开<ol><li>版本迭代计划会议：将产品Backlog (需求）分配给团队；</li><li>团队迭代计划会议：将选取的产品Backlog需求转换成迭代Backlog〔任务），分配给团队成员；</li></ol></li><li>迭代计划会议内容：<ol><li>澄清需求、对"完成标准"达成一致</li><li>工作量估计、根据团队能力确定本轮迭代交付内容；</li><li>细化、分配迭代任务和初始工作计划。</li><li>[图片上传失败...(image-445853-1543726686826)]</li></ol></li></ul></li><li>好处<ul><li>通过充分讨论，使团队成员对任务和完成标准理解一致；</li><li>团队共同参与，促进团队成员更认真对待自己的承偌。</li></ul></li><li>要点<ul><li>充分参与：SM确保PO和Team充分参与讨论，达成理解一致；</li><li>相互承诺：Team承诺完成迭代Backlog中的需求并这到"完成标准”，PO承诺在短迭代周期不增加需求〔2-4周）；</li><li>确定内部任务：Team和PO办商把一些内部任务放入迭代中（例如重构、持续集成环境搭建4等），由PO考虑并与其他外部需求一起排序。</li></ul></li></ul></li><li><strong>每日站会</strong><ul><li>什么是站会<ul><li>每日工作前，团队成员的例行沟通机制，由SM组织，Team成员全体站立参加</li><li>聚焦在下面的三个主题：<ol><li>我昨天为本项目做了什么？</li><li>我计划今天为本项目做什么？</li><li>我需要什么帮助以更高效的工作？</li></ol></li></ul></li><li>好处<ul><li>增加团队凝聚力，产生积极的工作氛围</li><li>及时黍露风险和问题；</li><li>促进团队内成员的沟通和协调。</li></ul></li><li>要点<ul><li>准时开始：按计划会议制定的时间地点开会，形成团队成员的自然习惯；</li><li>高效会议：会议限时15分钟，每个人都保持站立，依次发言，不讨论与会议三个主题无关的事情〔如技术解决方案等）；</li><li>问题跟踪：SM应该记录下所有的问题并跟踪解决；</li></ul></li></ul></li><li><strong>迭代验收（评审会议）</strong><ul><li>由SM组织，PO和用户代表（外部或内部利益相关人）负责验收、Team负责演示</li></ul></li><li><strong>回顾会议</strong><ul><li>什么是回顾会议<ul><li>在每轮迭代结束后举行的会议，目的是分享好的经验和发现改逬点，促进团队不断进步；</li><li>围绕如下三个问题：<ol><li>本次迭代有哪些做得好</li><li>本次迭代我们在哪些方面还能做得更好</li><li>我们在下次迭代准备在哪些方面改进？</li></ol></li></ul></li><li>好处<ul><li>激励团队成员；</li><li>帮助团队挖掘优秀经验并继承;</li><li>避免团队犯重复的错误；</li><li>营造团队自主改进的氛围。</li></ul></li><li>要点<ul><li>会议气氛：Team全员参加，气氛宽松自由，畅所欲言，头脑风暴发现问题，共同分析根因；</li><li>关注重点：Team共同讨论优先级，将精力放在最需要的地方（关注几个改进就够了）；</li><li>会议结论要跟踪闭环：可以放入迭代Backlog中。</li></ul></li></ul></li><li><strong>可视化管理</strong><ul><li>项目跟踪<ul><li>To Do</li><li>Doing</li><li>Done</li><li>Finished</li></ul></li><li>故事看板[图片上传失败...(image-dd8ce4-1543726686826)]</li></ul></li></ul></li><li><h4>技术实践</h4></li></ol><h2>敏捷特点：简单、高效</h2><ul><li>所有人对项目的成功负责</li><li>所有人由需求驱动工作，需求一旦确定，就不应该修改了</li><li>所有人都需要跨领域的工作</li><li>持续交付、迭代前进</li><li>小步前进、持续改进</li></ul><hr><h1>首次实施敏捷的步骤</h1><ol><li>思想动员</li><li>差距分析</li><li>环境和工具准备</li><li>敏捷实践技能准备，技术能力准备</li><li>确定开发模型和拟应用实践</li><li>敏捷实施</li><li>回顾评估与调整改进</li><li>激励表彰</li><li>项目结束总结</li></ol>          </div><!-- 来必力City版安装代码 --><div id="lv-container" data-id="city" data-uid="MTAyMC80NTQ2Ny8yMTk3OQ=="><script type="text/javascript">   (function(d, s) {       var j, e = d.getElementsByTagName(s)[0];       if (typeof LivereTower === 'function') { return; }       j = d.createElement(s);       j.src = 'https://cdn-city.livere.com/js/embed.dist.js';       j.async = true;       e.parentNode.insertBefore(j, e);   })(document, 'script');</script><noscript> 为正常使用来必力评论功能请激活JavaScript</noscript></div><!-- City版安装代码已完成 -->]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;@[TOC](敏捷开发指导思想)
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="开发" scheme="https://myblong.zkb/tags/%E5%BC%80%E5%8F%91/"/>
    
      <category term="思维" scheme="https://myblong.zkb/tags/%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>为什么现在越来越感觉恋爱越困难了</title>
    <link href="https://myblong.zkb/2019/07/21/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%81%8B%E7%88%B1%E8%B6%8A%E6%9D%A5%E8%B6%8A%E9%9A%BE/"/>
    <id>https://myblong.zkb/2019/07/21/为什么恋爱越来越难/</id>
    <published>2019-07-21T13:13:10.641Z</published>
    <updated>2019-07-24T14:28:33.412Z</updated>
    
    <content type="html"><![CDATA[<pre><code>@[TOC](为什么现在越来越感觉恋爱越困难了?)</code></pre><h1 id="起因"><a href="#起因" class="headerlink" title="起因?"></a>起因?</h1><p> 前两天，我和朋友聊天虚度无聊的时间。有一个朋友为感情的事愁眉不展，她说在生活的压力下，感觉自己变得难以心动，对一切都感到麻木。<br>我也思考起，自己和身边人的感情生活。确实，好像一切都变了，但不是变得难以心动，而是心动之后所面对的一连串现实问题，让我们望而却步了。<br><a id="more"></a></p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>二十多岁的我们，为什么觉得谈恋爱好难</p><p>才想起，过去的我并不觉得恋爱是件难事。</p><p>在我年幼无知的时候，我拿着自己心爱的psp游戏机当礼物，自己半年的零花钱就没了，因为那天是她的生日。</p><p>之后的大部分时间里，每天吃方便面和包子馒头之类的当午饭，靠着同学的接济硬是撑了过去。那时候我并没有想太多，只是义无反顾地想让对方开心，再苦也值得。</p><p>高中毕业以后，她去了在北方的一个城市上学。而我留在了南方，离家不远的学校。有时候她会说：“想你了。可以来找我吗。”我回复一个笑容，然后迅速转移到下一个话题中。</p><p>我在想，如果还是那个时候我，一定会花光积蓄去找她吧。不知不觉，我已经不再会为爱情倾其所有。</p><p>而与此同时，似乎她也开始改变了。我们每天的对话，经常只有三句：“我起来了”，“上课去了”，“早点睡”。</p><p>从前，她事无大小总会跟我分享，但是后来她再也没谈起过她的生活。反倒是在朋友圈里，我才看见她参加的各样聚会，跟朋友在周边城市旅游，有时玩到半夜才回家。</p><p>但我们都没有因此而感到难过或不适，反而开始适应了彼此独立的生活，不再盲目地追求当年义无反顾的激情。</p><p>从前我们年轻气盛，认为恋爱大过天，什么阻碍都不放在眼里，只要彼此相爱就好。但是二十多岁了，我们逐渐各自独立，而我再也不敢这样感性地义无反顾下去。</p><p>因为我们都心知肚明，异地恋成功的概率太小，成本太高了。也许，这几年的感情，很快就只能是一段回忆了。</p><p>而那些曾经让人羡慕的校园模范情侣们，到了现在的年纪，好像也走不过这一遭。</p><p>曾经我们可能因为长相，因为性格，也可能是相互感觉不错，就能尝试走到一起。但现在，恋爱却多了很多前提。</p><p>工作是否稳定？</p><p>有房有车吗？</p><p>会不会经常分隔两地？</p><p>家庭环境如何？</p><p>双方父母怎么样？</p><p>在精打细算完一连串的问题之后，爱反而成为了最后才会思考的问题。<br>    我曾经遇到过十分喜欢的人，常常聊着天就会对着手机不自觉地笑出声。我们喜欢同样的歌曲和食物，喜欢同一座城市，还会幼稚地拍下身边有趣的东西发给对方，有着共同目标。</p><p>但我们都不敢轻易尝试开始，因为于我们而言，要在一起很容易，往后要面对的问题却很难。</p><p>同样刚毕业的我们，养活自己都已经很吃力，更不要说负担两个人的额外花销。更何况工作之余，已没有太多精力顾及另一个人。</p><p>朋友说：“我突然很害怕。害怕以后会迫不得已选择一个会给我良好生活、满足一切前提的人，但不是一个我真正喜欢的人。”</p><p>我也很害怕。我害怕自己无法给对方带来一个好的生活，只剩下我独自面对着现实带来的孤独和折磨。</p><p>似乎恋爱中的问题，已经让我们逐渐变得可怕。</p><p>比如当她们得知一个大学朋友，即将嫁给一个三十多岁的有钱有势的人时，身边人的第一反应是羡慕和恭贺，但却没有一个人问她是否喜欢对方。</p><p>在那一瞬间，她觉得自己“这么多年来的书都白读了”。因为在现实面前，我们都不经意变得肤浅起来。</p><p>我反复思考她所说的话，一直到凌晨四点都没睡着。</p><p>也许，我们真的过了只要努力一下就能在一起的年纪了，过去藏在校服和学习背后的东西，终究被扯了出来。</p><!-- 来必力City版安装代码 --><div id="lv-container" data-id="city" data-uid="MTAyMC80NTQ2Ny8yMTk3OQ=="><script type="text/javascript">   (function(d, s) {       var j, e = d.getElementsByTagName(s)[0];       if (typeof LivereTower === 'function') { return; }       j = d.createElement(s);       j.src = 'https://cdn-city.livere.com/js/embed.dist.js';       j.async = true;       e.parentNode.insertBefore(j, e);   })(document, 'script');</script><noscript> 为正常使用来必力评论功能请激活JavaScript</noscript></div><!-- City版安装代码已完成 -->]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;@[TOC](为什么现在越来越感觉恋爱越困难了?)
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因?&quot;&gt;&lt;/a&gt;起因?&lt;/h1&gt;&lt;p&gt; 前两天，我和朋友聊天虚度无聊的时间。有一个朋友为感情的事愁眉不展，她说在生活的压力下，感觉自己变得难以心动，对一切都感到麻木。&lt;br&gt;我也思考起，自己和身边人的感情生活。确实，好像一切都变了，但不是变得难以心动，而是心动之后所面对的一连串现实问题，让我们望而却步了。&lt;br&gt;
    
    </summary>
    
    
      <category term="感想" scheme="https://myblong.zkb/tags/%E6%84%9F%E6%83%B3/"/>
    
      <category term="随笔" scheme="https://myblong.zkb/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>国外mari直播讲解教学</title>
    <link href="https://myblong.zkb/2019/07/21/mari%E5%9B%BD%E5%A4%96/"/>
    <id>https://myblong.zkb/2019/07/21/mari国外/</id>
    <published>2019-07-21T02:19:58.689Z</published>
    <updated>2019-07-21T03:16:52.349Z</updated>
    
    <content type="html"><![CDATA[<p>**</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  在国内贴图制作软件被substance painter大部分占领的情况下，还有一款贴图制作软件没有被国内重视。相比substance painter,MARI可以输出高达精度的贴图纹理和多象限绘制的能力，同时兼顾游戏和影视绘制高精度纹理的需求，对硬件要求也更高。</p><p>**<br><a id="more"></a><br><div class="content"><div class="content-container layout-text-media pad-left" style="display: table;"><div class="media" style="float: left;"><div class="text-media"><div class="media-wrapper"><div class="media-container" style="max-width: 1201px;"><div class="media-shadow"><iframe class="media-frame video" autostart="false" frameborder="0" width="100%" height="100%" src="//player.bilibili.com/player.html?aid=59539298&cid=103731994&page=1" style="max-width: 720.6px; height: 405px; width: 720.6px;"></iframe></div><div class="credit"></div></div></div></div></div><div class="text" style="width: 40%; display: table-cell;"><div class="container" style="display: table-cell; width: auto;"><h2 class="date">March 2019</h2><h3>国外mari直播讲解教学</h3><p><a style="font-size:30px; color:#00FA9A;" href="https://www.bilibili.com/video/av59539298/" target="_blank">在线观看</a></p></div></div></div></div><!-- 来必力City版安装代码 --><div id="lv-container" data-id="city" data-uid="MTAyMC80NTQ2Ny8yMTk3OQ=="><script type="text/javascript">   (function(d, s) {       var j, e = d.getElementsByTagName(s)[0];       if (typeof LivereTower === 'function') { return; }       j = d.createElement(s);       j.src = 'https://cdn-city.livere.com/js/embed.dist.js';       j.async = true;       e.parentNode.insertBefore(j, e);   })(document, 'script');</script><noscript> 为正常使用来必力评论功能请激活JavaScript</noscript></div><!-- City版安装代码已完成 --></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;**&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  在国内贴图制作软件被substance painter大部分占领的情况下，还有一款贴图制作软件没有被国内重视。相比substance painter,MARI可以输出高达精度的贴图纹理和多象限绘制的能力，同时兼顾游戏和影视绘制高精度纹理的需求，对硬件要求也更高。&lt;/p&gt;
&lt;p&gt;**&lt;br&gt;
    
    </summary>
    
      <category term="mair相关" scheme="https://myblong.zkb/categories/mair%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="贴图" scheme="https://myblong.zkb/tags/%E8%B4%B4%E5%9B%BE/"/>
    
      <category term="mari" scheme="https://myblong.zkb/tags/mari/"/>
    
  </entry>
  
  <entry>
    <title>Photogrammetry-学习(4)</title>
    <link href="https://myblong.zkb/2019/07/21/share/photogrmmt(4)/"/>
    <id>https://myblong.zkb/2019/07/21/share/photogrmmt(4)/</id>
    <published>2019-07-21T01:22:13.982Z</published>
    <updated>2019-07-21T01:22:46.517Z</updated>
    
    <content type="html"><![CDATA[<p>Photogrammetry拍摄的基础<br><a id="more"></a><br><div class="article-entry" itemprop="articleBody">                        <h1 id="Agisoft-Photoscan-其他功能介绍"><a href="#Agisoft-Photoscan-其他功能介绍" class="headerlink"></a><center>Agisoft Photoscan 其他功能介绍</center></h1><a id="more"></a><h2 id="标记（marker）"><a href="#标记（marker）" class="headerlink"></a>标记（marker）</h2><h3 id="什么是标记？"><a href="#什么是标记？" class="headerlink"></a>什么是标记？</h3><blockquote><p>标记是一些特定标识图案</p></blockquote><h3 id="为什么使用标记？"><a href="#为什么使用标记？" class="headerlink"></a>为什么使用标记？</h3><blockquote><p>使用标记可以更好识别摄像机位置</p></blockquote><h3 id="如何生成标记"><a href="#如何生成标记" class="headerlink"></a>如何生成标记</h3><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/1.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/1.png" title="操作截图"></a></p><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/2.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/2.png" title="操作截图"></a></p><blockquote><p>参数说明</p><ul><li>Marker Type（标记类型）—— 使用默认即可</li><li>Center Point Radius（中心点半径） —— 根据实际环境填写大小</li><li>Target Per Page —— 每一页生成多少标记，建议用6，不浪费纸张</li></ul></blockquote><blockquote><p>确认参数之后点击确定<br>就会生成一个PDF文档</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/3.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/3.png" title="操作截图"></a></p><blockquote><p>打开PDF文档</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/4.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/4.png" title="操作截图"></a></p><blockquote><p>传说中的标记出现了<br>你可以将标记拿去打印<br>然后将标记裁剪下来<br>贴到相应的位置上</p></blockquote><h3 id="如何识别标记"><a href="#如何识别标记" class="headerlink"></a>如何识别标记</h3><blockquote><p>导入图片就可以选择Dectect Markers（检测标记）</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/5.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/5.png" title="操作截图"></a></p><blockquote><p>检测参数使用默认即可</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/6.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/6.png" title="操作截图"></a></p><blockquote><p>检测速度一般比较快</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/7.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/7.png" title="操作截图"></a></p><blockquote><p>检测完成之后就可以看到标记点</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/8.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/8.png" title="操作截图"></a></p><blockquote><p>标记点检测不全可能是因为照片模糊、亮度不够等原因造成<br>这样在进行Align Photos就会自动参考标记点去识别照相机的位置</p></blockquote><h2 id="遮罩蒙版（Mask）"><a href="#遮罩蒙版（Mask）" class="headerlink"></a>遮罩蒙版（Mask）</h2><h3 id="什么是遮罩？"><a href="#什么是遮罩？" class="headerlink"></a>什么是遮罩？</h3><blockquote><p>遮罩顾名思义和PS、AE的遮罩一致<br>用于抠出特定区域</p></blockquote><h3 id="为什么使用遮罩？"><a href="#为什么使用遮罩？" class="headerlink"></a>为什么使用遮罩？</h3><blockquote><p>使用遮罩可以限制识别区域和生成区域<br>加快生成效率<br>提高检测准确性</p></blockquote><h3 id="如何使用遮罩？"><a href="#如何使用遮罩？" class="headerlink"></a>如何使用遮罩？</h3><blockquote><p>Photoscan 提供了基础的抠图工具</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/9.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/9.png" title="操作截图"></a></p><blockquote><p>操作原理和PS一致<br>只是功能有点少<br>不大好用</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/10.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/10.png" title="操作截图"></a></p><blockquote><p>框出区域右键可以看到相应的快捷键操作</p></blockquote><h3 id="导入遮罩"><a href="#导入遮罩" class="headerlink"></a>导入遮罩</h3><blockquote><p>因为软件自带的抠图比较垃圾<br>所以软件提供了导入遮罩的方案</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/11.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/11.png" title="操作截图"></a></p><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/12.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/12.png" title="操作截图"></a></p><blockquote><p>除了Method 和 Filename Template<br>其他参数均用默认即可</p></blockquote><blockquote><p>Agisoft Photoscan 提供了四种遮罩方案</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/13.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/13.png" title="操作截图"></a></p><h4 id="From-Alpha"><a href="#From-Alpha" class="headerlink"></a>From Alpha</h4><blockquote><p>通过图片的Alpha通道导入遮罩<br>可以使用PS抠出遮罩保存到Alpha通道中<br>Photoscan识别图片Alpha通道完成通道导入</p></blockquote><h4 id="From-File"><a href="#From-File" class="headerlink"></a>From File</h4><blockquote><p>通过文件导入遮罩<br>这个需要制作出遮罩的黑白图</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/14.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/14.png" title="操作截图"></a></p><blockquote><p>使用这种方案需要注意Filename Template要使用宏定义{filename}来识别每一个文件名</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/15.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/15.png" title="操作截图"></a></p><h4 id="From-Background"><a href="#From-Background" class="headerlink"></a>From Background</h4><blockquote><p>通过背景生成遮罩<br>这个需要拍摄有背景和没有背景的图片<br>软件会自动匹配两者的区别来生成遮罩</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/16.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/16.png" title="操作截图"></a></p><blockquote><p>这种方案非常适合顶点拍摄<br>在统一环境当中<br>背景也是固定<br>只需要1张背景就可以为每张图片抠出相对准确的遮罩</p></blockquote><h4 id="From-Model"><a href="#From-Model" class="headerlink"></a>From Model</h4><blockquote><p>这个操纵需要生成的模型来抠图<br>但是抠模型只需要1次<br>根据抠出的模型可以自动匹配到每一张图片上<br>速度快，效果也非常好</p></blockquote><h3 id="遮罩操作"><a href="#遮罩操作" class="headerlink"></a>遮罩操作</h3><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/17.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-学习之路（四）/17.png" title="操作截图"></a></p><blockquote><p>使用了遮罩之后 Apply Mask to 选项就可以选择了<br>Key Point 限制识别的范围<br>Tie Point 限制生成的范围</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink"></a>总结</h2><blockquote><ul><li>标记可以让摄像机识别更精确</li><li>遮罩可以优化生成效果、生成更精确</li></ul></blockquote>          </div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Photogrammetry拍摄的基础&lt;br&gt;
    
    </summary>
    
      <category term="Photogrammetry" scheme="https://myblong.zkb/categories/Photogrammetry/"/>
    
    
      <category term="Photogrammetry" scheme="https://myblong.zkb/tags/Photogrammetry/"/>
    
      <category term="扫描" scheme="https://myblong.zkb/tags/%E6%89%AB%E6%8F%8F/"/>
    
  </entry>
  
  <entry>
    <title>Photogrammetry-学习(3)</title>
    <link href="https://myblong.zkb/2019/07/16/share/photogrmmt(3)/"/>
    <id>https://myblong.zkb/2019/07/16/share/photogrmmt(3)/</id>
    <published>2019-07-16T14:20:46.132Z</published>
    <updated>2019-07-16T14:21:51.603Z</updated>
    
    <content type="html"><![CDATA[<p>Photogrammetry拍摄的基础<br><a id="more"></a><br><div class="article-inner">          <input type="hidden" class="isFancy">              <header class="article-header">              <h1 class="article-title" itemprop="name">      Photogrammetry 学习之路（3）    </h1>        </header>            <div class="article-info article-info-post">                                <div class="clearfix"></div>      </div>              <div class="article-entry" itemprop="articleBody">                        <h1 id="Photogrammetry软件操作后期基本流程"><a href="#Photogrammetry软件操作后期基本流程" class="headerlink"></a><center>Photogrammetry软件操作后期基本流程</center></h1><a id="more"></a><h2 id="Build-Mesh-（生成网格）"><a href="#Build-Mesh-（生成网格）" class="headerlink"></a>Build Mesh （生成网格）</h2><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/1.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/1.png" title="操作截图"></a></p><blockquote><p>参数说明</p><ul><li>Surface Type（表面类型) —— 使用默认的Arbitrary 3D</li><li>Source Data（源数据） —— 务必使用Dense Cloud 密集点云，稀疏点云数据太少，无法生成完整的模型</li><li>Face Count（面数） —— 通常都使用最高，确保模型的精细度，后期可以减面</li><li>Interpolation（差值） —— 使用默认或者选择Aggressive，目前我发现影响不大</li><li>Calculate vertex colors（计算顶点信息） —— 这个不勾选，生成模型就没有颜色</li></ul></blockquote><blockquote><p>参数调整之后即可点击OK 执行运算</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/2.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/2.png" title="操作截图"></a></p><blockquote><p>计算完毕之后可以看到模型了</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/3.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/3.png" title="操作截图"></a></p><blockquote><p>你可以点击这些按钮来切换模型的观察方案</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/4.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/4.png" title="操作截图"></a></p><blockquote><p>如果模型没有太大的问题就可以进行下一步</p></blockquote><h2 id="Build-Map-（生成贴图）"><a href="#Build-Map-（生成贴图）" class="headerlink"></a>Build Map （生成贴图）</h2><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/5.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/5.png" title="操作截图"></a></p><blockquote><p>参数说明</p><ul><li>Mapping Mode（映射类型) —— 选择默认的Generic方式，这里涉及的是UV的展开方式</li><li>Blending Mode（混合模式） —— 这里也是使用默认的Mosaic即可，当然也可以选择Average来柔化贴图</li><li>Texture Size/Count（贴图大小） —— 默认4K已经够大了</li><li>Enable Hole Filling（开启填充洞） —— 默认开启，用来优化模型的破洞</li><li>Enable Ghosting Filter（开启重像滤波器） —— 重像就是俗称的画面糊成一团，这可以可以优化贴图效果</li></ul></blockquote><blockquote><p>确认过参数之后就可以去生成贴图了</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/6.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/6.png" title="操作截图"></a></p><blockquote><p>生成贴图完毕之后 点击上面的按钮查看贴图生成的效果</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/7.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/7.png" title="操作截图"></a></p><blockquote><p>我觉得生成的纹理还是非常的不错的</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/8.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/8.png" title="操作截图"></a></p><h2 id="导出模型"><a href="#导出模型" class="headerlink"></a>导出模型</h2><blockquote><p>导出模型需要对模型右键 选择Export Model…</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/9.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/9.png" title="操作截图"></a></p><blockquote><p>选择保存的路径</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/10.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/10.png" title="操作截图"></a></p><blockquote><p>这里会弹出导出设置窗口</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/11.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/11.png" title="操作截图"></a></p><blockquote><p>参数功能就不一一赘述了，基本上关注一下导出的图片格式即可。<br>另外，比较可惜的是只支持OBJ格式</p></blockquote><h2 id="Maya查看导出的模型"><a href="#Maya查看导出的模型" class="headerlink"></a>Maya查看导出的模型</h2><blockquote><p>将模型导入Maya当中</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.picgz.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/12.png-waterMark" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.picgz.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/12.png-waterMark" title="操作截图"></a></p><blockquote><p>可以开启Flat Lighting 获取更好的观感<br>基本上完美还原了模型的细节，达到了真实可靠的效果</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.picgz.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/13.png-waterMark" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.picgz.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/13.png-waterMark" title="操作截图"></a></p><blockquote><p>从面数上也是挺多的</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.picgz.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/14.png-waterMark" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.picgz.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%BA%8C%EF%BC%89/14.png-waterMark" title="操作截图"></a></p><h1 id="总结"><a href="#总结" class="headerlink"></a>总结</h1><blockquote><p>Photogrammetry软件操作基本流程</p><ul><li>通过照片生成稀疏点云</li><li>通过稀疏点云计算Depth Map，生成密集点云</li><li>通过密集点云计算生成模型</li><li>生成贴图</li><li>导出模型和贴图</li></ul><p>这些操作不适用Agisoft Photoscan，其他照片扫描软件也是一致的。</p></blockquote><h1 id="后记"><a href="#后记" class="headerlink"></a>后记</h1><ul><li>针对扫描的流程，后面我会再出博文讲解，敬请期待。</li></ul>          </div>      </div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Photogrammetry拍摄的基础&lt;br&gt;
    
    </summary>
    
      <category term="Photogrammetry" scheme="https://myblong.zkb/categories/Photogrammetry/"/>
    
    
      <category term="Photogrammetry" scheme="https://myblong.zkb/tags/Photogrammetry/"/>
    
      <category term="扫描" scheme="https://myblong.zkb/tags/%E6%89%AB%E6%8F%8F/"/>
    
  </entry>
  
  <entry>
    <title>Photogrammetry-学习(2)</title>
    <link href="https://myblong.zkb/2019/07/14/share/photogrmmt(2)/"/>
    <id>https://myblong.zkb/2019/07/14/share/photogrmmt(2)/</id>
    <published>2019-07-14T06:03:36.628Z</published>
    <updated>2019-07-14T06:07:10.067Z</updated>
    
    <content type="html"><![CDATA[<p>Photogrammetry拍摄的基础<br><a id="more"></a><br><div class="article-inner">          <input type="hidden" class="isFancy">              <header class="article-header">        </header>            <div class="article-info article-info-post">          </div>                <div class="clearfix"></div>      </div>              <div class="article-entry" itemprop="articleBody">                        <h1 id="Photogrammetry-拍照指南"><a href="#Photogrammetry-拍照指南" class="headerlink"></a><center>Photogrammetry 拍照指南</center></h1><a id="more"></a><h2 id="拍照设备"><a href="#拍照设备" class="headerlink"></a>拍照设备</h2><blockquote><p>Photogrammetry照片建模看重的是照片的成像质量<br>好的设备当然能够事半功倍<br>但是简单的手机设备也未尝不可</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%89%EF%BC%89/1.jpg" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%89%EF%BC%89/1.jpg" title="操作截图"></a></p><blockquote><p>我并不是专业的摄影师<br>对照相机的研究并不多<br>但是从目前我的接触来看<br>只要拍照质量过硬<br>手机不比相机差</p></blockquote><h2 id="拍照参数"><a href="#拍照参数" class="headerlink"></a>拍照参数</h2><blockquote><p>Photogrammetry 拍照和普通照相还是有几点不相同的</p><ul><li><strong>所有的设置都尽量不用自动</strong>（<strong>让图片保持一致</strong>）</li><li><strong>ISO要尽可能低</strong>（<strong>降低噪点</strong>）</li><li><strong>F-stop不能调太低</strong>（<strong>减少背景虚化</strong>）</li><li><strong>快门速度要尽可能的小</strong>（<strong>降低重影效果</strong>）</li><li><strong>聚焦清晰</strong>（<strong>聚焦模糊会影响贴图效果</strong>）</li><li><strong>白平衡要一致</strong>（<strong>通常采用贴近真实的风格</strong>）</li></ul></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%89%EF%BC%89/2.jpg" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%89%EF%BC%89/2.jpg" title="操作截图"></a></p><h2 id="单一物体拍照方案"><a href="#单一物体拍照方案" class="headerlink"></a>单一物体拍照方案</h2><h3 id="以物体为中心"><a href="#以物体为中心" class="headerlink"></a>以物体为中心</h3><blockquote><p>摄像机围绕物体进行拍照<br>适用于比较大的物体</p></blockquote><h4 id="注意事项"><a href="#注意事项" class="headerlink"></a><strong>注意事项</strong></h4><ul><li>移动之后一定要稳定摄像机再进行拍摄</li><li>移动的弧度不要太大，每张图片的间隔最好相互覆盖50%以上</li><li>拍摄时最好采用多角度（上中下角度）</li></ul><h4 id="优点"><a href="#优点" class="headerlink"></a>优点</h4><ul><li>结合背景，摄像机位置识别相对准确</li><li>拍照灵活</li><li>成本低</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink"></a>缺点</h4><ul><li>拍照繁琐消耗体力（可以用三脚架固定但是麻烦）</li><li>自然光难以调控，光照不均匀</li><li>抠图困难，需要后期处理</li></ul><h3 id="以摄像机为中心"><a href="#以摄像机为中心" class="headerlink"></a>以摄像机为中心</h3><blockquote><p>摄像机固定拍摄旋转物体<br>适用于比较小的物体</p></blockquote><h4 id="注意事项（以物体为中心的注意事项在这里也一致）"><a href="#注意事项（以物体为中心的注意事项在这里也一致）" class="headerlink"></a><strong>注意事项</strong>（以物体为中心的注意事项在这里也一致）</h4><ul><li>需要配备三角架固定摄像机</li><li>需要配备关照环境均匀布光</li><li>需要配备转台转动物体</li></ul><h4 id="优点-1"><a href="#优点-1" class="headerlink"></a>优点</h4><ul><li>拍照方便简单</li><li>光线统一均匀</li><li>背景统一方便生成遮罩</li></ul><h4 id="缺点-1"><a href="#缺点-1" class="headerlink"></a>缺点</h4><ul><li>以物体识别为主，容易造成识别混乱</li><li>需要设备配合，成本较高</li></ul><h2 id="环境拍照方案"><a href="#环境拍照方案" class="headerlink"></a>环境拍照方案</h2><blockquote><p>大环境拍摄难以采用固定摄像机的方案<br>固定摄像机会导致图片扭曲以及细节不足的问题<br>拍照注意可以参照以物体为中心的拍照方案</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink"></a>总结</h2><ul><li>Photogrammetry的拍照参数要设置好，切勿使用自动参数</li><li>拍照的时候追求稳定清晰，亮度也要适中</li><li>拍照要均匀围绕物体</li></ul>      </div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Photogrammetry拍摄的基础&lt;br&gt;
    
    </summary>
    
      <category term="Photogrammetry" scheme="https://myblong.zkb/categories/Photogrammetry/"/>
    
    
      <category term="Photogrammetry" scheme="https://myblong.zkb/tags/Photogrammetry/"/>
    
      <category term="扫描" scheme="https://myblong.zkb/tags/%E6%89%AB%E6%8F%8F/"/>
    
  </entry>
  
  <entry>
    <title>Photogrammetry-学习(1)</title>
    <link href="https://myblong.zkb/2019/06/30/share/photogrmmt(1)/"/>
    <id>https://myblong.zkb/2019/06/30/share/photogrmmt(1)/</id>
    <published>2019-06-30T05:58:32.907Z</published>
    <updated>2019-06-30T06:06:47.483Z</updated>
    
    <content type="html"><![CDATA[<p>Photogrammetry基础介绍<br><a id="more"></a><br><div class="article-entry" itemprop="articleBody">                        <h1 id="Photogrammetry-入坑前言"><a href="#Photogrammetry-入坑前言" class="headerlink"></a><center>Photogrammetry 入坑前言</center></h1><a id="more"></a><p>&emsp;&emsp;最近研究照片扫描技术，并且推荐了一款软件<strong>3DF Zephyr</strong>，但是这款软件的教程太少了，经过我的调查，我发现Agisoft Photoscan是目前比较成熟的软件，就这样我就进了Photogrammetry的大坑。</p><p>&emsp;&emsp; Photogrammetry是什么呢？正如上面的软件介绍一样，它是一种通过一系列的照片还原三维模型的技术。</p><hr><p>&emsp;&emsp; 那Photogrammetry有什么优点，对比目前市场上的其他扫描技术又有什么优势和劣势呢？</p><blockquote><p>Photogrammetry的优点</p><ul><li>通过照片生成模型和纹理，细节丰富到令人发指，模型细腻</li><li>生成速度快，操作相对简单</li><li>制作成本低，甚至可以用手机拍照完成流程</li><li>支持扫描大型物体，甚至是航拍地图</li></ul></blockquote><blockquote><p>Photogrammetry的缺点</p><ul><li>无法处理颜色大规模统一的物体（<strong>影响图片识别</strong>）</li><li>无法处理随着角度变化的强烈高光（<strong>影响图片识别</strong>）</li><li>无法处理透明材质（<strong>影响图片识别</strong>）</li><li>无法处理多重相似的图案（<strong>影响图片识别</strong>）</li><li>细小的物体难以生成高质量的模型</li><li>不均匀的光线分布会影响扫描的效果</li><li>拍摄多角度扫描素材比较繁琐</li></ul></blockquote><blockquote><p>Photogrammetry与激光扫描的技术对比</p><ul><li>激光扫描的模型精度与Photogrammetry不相上下</li><li>激光扫描可以解决Photogrammetry因为图片识别而无法扫描的硬伤</li><li>高规格的激光扫描方可识别颜色，成本很高</li><li>激光扫描难以胜任大型物体扫描，特别是航拍</li></ul></blockquote><hr><h1 id="软件下载"><a href="#软件下载" class="headerlink"></a>软件下载</h1><p><strong>3DF Zephyr</strong></p><p>链接: <a href="https://pan.baidu.com/s/1Rz66Ui1VNWtKZeVh55scmg" target="_blank" rel="noopener">https://pan.baidu.com/s/1Rz66Ui1VNWtKZeVh55scmg</a> 密码: xnwn</p><p><strong>Agisoft Photoscan</strong></p><p>链接: <a href="https://pan.baidu.com/s/1eZlWmDIxRNGhM0ZVnpWAQQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1eZlWmDIxRNGhM0ZVnpWAQQ</a> 密码: g3ne</p><hr><h1 id="Photogrammetry软件操作前期基本流程"><a href="#Photogrammetry软件操作前期基本流程" class="headerlink"></a>Photogrammetry软件操作前期基本流程</h1><h2 id="软件安装"><a href="#软件安装" class="headerlink"></a><strong>软件安装</strong></h2><blockquote><p>打开软件安装包，直接安装。然后将破解文件覆盖快捷方式的启动程序。</p></blockquote><h3 id="启动程序即可看到软件界面"><a href="#启动程序即可看到软件界面" class="headerlink"></a>启动程序即可看到软件界面</h3><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/1.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/1.png" title="操作截图"></a></p><h3 id="正式使用之前务必先打开首选项"><a href="#正式使用之前务必先打开首选项" class="headerlink"></a>正式使用之前务必先打开首选项</h3><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/2.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/2.png" title="操作截图"></a></p><h3 id="首选项这里可以修改语言模式"><a href="#首选项这里可以修改语言模式" class="headerlink"></a>首选项这里可以修改语言模式</h3><blockquote><p>不习惯英语的可以修改为中文，在下还是依然使用英文。</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/3.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/3.png" title="操作截图"></a></p><h3 id="另外去到GPU的标签-务必开启CUDA显卡加速"><a href="#另外去到GPU的标签-务必开启CUDA显卡加速" class="headerlink"></a>另外去到GPU的标签 务必开启CUDA显卡加速</h3><blockquote><p>开启之后你就能体验飞一样的感觉（GPU运算速度是CPU的好几倍）<br></p></blockquote><blockquote><p>原谅我的垃圾手提电脑，N卡940M太低端无法识别</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/4.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/4.png" title="操作截图"></a></p><hr><h1 id="基本流程"><a href="#基本流程" class="headerlink"></a><strong>基本流程</strong></h1><h2 id="点击打开workflow"><a href="#点击打开workflow" class="headerlink"></a><strong>点击打开workflow</strong></h2><blockquote><p>截图上的操作就是Photogrammetry的基本流程<br></p></blockquote><blockquote><p>我们需要一步一步去完成操作<br></p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/5.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/5.png" title="操作截图"></a></p><h2 id="Align-Photos-对齐照片"><a href="#Align-Photos-对齐照片" class="headerlink"></a><strong>Align Photos (对齐照片)</strong></h2><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/6.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/6.png" title="操作截图"></a></p><blockquote><p>这里有几个参数需要注意</p><ul><li>Acurray（识别精度） —— 不建议太高，太高会很慢。我一般选择Medium</li><li>Generic Preselection（常用预选） —— 对图片序列识别进行优化，通常都勾选</li><li>Key Point Limit（关键点上限）—— 建议为0，就是不设上限</li><li>Tie Point Limit（点云上限） —— 同样建议为0，就是不设上限</li><li>Adapt Camera model fitting（适应摄像机的位置）—— 一般都要勾选，特别是应用蒙版的情况</li></ul></blockquote><blockquote><p>设置完成即可运行操作</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/7.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/7.png" title="操作截图"></a></p><blockquote><p>识别完成之后会生成sparse cloud（稀疏点云）<br></p></blockquote><blockquote><p>比较成功的识别结果（图片识别规整)</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/8.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/8.png" title="操作截图"></a></p><blockquote><p>比较失败的识别结果（图片错位)</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/9.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/9.png" title="操作截图"></a></p><blockquote><p>图片错位的原因</p><ul><li>Align Photos 的识别精度太低了或太高了</li><li>照片存在模糊、距离不一、角度偏移等问题</li><li>物体上存在Photogrammetry无法解决的硬伤</li></ul></blockquote><h2 id="Build-Dense-Cloud-（生成密集点云）"><a href="#Build-Dense-Cloud-（生成密集点云）" class="headerlink"></a><strong>Build Dense Cloud （生成密集点云）</strong></h2><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/10.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/10.png" title="操作截图"></a></p><blockquote><p>参数说明</p><ul><li>Quality（质量） —— 不建议太高，太高会很慢。我一般选择Medium</li><li>Depth filtering（深度过滤） —— 一般为Aggressive或者默认参数</li><li>Calculate point colors（计算顶点颜色） —— 这个务必要勾选，否则生成模型没有颜色</li></ul></blockquote><blockquote><p>只要一开始的 sparse cloud 没有太大问题，那么密集点云的步骤也比较顺利<br>这个步骤需要比较长的运算时间</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/11.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/11.png" title="操作截图"></a></p><blockquote><p>在生成的过程中软件会生成Depth Map来重新构建照片的深度，从而奠定立体生成的基础（这个需要中断生成步骤才可以看到）</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/13.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/13.png" title="操作截图"></a></p><blockquote><p>根据流程生成完毕是这样子的（这个效果是建立在Sparse Cloud的基础上的）</p></blockquote><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/12.png" title="操作截图" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Photogrammetry/Photogrammetry-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/12.png" title="操作截图"></a></p><hr><h1 id="总结"><a href="#总结" class="headerlink"></a>总结</h1><blockquote><p>Photogrammetry软件操作前期流程</p><ul><li>通过照片生成稀疏点云</li><li>通过稀疏点云计算Depth Map，生成密集点云</li></ul></blockquote>          </div>  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Photogrammetry基础介绍&lt;br&gt;
    
    </summary>
    
      <category term="Photogrammetry" scheme="https://myblong.zkb/categories/Photogrammetry/"/>
    
    
      <category term="Photogrammetry" scheme="https://myblong.zkb/tags/Photogrammetry/"/>
    
      <category term="扫描" scheme="https://myblong.zkb/tags/%E6%89%AB%E6%8F%8F/"/>
    
  </entry>
  
  <entry>
    <title>Python系列（三）之高级特性</title>
    <link href="https://myblong.zkb/2019/06/22/share/python%E5%AD%A6%E4%B9%A0_3/"/>
    <id>https://myblong.zkb/2019/06/22/share/python学习_3/</id>
    <published>2019-06-22T13:15:53.824Z</published>
    <updated>2019-06-22T13:15:53.916Z</updated>
    
    <content type="html"><![CDATA[<p>切片操作（slice），即从list（tuple是一种特殊的list）中获取部分元素。<br><a id="more"></a><br><div class="                col-lg-8 col-lg-offset-2                col-md-10 col-md-offset-1                post-container">                <h2 id="1-切片"><a class="anchorjs-link " href="#1-切片" aria-label="Anchor link for: 1 切片" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>1. 切片</h2><div id="toc" class="toc-article toc-fixed">        <strong class="toc-title">Contents</strong>                  <ol class="toc-nav"><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#1-切片"><span class="toc-nav-number">1.</span> <span class="toc-nav-text">1. 切片</span></a></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#2-迭代"><span class="toc-nav-number">2.</span> <span class="toc-nav-text">2. 迭代</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#21-迭代的概念"><span class="toc-nav-number">2.1.</span> <span class="toc-nav-text">2.1 迭代的概念</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#22-迭代的使用"><span class="toc-nav-number">2.2.</span> <span class="toc-nav-text">2.2 迭代的使用</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#221-dict的迭代"><span class="toc-nav-number">2.2.1.</span> <span class="toc-nav-text">2.2.1 dict的迭代</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#222-字符串的迭代"><span class="toc-nav-number">2.2.2.</span> <span class="toc-nav-text">2.2.2 字符串的迭代</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#223-迭代的索引"><span class="toc-nav-number">2.2.3.</span> <span class="toc-nav-text">2.2.3 迭代的索引</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#224-多变量迭代"><span class="toc-nav-number">2.2.4.</span> <span class="toc-nav-text">2.2.4 多变量迭代</span></a></li></ol></li></ol></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#3-列表生成式"><span class="toc-nav-number">3.</span> <span class="toc-nav-text">3. 列表生成式</span></a></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#4-生成器"><span class="toc-nav-number">4.</span> <span class="toc-nav-text">4. 生成器</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#41-直接创建generator"><span class="toc-nav-number">4.1.</span> <span class="toc-nav-text">4.1 直接创建generator</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#42-通过函数方式创建"><span class="toc-nav-number">4.2.</span> <span class="toc-nav-text">4.2 通过函数方式创建</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#5-迭代器"><span class="toc-nav-number">5.</span> <span class="toc-nav-text">5. 迭代器</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#51-可迭代对象"><span class="toc-nav-number">5.1.</span> <span class="toc-nav-text">5.1 可迭代对象</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#52-迭代器"><span class="toc-nav-number">5.2.</span> <span class="toc-nav-text">5.2 迭代器</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#推荐文章"><span class="toc-nav-number">6.</span> <span class="toc-nav-text">推荐文章</span></a></li></ol>                </div><p>切片操作（slice），即从list（tuple是一种特殊的list）中获取部分元素。</p><ul><li>L[m,n]表示从L[m]~L[n-1]的list。</li><li>L[:n]表示从L[0]~L[n-1]的list。</li><li>L[m:]表示从L[m]~L[len(L)-1]。</li><li>L[-m:]表示倒数m个数的list。</li><li>L[m:n:k]表示从L[m:n]list中每k个取一个数组成一个新的list。</li><li>L[::k]表示从L中每k个取一个组成新的list。</li><li>tuple也是一种list（不可变的list），使用切片操作的结果仍为tuple。</li></ul><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义list</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = [<span class="string">'Michael'</span>, <span class="string">'Sarah'</span>, <span class="string">'Tracy'</span>, <span class="string">'Bob'</span>, <span class="string">'Jack'</span>]</span><br><span class="line"><span class="comment">#切片操作</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">0</span>:<span class="number">3</span>]</span><br><span class="line">[<span class="string">'Michael'</span>, <span class="string">'Sarah'</span>, <span class="string">'Tracy'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[:<span class="number">3</span>]</span><br><span class="line">[<span class="string">'Michael'</span>, <span class="string">'Sarah'</span>, <span class="string">'Tracy'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">[<span class="string">'Sarah'</span>, <span class="string">'Tracy'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">-2</span>:]</span><br><span class="line">[<span class="string">'Bob'</span>, <span class="string">'Jack'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">-2</span>:<span class="number">-1</span>]</span><br><span class="line">[<span class="string">'Bob'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义0-99的list</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = list(range(<span class="number">100</span>))</span><br><span class="line"><span class="comment">#前10个数每两个取一个</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[:<span class="number">10</span>:<span class="number">2</span>]</span><br><span class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>]</span><br><span class="line"><span class="comment">#所有数，每5个取一个</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[::<span class="number">5</span>]</span><br><span class="line">[<span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">35</span>, <span class="number">40</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">55</span>, <span class="number">60</span>, <span class="number">65</span>, <span class="number">70</span>, <span class="number">75</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">90</span>, <span class="number">95</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#tuple的切片操作</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)[:<span class="number">3</span>]</span><br><span class="line">(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#字符串切片操作</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'ABCDEFG'</span>[:<span class="number">3</span>]</span><br><span class="line"><span class="string">'ABC'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'ABCDEFG'</span>[::<span class="number">2</span>]</span><br><span class="line"><span class="string">'ACEG'</span></span><br></pre></td></tr></tbody></table></div></figure><h2 id="2-迭代"><a class="anchorjs-link " href="#2-迭代" aria-label="Anchor link for: 2 迭代" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2. 迭代</h2><h3 id="21-迭代的概念"><a class="anchorjs-link " href="#21-迭代的概念" aria-label="Anchor link for: 21 迭代的概念" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.1 迭代的概念</h3><p>迭代：在某类对象的集合中通过遍历的方法来获取元素，对元素执行某项操作。</p><p>Python中的可迭代对象有：list，tuple，dict，str等，包括可迭代的自定义类型。</p><p>判断一类对象是否可迭代，可以通过collections模块的Iterable类型判断。例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="string">'abc'</span>, Iterable) <span class="comment"># str是否可迭代</span></span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], Iterable) <span class="comment"># list是否可迭代</span></span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="number">123</span>, Iterable) <span class="comment"># 整数是否可迭代</span></span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></tbody></table></div></figure><h3 id="22-迭代的使用"><a class="anchorjs-link " href="#22-迭代的使用" aria-label="Anchor link for: 22 迭代的使用" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.2 迭代的使用</h3><p>在Python中，迭代是通过<code>for ... in</code>来完成的。</p><h4 id="221-dict的迭代"><a class="anchorjs-link " href="#221-dict的迭代" aria-label="Anchor link for: 221 dict的迭代" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.2.1 dict的迭代</h4><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = {<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">2</span>, <span class="string">'c'</span>: <span class="number">3</span>}</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> key <span class="keyword">in</span> d:</span><br><span class="line"><span class="meta">... </span>    print(key)</span><br><span class="line">...</span><br><span class="line">a</span><br><span class="line">c</span><br><span class="line">b</span><br></pre></td></tr></tbody></table></div></figure><ul><li>dict默认迭代的是key，<code>for key in d</code>。</li><li>可以使用<code>for value in d.values()</code>来迭代value。</li><li>可以用<code>for k, v in d.items()</code>来迭代key和value。</li></ul><h4 id="222-字符串的迭代"><a class="anchorjs-link " href="#222-字符串的迭代" aria-label="Anchor link for: 222 字符串的迭代" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.2.2 字符串的迭代</h4><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> ch <span class="keyword">in</span> <span class="string">'ABC'</span>:</span><br><span class="line"><span class="meta">... </span>    print(ch)</span><br><span class="line">...</span><br><span class="line">A</span><br><span class="line">B</span><br><span class="line">C</span><br></pre></td></tr></tbody></table></div></figure><h4 id="223-迭代的索引"><a class="anchorjs-link " href="#223-迭代的索引" aria-label="Anchor link for: 223 迭代的索引" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.2.3 迭代的索引</h4><p>Python内置的<code>enumerate</code>函数可以把一个list变成索引-元素对，这样就可以在<code>for</code>循环中同时迭代索引和元素本身。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i, value <span class="keyword">in</span> enumerate([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]):</span><br><span class="line"><span class="meta">... </span>    print(i, value)</span><br><span class="line">...</span><br><span class="line"><span class="number">0</span> A</span><br><span class="line"><span class="number">1</span> B</span><br><span class="line"><span class="number">2</span> C</span><br></pre></td></tr></tbody></table></div></figure><h4 id="224-多变量迭代"><a class="anchorjs-link " href="#224-多变量迭代" aria-label="Anchor link for: 224 多变量迭代" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.2.4 多变量迭代</h4><p>在for中，同时引用多个变量。例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> x, y <span class="keyword">in</span> [(<span class="number">1</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">4</span>), (<span class="number">3</span>, <span class="number">9</span>)]:</span><br><span class="line"><span class="meta">... </span>    print(x, y)</span><br><span class="line">...</span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="number">3</span> <span class="number">9</span></span><br></pre></td></tr></tbody></table></div></figure><h2 id="3-列表生成式"><a class="anchorjs-link " href="#3-列表生成式" aria-label="Anchor link for: 3 列表生成式" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3. 列表生成式</h2><p>列表生成式即List Comprehensions，是Python内置的非常简单却强大的可以用来创建list的生成式。</p><p>一般是通过<code>for … in</code>和<code>range</code>来生成list。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(range(<span class="number">1</span>, <span class="number">11</span>))</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>)]</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>, <span class="number">100</span>]</span><br></pre></td></tr></tbody></table></div></figure><p><strong>for循环中加if判断</strong></p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>]</span><br><span class="line">[<span class="number">4</span>, <span class="number">16</span>, <span class="number">36</span>, <span class="number">64</span>, <span class="number">100</span>]</span><br></pre></td></tr></tbody></table></div></figure><p><strong>多层循环</strong></p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[m + n <span class="keyword">for</span> m <span class="keyword">in</span> <span class="string">'ABC'</span> <span class="keyword">for</span> n <span class="keyword">in</span> <span class="string">'XYZ'</span>]</span><br><span class="line">[<span class="string">'AX'</span>, <span class="string">'AY'</span>, <span class="string">'AZ'</span>, <span class="string">'BX'</span>, <span class="string">'BY'</span>, <span class="string">'BZ'</span>, <span class="string">'CX'</span>, <span class="string">'CY'</span>, <span class="string">'CZ'</span>]</span><br></pre></td></tr></tbody></table></div></figure><p><strong>多变量循环</strong></p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = {<span class="string">'x'</span>: <span class="string">'A'</span>, <span class="string">'y'</span>: <span class="string">'B'</span>, <span class="string">'z'</span>: <span class="string">'C'</span> }</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[k + <span class="string">'='</span> + v <span class="keyword">for</span> k, v <span class="keyword">in</span> d.items()]</span><br><span class="line">[<span class="string">'y=B'</span>, <span class="string">'x=A'</span>, <span class="string">'z=C'</span>]</span><br></pre></td></tr></tbody></table></div></figure><p>可以使用内建的<code>isinstance</code>函数可以判断一个变量是不是字符串。</p><h2 id="4-生成器"><a class="anchorjs-link " href="#4-生成器" aria-label="Anchor link for: 4 生成器" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4. 生成器</h2><p>在Python中，一边循环一边计算的机制，称为生成器：generator。生成器不必创建完整的list，可以在循环中不断推算出后续的元素，从而可以在获取所需元素的同时节省存储空间。</p><h3 id="41-直接创建generator"><a class="anchorjs-link " href="#41-直接创建generator" aria-label="Anchor link for: 41 直接创建generator" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.1 直接创建generator</h3><p>创建generator即把列表生成式的<code>[]</code>改成<code>()</code>。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = [x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>g = (x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>g</span><br><span class="line">&lt;generator object &lt;genexpr&gt; at <span class="number">0x1022ef630</span>&gt;</span><br></pre></td></tr></tbody></table></div></figure><p>一般通过<code>for循环</code>来获取generator的元素，也可以使用<code>next(g)</code>来获取下一个元素。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>g = (x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>))</span><br><span class="line"><span class="comment">#通过for循环获取元素</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> n <span class="keyword">in</span> g:</span><br><span class="line"><span class="meta">... </span>    print(n)</span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="comment">#通过next()获取元素</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>next(g)</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>next(g)</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></tbody></table></div></figure><h3 id="42-通过函数方式创建"><a class="anchorjs-link " href="#42-通过函数方式创建" aria-label="Anchor link for: 42 通过函数方式创建" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.2 通过函数方式创建</h3><p>通过<code>yield</code>关键字将一个函数变成<code>generator</code>。例如：</p><p>函数的定义：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(max)</span>:</span></span><br><span class="line">    n, a, b = <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; max:</span><br><span class="line">        print(b)</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'done'</span></span><br></pre></td></tr></tbody></table></div></figure><p>生成器的定义：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(max)</span>:</span></span><br><span class="line">    n, a, b = <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; max:</span><br><span class="line">        <span class="keyword">yield</span> b</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'done'</span></span><br></pre></td></tr></tbody></table></div></figure><p>两者的差别在于生成器将函数的<code>print(b)</code>改为<code>yield b</code>。<code>yield</code>可以翻译为<code>生成</code>，即基于某次计算生成某个元素，而不是提前存储了该元素。</p><p>函数式的<code>generator</code>一般采用<code>for</code>循环来获取元素，也可以通过<code>next()</code>来获取下一个元素的值，例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> n <span class="keyword">in</span> fib(<span class="number">6</span>):</span><br><span class="line"><span class="meta">... </span>    print(n)</span><br><span class="line">...</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></tbody></table></div></figure><p>如果要获取<code>return</code>的内容，可以捕获<code>StopIteration</code>错误，返回值包含在<code>StopIteration</code>的<code>value</code>中。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>g = fib(<span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>        x = next(g)</span><br><span class="line"><span class="meta">... </span>        print(<span class="string">'g:'</span>, x)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">except</span> StopIteration <span class="keyword">as</span> e:</span><br><span class="line"><span class="meta">... </span>        print(<span class="string">'Generator return value:'</span>, e.value)</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">break</span></span><br><span class="line">...</span><br><span class="line">g: <span class="number">1</span></span><br><span class="line">g: <span class="number">1</span></span><br><span class="line">g: <span class="number">2</span></span><br><span class="line">g: <span class="number">3</span></span><br><span class="line">g: <span class="number">5</span></span><br><span class="line">g: <span class="number">8</span></span><br><span class="line">Generator <span class="keyword">return</span> value: done</span><br></pre></td></tr></tbody></table></div></figure><h2 id="5-迭代器"><a class="anchorjs-link " href="#5-迭代器" aria-label="Anchor link for: 5 迭代器" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>5. 迭代器</h2><h3 id="51-可迭代对象"><a class="anchorjs-link " href="#51-可迭代对象" aria-label="Anchor link for: 51 可迭代对象" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>5.1 可迭代对象</h3><p>可以直接作用于<code>for</code>循环的对象统称为可迭代对象：<code>Iterable</code>。主要有：</p><ul><li>集合数据类型，如<code>list</code>、<code>tuple</code>、<code>dict</code>、<code>set</code>、<code>str</code>等</li><li><code>generator</code>，包括生成器和带<code>yield</code>的generator function</li></ul><p>可以使用<code>isinstance()</code>判断一个对象是否是<code>Iterable</code>对象：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance([], Iterable)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance({}, Iterable)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="string">'abc'</span>, Iterable)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance((x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)), Iterable)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="number">100</span>, Iterable)</span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></tbody></table></div></figure><h3 id="52-迭代器"><a class="anchorjs-link " href="#52-迭代器" aria-label="Anchor link for: 52 迭代器" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>5.2 迭代器</h3><p>可以被<code>next()</code>函数调用并不断返回下一个值的对象称为迭代器：<code>Iterator</code>。</p><p>生成器都是<code>Iterator</code>对象，但<code>list</code>、<code>dict</code>、<code>str</code>是<code>Iterable</code>，而不是<code>Iterator</code>。</p><p>可以使用<code>isinstance()</code>判断一个对象是否是<code>Iterator</code>对象：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> Iterator</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance((x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)), Iterator)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance([], Iterator)</span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance({}, Iterator)</span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="string">'abc'</span>, Iterator)</span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></tbody></table></div></figure><p>可以通过<code>iter()</code>函数将<code>Iterable</code>转换成<code>Iterator</code>。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(iter([]), Iterator)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(iter(<span class="string">'abc'</span>), Iterator)</span><br><span class="line"><span class="keyword">True</span></span><br></pre></td></tr></tbody></table></div></figure><p>Python的<code>Iterator</code>对象表示的是一个数据流，可以是无限大的数据流，例如全体自然数。</p><ul><li><code>Iterator</code>的元素是基于计算的，可以理解为惰性的、动态的、长度未知的（元素个数可能无限）。</li><li><code>list</code>、<code>dict</code>、<code>str</code>的元素是基于存储的，可以理解为静态的、长度已知的（元素个数有限）。</li></ul></div>                                                                            </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;切片操作（slice），即从list（tuple是一种特殊的list）中获取部分元素。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://myblong.zkb/categories/python/"/>
    
    
      <category term="python" scheme="https://myblong.zkb/tags/python/"/>
    
      <category term="python基础" scheme="https://myblong.zkb/tags/python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>pyqt基础开发一</title>
    <link href="https://myblong.zkb/2019/06/16/share/pyqt%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/"/>
    <id>https://myblong.zkb/2019/06/16/share/pyqt基础开发/</id>
    <published>2019-06-16T14:07:00.316Z</published>
    <updated>2019-06-16T14:14:00.198Z</updated>
    
    <content type="html"><![CDATA[<p>## 简单对比原生开发和Qt开发的不同之处。<br>  Qt开发似乎需要写更多的代码，需要更复杂的操作。<br>  其实不慌，当你学习了 QtDesigner 之后，你就会开始觉得原生开发是多么地不人性化了:-)<br><a id="more"></a><br><div class="article-inner">          <input type="hidden" class="isFancy">                <div class="article-info article-info-post">                          <div class="article-meta">                    </div>                <div class="clearfix"></div>      </div>              <div class="article-entry" itemprop="articleBody">                        <h1 id="QtDesigner-介绍-amp-入门"><a href="#QtDesigner-介绍-amp-入门" class="headerlink"></a>QtDesigner 介绍&amp;入门</h1><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink"></a>前言</h2><blockquote><p>&emsp;&emsp;简单对比原生开发和Qt开发的不同之处。<br>&emsp;&emsp;Qt开发似乎需要写更多的代码，需要更复杂的操作。<br>&emsp;&emsp;其实不慌，当你学习了 QtDesigner 之后，你就会开始觉得原生开发是多么地不人性化了:-)</p></blockquote><h2 id="什么是-QtDesigner"><a href="#什么是-QtDesigner" class="headerlink"></a>什么是 QtDesigner</h2><blockquote><p>&emsp;&emsp;QtDesigner是由官方推出并维护的，图形化界面制作窗口的工具。<br>&emsp;&emsp;如果你接触过 Android 开发 以及 Web前端的 Bootstrap 可视化，都可以感受到这种拖拽开发的快速之处。<br>&emsp;&emsp;当然目前我觉得图形化拖拽做得最好的还是QtDsigner。<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/01.gif" title="Android Studio 图形化界面开发" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/01.gif" title="Android Studio 图形化界面开发"></a><br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/02.gif" title="Bootstrap 可视化开发" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/02.gif" title="Bootstrap 可视化开发"></a></p></blockquote><!-- ![alt](https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/02.gif) --><h2 id="安装Qt-Designer"><a href="#安装Qt-Designer" class="headerlink"></a>安装Qt Designer</h2><blockquote><p>&emsp;&emsp;安装Qt Designer 的方法有很多</p><ul><li>安装官方提供的 Qt Creator 开发软件</li><li>安装任意 Qt Python包</li><li>安装Maya自带Qt Designer</li></ul></blockquote><h3 id="Qt-Creator"><a href="#Qt-Creator" class="headerlink"></a>Qt Creator</h3><blockquote><p>&emsp;&emsp;Qt Creator是一个IDE，是针对Qt优化的 C++ 开发平台，里面内置了许多Qt开发相关的工具，Qt Designer 就在其中。<br>&emsp;&emsp;具体安装流程参考网上的<a href="https://blog.csdn.net/qq_23473839/article/details/80523318" target="_blank" rel="noopener">文章</a></p></blockquote><h3 id="Qt-Python-包"><a href="#Qt-Python-包" class="headerlink"></a>Qt Python 包</h3><blockquote><p>&emsp;&emsp;安装任意Qt Python 包<br>&emsp;&emsp;只要安装好 Python 环境，可以打开cmd控制台，通过 pip 安装相关的 Pyhton 包<br>&emsp;&emsp;另外需要注意的是，如果安装旧版本的 PyQt4 ，已经无法直接通过 pip install 安装，需要手动到对应的网站下载 wheel 进行安装。<a href="https://blog.csdn.net/wlanye/article/details/83855668" target="_blank" rel="noopener">参考</a><br>&emsp;&emsp;当你安装好之后，你可以在 Pyhton 的 site-packages 目录下找到 PyQt4 文件夹<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/03.png" title="PyQt4 文件夹" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/03.png" title="PyQt4 文件夹"></a><br>&emsp;&emsp;打开目录可以找到 designer.exe 程序<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/04.png" title="designer.exe 程序" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/04.png" title="designer.exe 程序"></a></p></blockquote><h3 id="Maya-自带-Qt-Designer"><a href="#Maya-自带-Qt-Designer" class="headerlink"></a>Maya 自带 Qt Designer</h3><blockquote><p>&emsp;&emsp;打开 maya 的安装路径<br>&emsp;&emsp;可以在 bin 目录下找到 designer.exe 程序<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/05.png" title="designer.exe 程序" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/05.png" title="designer.exe 程序"></a><br>&emsp;&emsp;maya中的 designer.exe 程序打开可能会报错<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/06.png" title="报错" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/06.png" title="报错"></a><br>&emsp;&emsp;网上可以找到解决方案 <a href="https://www.cnblogs.com/ibingshan/p/9784087.html" target="_blank" rel="noopener">参考</a></p></blockquote><h2 id="初始-Qt-Designer"><a href="#初始-Qt-Designer" class="headerlink"></a>初始 Qt Designer</h2><blockquote><p>&emsp;&emsp;启动 Qt Designer 之后可以看到如下画面<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/07.png" title="Qt Designer 初始界面" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/07.png" title="Qt Designer 初始界面"></a><br>&emsp;&emsp;我们可以选择 widget 创建出窗口<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/08.png" title="创建 Widget 窗口" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/08.png" title="创建 Widget 窗口"></a><br>&emsp;&emsp;下面就可以拖拽左侧的组件到窗口上<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/09.gif" title="创建排列UI" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/09.gif" title="创建排列UI"></a><br>&emsp;&emsp;注：按住 ctrl 拖拽可以快速复制组件<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/10.png" title="布局按钮" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/10.png" title="布局按钮"></a><br>&emsp;&emsp;窗口上方的这些按钮可以改变窗口的布局，也可以从左侧拖拽相关的布局到窗口上。<br>&emsp;&emsp;Qt 自带的布局我上期教程也有提及过，最常用的有</p><ul><li>QHBoxLayout - 横向布局</li><li>QVBoxLayout - 竖向布局</li><li>QGridLayout - 网格布局</li></ul><p>&emsp;&emsp;通过这些布局就可以让组件等分排布，从而减少UI的凌乱感<br>&emsp;&emsp;横向布局 就是将布局内部的组件 横向等分排列<br>&emsp;&emsp;竖向布局 也顾名思义<br>&emsp;&emsp;<br>&emsp;&emsp;网格布局 则需要给定网格的位置对网格进行等分，也可以让组件占用多个网格，或者空出多余的网格。<br>&emsp;&emsp;通过网格布局可以排列出下面这种形态组件状态。<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/11.gif" title="网格布局" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/11.gif" title="网格布局"></a></p></blockquote><blockquote><p>&emsp;&emsp;在 Qt Designer 的右侧有属性编辑器以及对象查看器的大纲视图<br>&emsp;&emsp;属性编辑器可以编辑UI的属性，不过很多时候，是用代码来动态修改这些属性。<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/12.png" title="XML文件" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/12.png" title="XML文件"></a><br>&emsp;&emsp;通常情况下，objectName比较重要，因为后面代码调用的时候会通过 objectName 的属性来调用。<br>&emsp;&emsp;当你创建完成 UI 之后，就可以 ctrl+s 保存当前编辑的文件<br>&emsp;&emsp;Qt Designer 会输出一个后缀为 ui 的文件<br>&emsp;&emsp;如果你用文本编辑器打开 ui 文件，你会发现其实它是个XML文件<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/13.png" title="XML文件" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/13.png" title="XML文件"></a><br>&emsp;&emsp;因此当你熟悉了它XML输出的格式也可以通过魔改XML里面的内容来生成出特殊的组件文件。</p></blockquote><h2 id="在-maya-中调用-ui-文件"><a href="#在-maya-中调用-ui-文件" class="headerlink"></a>在 maya 中调用 ui 文件</h2><blockquote><p>&emsp;&emsp;默认情况下 ui 文件只是 XML 配置而已，是无法直接使用的。<br>&emsp;&emsp;不过也有多种情况让ui文件运行起来</p><ul><li>通过 python Qt 框架下的 pyuic5 或者 pyside2-uic 将 ui 文件编译为 python 文件</li><li>导入uic相关的python模块，通过读取 ui 文件的内容动态编译python代码</li><li>直接用 maya 内置的命令编译 ui 文件</li></ul></blockquote><h3 id="编译-ui-文件"><a href="#编译-ui-文件" class="headerlink"></a>编译 ui 文件</h3><blockquote><p>&emsp;&emsp;在maya安装目录的bin目录下有 pyside2-uic 程序  - <a href="1547a34f.html#环境变量-扩展">如何使用CMD命令我在第三期教程做了补充</a><br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/14.png" title="pyside2-uic 程序" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/14.png" title="pyside2-uic 程序"></a></p></blockquote><blockquote><p>&emsp;&emsp;这个程序要运行起来需要添加 .exe 后缀，而且在我的电脑上运行会出现报错。<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/21.png" title="pyside2-uic编译程序" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/21.png" title="pyside2-uic编译程序"></a><br>&emsp;&emsp;注: bin 目录下还有 uic.exe 程序是可用的，只不过编译出来的文件是 C++ 代码 <em>(:з」∠)</em></p></blockquote><blockquote><p>&emsp;&emsp;因此如果maya内置uic编译器不可用的话，可以通过安装相关的 Python Qt 库，可以在相关路径下找到编译程序<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/15.png" title="PyQt 包下的 编译程序" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/15.png" title="PyQt 包下的 编译程序"></a><br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/20.png" title="pyside2-uic编译程序" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/20.png" title="pyside2-uic编译程序"></a><br>&emsp;&emsp;通过命令行调用这个程序后面加上 -h 可以显示出使用方法<br><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/16.png" title="pyside2-uic 程序 帮助" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/16.png" title="pyside2-uic 程序 帮助"></a></p></blockquote><figure class="highlight bash resize0" data-lang="bash"><div style="position: absolute; top: 14385.4px; right: 2em;"><button type="button" class="btn btn-primary" id="copyBtn0" data-clipboard-action="copy" data-clipboard-target=".code0">复制</button></div><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code code0"><pre><span class="line">pyside2-uic C:\Users\Administrator\Desktop\img\test.ui -o C:\Users\Administrator\Desktop\img\test_ui.py</span><br></pre></td></tr></tbody></table><style>.highlight.resize0::before{width:1072px}</style></figure><blockquote><p>&emsp;&emsp;基本写法就是： <code>程序名 ui文件 -o 输出的python文件</code><br>&emsp;&emsp;这样就可以将 ui 文件 编译为 python 文件，不过需要注意的是 PyQt的编译 maya 需要 改为 PySide 的库进行导入<br>&emsp;&emsp;编译好的文件可以通过继承的方法来调用。</p></blockquote><figure class="highlight python resize1" data-lang="python"><div style="position: absolute; top: 14649.4px; right: 2em;"><button type="button" class="btn btn-primary" id="copyBtn1" data-clipboard-action="copy" data-clipboard-target=".code1">复制</button></div><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code code1"><pre><span class="line"><span class="comment"># 编译好的 ui 文件 导入其中的类(类名和UI文件当中的最外层的组件的objectName一致)</span></span><br><span class="line"><span class="keyword">from</span> test_ui <span class="keyword">import</span> Ui_Form</span><br><span class="line"><span class="keyword">from</span> PySide2.QtGui <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PySide2.QtWidgets <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PySide2.QtCore <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">window</span><span class="params">(Ui_Form,QWidget)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 执行 QWidget 的 __init__ </span></span><br><span class="line">        super(window,self).__init__()</span><br><span class="line">        <span class="comment"># 从 Ui_Form 继承的方法，可以直接将ui生成出来</span></span><br><span class="line">        self.setupUi(self)</span><br><span class="line">        self.setWindowTitle(<span class="string">u"用 pyside2-uic 程序编译python 继承出来的窗口"</span>)</span><br><span class="line">        self.show()</span><br><span class="line">        </span><br><span class="line">win = window()</span><br></pre></td></tr></tbody></table><style>.highlight.resize1::before{width:1072px}</style></figure><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/17.png" title="代码执行效果" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/17.png" title="代码执行效果"></a></p><h3 id="直接用代码编译"><a href="#直接用代码编译" class="headerlink"></a>直接用代码编译</h3><blockquote><p>&emsp;&emsp;此处可以参考我以前看教程写的<a href="ef451c1b.html">文章</a></p></blockquote><figure class="highlight python resize2" data-lang="python"><div style="position: absolute; top: 15854.5px; right: 2em;"><button type="button" class="btn btn-primary" id="copyBtn2" data-clipboard-action="copy" data-clipboard-target=".code2">复制</button></div><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code code2"><pre><span class="line"><span class="keyword">from</span> PySide2.QtCore <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PySide2.QtGui <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PySide2.QtWidgets <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> pyside2uic</span><br><span class="line"><span class="keyword">import</span> xml.etree.ElementTree <span class="keyword">as</span> xml</span><br><span class="line"><span class="keyword">from</span> cStringIO <span class="keyword">import</span> StringIO</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loadUiType</span><span class="params">(uiFile)</span>:</span></span><br><span class="line">    <span class="comment"># 通过XML模块读取ui文件</span></span><br><span class="line">    parsed = xml.parse(uiFile)</span><br><span class="line">    <span class="comment"># 获取Qt相关的组件名</span></span><br><span class="line">    widget_class = parsed.find(<span class="string">'widget'</span>).get(<span class="string">'class'</span>)</span><br><span class="line">    <span class="comment"># 获取类名</span></span><br><span class="line">    form_class = parsed.find(<span class="string">'class'</span>).text</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> open(uiFile, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        o = StringIO()</span><br><span class="line">        frame = {}</span><br><span class="line">        <span class="comment"># 通过 pyside2uic 编译 ui 文件</span></span><br><span class="line">        pyside2uic.compileUi(f, o, indent=<span class="number">0</span>)</span><br><span class="line">        <span class="comment"># o.getvalue() 这里的数据就是 UI 文件编程python的代码，通过 exec 执行这个字符串</span></span><br><span class="line">        pyc = compile(o.getvalue(), <span class="string">'&lt;string&gt;'</span>, <span class="string">'exec'</span>)</span><br><span class="line">        <span class="keyword">exec</span> pyc <span class="keyword">in</span> frame</span><br><span class="line"></span><br><span class="line">        <span class="comment"># form_class 就是ui文件编译出来的类名</span></span><br><span class="line">        form_class = frame[<span class="string">'Ui_%s'</span>%form_class]</span><br><span class="line">        <span class="comment"># base_class 就是Qt的窗口组件 eval 获取出 变量</span></span><br><span class="line">        base_class = eval(<span class="string">'%s'</span>%widget_class)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> form_class, base_class</span><br><span class="line"></span><br><span class="line">UI_PATH = <span class="string">r"C:\Users\Administrator\Desktop\test.ui"</span></span><br><span class="line">form_class , base_class = loadUiType(UI_PATH)</span><br><span class="line"><span class="comment"># 这里的继承其实和上面编译好的 ui 文件的代码是一样的</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Interface</span><span class="params">(base_class,form_class)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super(Interface,self).__init__()</span><br><span class="line">        self.setupUi(self)</span><br><span class="line">        self.setWindowTitle(<span class="string">u"用 pyside2uic 编译出来的窗口"</span>)</span><br><span class="line">        self.show()</span><br><span class="line">ui = Interface()</span><br></pre></td></tr></tbody></table><style>.highlight.resize2::before{width:1072px}</style></figure><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/18.png" title="代码执行效果" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/18.png" title="代码执行效果"></a></p><blockquote><p>&emsp;&emsp;通过这个函数可以直接将ui文件在编译到内存当中，这样每次修改ui文件就不需要再额外用 exe 工具进行编译了<br>&emsp;&emsp;当然缺点就是没有了ui编译好的python文件，组件的自动代码提示也就没有了，所以开发的时候还需要对着 Qt Designer 的名字，有点麻烦。</p></blockquote><blockquote><p>&emsp;&emsp;额外补充一下，上述的方案只适用于 PySide ，如果使用PyQt实现的话，代码会简略很多。</p></blockquote><figure class="highlight python resize3" data-lang="python"><div style="position: absolute; top: 17696.1px; right: 2em;"><button type="button" class="btn btn-primary" id="copyBtn3" data-clipboard-action="copy" data-clipboard-target=".code3">复制</button></div><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code code3"><pre><span class="line"><span class="keyword">from</span> PyQt4 <span class="keyword">import</span> uic</span><br><span class="line">form_class , base_class = uic.loadUiType(UI_PATH)</span><br></pre></td></tr></tbody></table><style>.highlight.resize3::before{width:1072px}</style></figure><h3 id="maya-内置命令编译UI文件"><a href="#maya-内置命令编译UI文件" class="headerlink"></a>maya 内置命令编译UI文件</h3><blockquote><p>&emsp;&emsp;maya的 mel 有 <a href="http://help.autodesk.com/cloudhelp/2018/ENU/Maya-Tech-Docs/Commands/loadUI.html" target="_blank" rel="noopener">loadUi</a> 命令，可以直接将ui文件路径读取 生成出 maya 的窗口</p></blockquote><figure class="highlight mel resize4" data-lang="mel"><div style="position: absolute; top: 17971px; right: 2em;"><button type="button" class="btn btn-primary" id="melBtn4">MEL原生样式</button><button type="button" class="btn btn-primary" id="copyBtn4" data-clipboard-action="copy" data-clipboard-target=".code4">复制</button></div><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code code4"><pre><span class="line"><span class="mel_command">string</span> $dialog1 = <span class="mel_string">`loadUI -f "C:\\Users\\Administrator\\Desktop\\test.ui"`</span>;</span><br><span class="line"><span class="mel_keyword">window</span> -e -title <span class="mel_string">"通过 mel 编译的 ui 文件"</span> $dialog1;</span><br><span class="line"><span class="mel_keyword">showWindow</span> $dialog1;</span><br></pre></td></tr></tbody></table><style>.highlight.resize4::before{width:1072px}</style></figure><p><a data-fancybox-href="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/19.png" title="代码执行效果" rel="fancy-group" class="fancy-ctn fancybox"><img src="https://blog-image-1257068932.cos.ap-guangzhou.myqcloud.com/Python%20QT/session2/19.png" title="代码执行效果"></a></p><h2 id="总结"><a href="#总结" class="headerlink"></a>总结</h2><blockquote><p>&emsp;&emsp;Qt designer 的使用并不复杂，虽然Qt Designer 支持信号槽等比较高级的开发内容，但是由于很难通过 XML 来实现所需要的触发效果，因此难当大任。<br>&emsp;&emsp;我目前使用 Qt designer 也是为了快速创建出UI界面，毕竟手打界面的效率还是比较低的，特别是还要考虑各种固定组件的布局位置。<br>&emsp;&emsp;后续的组件触发大都是放在 python 代码当中完成。<br>&emsp;&emsp;如果想要更进一步了解 Qt Designer 的开发，可以参考B站上的教程</p><ul><li><a href="https://www.bilibili.com/video/av36210854" target="_blank" rel="noopener">Python桌面系统开发 PYQT5全套教程</a></li></ul></blockquote>          </div>      </div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;## 简单对比原生开发和Qt开发的不同之处。&lt;br&gt;  Qt开发似乎需要写更多的代码，需要更复杂的操作。&lt;br&gt;  其实不慌，当你学习了 QtDesigner 之后，你就会开始觉得原生开发是多么地不人性化了:-)&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://myblong.zkb/categories/python/"/>
    
    
      <category term="python" scheme="https://myblong.zkb/tags/python/"/>
    
      <category term="python基础" scheme="https://myblong.zkb/tags/python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>关于WorldMachine基础介绍</title>
    <link href="https://myblong.zkb/2019/06/15/share/WorldMachine%E5%9F%BA%E7%A1%80/"/>
    <id>https://myblong.zkb/2019/06/15/share/WorldMachine基础/</id>
    <published>2019-06-15T15:02:16.949Z</published>
    <updated>2019-06-15T16:01:19.753Z</updated>
    
    <content type="html"><![CDATA[<p>WorldMachine基础介绍<br><a id="more"></a><br><article class="article-content"><p>大家好，这里带来的是用<a href="" title="" target="_blank" data-original-title="关于WorldMachine的文章">WorldMachine</a>+制造出非常有装逼效果的地形，适合做一些daily render的小练习。</p><p>*这个教程非常初级，仅供参考。</p><p><a href="" title="" target="_blank" data-original-title="查看更多关于WorldMachine的文章">WorldMachine</a>是一款专业的三维山脉和地形生成软件，它可以生动模拟大自然的真实地形，并给您一个交互编辑的环境，让您快速又轻松地创建专业地形，创建完成以后，您可以将模型，贴图，高度图导出到您的三维软件或者游戏引<span id="pos_placeholder" style="width: 0px;height: 0px;margin: 0px;padding: 0px"></span>擎当中进一步使用。</p><p>由于我们是使用<a href="" title="" target="_blank" data-original-title="查看更多关于WorldMachine的文章">WorldMachine</a>与C4D进行结合，主要讲<a href="" title="" target="_blank" data-original-title="查看更多关于WorldMachine的文章">WorldMachine</a>与其他三维软件的结合中的一些常用工具，不会涉及到很多的关于真实地形的创建，更多的是讲一些关于艺术化、风格化的地形的创建。</p><p><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122007155882.png" title="" rel="external" data-original-title="（1）" target="_blank"><br><img title=" 1" alt=" 1" class="aligncenter size-full wp-image-3207" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122007155882.png"></a></p><p><a href="https://www.btbat.com/tag/worldmachine" title="" target="_blank" data-original-title="查看更多关于WorldMachine的文章">WorldMachine</a>的工作流程依靠节点化的编辑，对基础的地形进行一些合成、修改的操作来达到自己想要的效果，如果对于Substance Designer，阿诺德这种用节点化编辑的比较熟悉的就可以很快的上手<a href="https://www.btbat.com/tag/worldmachine" title="" target="_blank" data-original-title="查">WorldMachine</a>。</p><p>接下来我们进入正题，开始用WorldMachine创造出一个属于你自己的地形。</p><p>首先，我们点击Generator（生成器）来创建一些基础的地形，这些基础的地形可以相互之间以上一个节点输出参数加上下一个节点的参数进行生成。</p><p><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122007400859.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 2" alt="学习使我快乐！ - 2" class="aligncenter size-full wp-image-3211 okmemo-dragging" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122007400859.png"></a></p><p>这里我先创建了一个基础的Radial Grad，就是一个山丘的样子，再创建一个Advanced Perlin，将Radial Grad节点的输出与shaping guide相链接，相当于在平地上放置一座山峰。</p><p><a class="okmemo-tmp-unselect" href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122007464568.png" rel="external" title="" data-original-title="）" target="_blank"><img title=" 3" alt=" - 3" class="aligncenter size-full wp-image-3213 okmemo-dragging" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122007464568.png"></a><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122007464527.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 4" alt="学习使我快乐！ - 4" class="aligncenter size-full wp-image-3212" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122007464527.png"></a> <a href="http://img0.btbat.com/wp-content/uploads/2017/12/201712200746461.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 5" alt="学习使我快乐！ - 5" class="aligncenter size-full wp-image-3214" src="http://img0.btbat.com/wp-content/uploads/2017/12/201712200746461.png"></a></p><p>我们可以点击当前节点并点击lock preview锁定当前节点的预览，可以双击节点点开更加详细的参数的控制，在advanced perlin节点里，scale控制山体的形态，style控制山体梯度模式，octaves控制山体梯度等级。在radial grad节点里，radius控制突起的范围，type控制山体种类，生成器类的参数基本都类似，具体参数就不做过多讲解了，可以自行调整看看效果。</p><p><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122007504530.png" rel="external" class="fancybox" title="" data-original-title="）" target="_blank"><img title="学习使我快乐！ - 6" alt="学习使我快乐！ - 6" class="aligncenter size-full wp-image-3217" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122007504530.png"></a> <a href="http://img0.btbat.com/wp-content/uploads/2017/12/201712200750114.png" rel="external" class="fancybox" title="" data-original-title="）" target="_blank"><img title="学习使我快乐！ - 7" alt="学习使我快乐！ - 7" class="aligncenter size-full wp-image-3216" src="http://img0.btbat.com/wp-content/uploads/2017/12/201712200750114.png"></a> <a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122007501053.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 8" alt="地形！学习使我快乐！ - 8" class="aligncenter size-full wp-image-3215" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122007501053.png"></a></p><p>接下来我们创建一个voroni节点，并调整voroni节点的scale，将其缩小，产生更多的细节。</p><p><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008013461.png" title="" rel="external" data-original-title="1）" target="_blank"><br></a> <a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008042199.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 9" alt="学习使我快乐！ - 9" class="aligncenter size-full wp-image-3220" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008042199.png"></a></p><p>我们在combiner选项里面创建一个combiner节点，将advanced perlin节点和voroni节点进行混合，调整combiner节点的method方法改成add，将两个节点进行添加模式。</p><p>&nbsp;</p><p><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008075137.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 10" alt="学习使我快乐！ - 10" class="aligncenter size-full wp-image-3221" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008075137.png"></a></p><p>接下来在nature节点里添加erosion（侵蚀，风化）节点将erosion节点的duration（持续时间）rock hardness （石化程度）sediment carrya mount（泥沙沉积量）进行调整，并可以点击上方绿色按钮进行地形的生成运算，点击上方绿色按钮左侧3D view可以进行3D的预览。</p><p><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008233013.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 11" alt="学习使我快乐！ - 11" class="aligncenter size-full wp-image-3224" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008233013.png"></a></p><p>接下来，我们复制一层erosion节点，将两个erosion节点连在一起，减少rock hardness、提高sediment carry amount，提高duration，再次进行计算，提高地面平滑，增加山峰细节。<a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008304584.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 12" alt="学习使我快乐！ - 12" class="aligncenter size-full wp-image-3229" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008304584.png"></a></p><p>我们可以点击3D view上面的A|B进行计算前后的效果预览。</p><p><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008340027.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 13" alt="学习使我快乐！ - 13" class="aligncenter size-full wp-image-3230" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008340027.png"></a></p><p>目前基础地形的创建就到此完毕，用基础的几个节点创建了一个山峰的地形，是不是很简单呢~</p><p>那么我们开始进行上色吧~</p><p>在selector（选择器）创建一个slope(斜率）节点，将erosion的primary输出到slope节点将erosion的wear map（磨损）输出到slope的mask，调整阈值，可以输出成山脉的树叶纹理。</p><p><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008443330.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 14" alt="学习使我快乐！ - 14" class="aligncenter size-full wp-image-3234 okmemo-dragging" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008443330.png"></a><a href="http://img0.btbat.com/wp-content/uploads/2017/12/201712200844302.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 15" alt="学习使我快乐！ - 15" class="aligncenter size-full wp-image-3233" src="http://img0.btbat.com/wp-content/uploads/2017/12/201712200844302.png"></a></p><p>接下来我们在macros（宏）点击左边的打开，找到basic coverage，这个是系统预设好的上色的宏命令，或者也可以用converter里的colorizer节点，但是不推荐，这样就生成了山脉树叶纹理的颜色了，或者也可以吧erosion直接连到basic coverage，可以出来不同的效果，看个人喜好。可以改变rock和erosion的颜色，来出来不同的效果。上色部分就就基本上完成了。</p><p><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008500641.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 16" alt="学习使我快乐！ - 16" class="aligncenter size-full wp-image-3236" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122008500641.png"></a></p><p>接下来就是导出部分。</p><p>在output里面依次创建mesh output、height output、bitmap output，再在converter里面创建normal-map maker并创建一个bitmap output。</p><p>将erosion连接到height output &nbsp;输出黑白的置换图，输出到meshkey输出obj格式的mesh模型，还可以新建一个overlay view去预览最后的成品，将basic coverage连接到overlay的颜色通道 erosion连接到overlay就可以看到自己做的成品啦，当然之前要先build一下。</p><p>normal-map maker+bitmap可以输出基于地形的法线贴图。</p><p>然后basic coverage+bitmap就是输出颜色贴图了~~</p><p><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122009004320.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 17" alt="学习使我快乐！ - 17" class="aligncenter size-full wp-image-3238" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122009004320.png"></a></p><p>然后设置一下目录~然后就可以准备输出了。</p><p><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122009180681.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 18" alt="学习使我快乐！ - 18" class="aligncenter size-full wp-image-3244" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122009180681.png"></a> <a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122009180738.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 19" alt="学习使我快乐！ - 19" class="aligncenter size-full wp-image-3245" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122009180738.png"></a> <a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122009180736.png" rel="external" class="fancybox" title="" data-original-title="）" target="_blank"><img title="学习使我快乐！ - 20" alt="学习使我快乐！ - 20" class="aligncenter size-full wp-image-3246" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122009180736.png"></a></p><p>点击上面的world extents，可以修改地形的总体大小与容差高度，主要的是右边的是resolution控制输出的地形和贴图的精度，当然越大效果越精细，但是生成的时间就越长。</p><p><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122009205191.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 21" alt="学习使我快乐！ - 21" class="aligncenter size-full wp-image-3247" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122009205191.png"></a></p><p>一切设置完毕之后就可以点击build，然后静待生成，点击export即可导出到设置的文件夹了。</p><p><a href="http://img0.btbat.com/wp-content/uploads/2017/12/2017122009241691.png" rel="external" class="fancybox" title="" data-original-title="" target="_blank"><img title="学习使我快乐！ - 22" alt="学习使我快乐！ - 22" class="aligncenter size-full wp-image-3249" src="http://img0.btbat.com/wp-content/uploads/2017/12/2017122009241691.png"></a></p><p>~~简单的流程就这样~十分基础的教学，下次我会讲一下怎么贴材质到地形。</p><p>补一张2K的完成图。</p>         </article></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WorldMachine基础介绍&lt;br&gt;
    
    </summary>
    
      <category term="WorldMachine" scheme="https://myblong.zkb/categories/WorldMachine/"/>
    
    
      <category term="WorldMachine" scheme="https://myblong.zkb/tags/WorldMachine/"/>
    
      <category term="基础" scheme="https://myblong.zkb/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Python系列（二）之Python函数</title>
    <link href="https://myblong.zkb/2019/06/14/python%E5%AD%A6%E4%B9%A0_2/"/>
    <id>https://myblong.zkb/2019/06/14/python学习_2/</id>
    <published>2019-06-14T15:28:18.166Z</published>
    <updated>2019-06-14T15:31:04.028Z</updated>
    
    <content type="html"><![CDATA[<p>使用pycharm给玛雅写python<br><a id="more"></a><br><div id="toc" class="toc-article toc-fixed">        <strong class="toc-title">Contents</strong>                  <ol class="toc-nav"><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#1-内置函数"><span class="toc-nav-number">1.</span> <span class="toc-nav-text">1. 内置函数</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#11-数据类型转换函数"><span class="toc-nav-number">1.1.</span> <span class="toc-nav-text">1.1 数据类型转换函数</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#12-函数引用"><span class="toc-nav-number">1.2.</span> <span class="toc-nav-text">1.2 函数引用</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#2-定义函数"><span class="toc-nav-number">2.</span> <span class="toc-nav-text">2. 定义函数</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#21-函数定义"><span class="toc-nav-number">2.1.</span> <span class="toc-nav-text">2.1 函数定义</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#22-空函数"><span class="toc-nav-number">2.2.</span> <span class="toc-nav-text">2.2 空函数</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#23-参数检查"><span class="toc-nav-number">2.3.</span> <span class="toc-nav-text">2.3 参数检查</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#24-多返回值"><span class="toc-nav-number">2.4.</span> <span class="toc-nav-text">2.4 多返回值</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#3-函数的参数"><span class="toc-nav-number">3.</span> <span class="toc-nav-text">3. 函数的参数</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#31-位置参数"><span class="toc-nav-number">3.1.</span> <span class="toc-nav-text">3.1 位置参数</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#32-默认参数"><span class="toc-nav-number">3.2.</span> <span class="toc-nav-text">3.2 默认参数</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#33-可变参数"><span class="toc-nav-number">3.3.</span> <span class="toc-nav-text">3.3 可变参数</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#34-关键字参数"><span class="toc-nav-number">3.4.</span> <span class="toc-nav-text">3.4 关键字参数</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#35-命名关键字参数"><span class="toc-nav-number">3.5.</span> <span class="toc-nav-text">3.5 命名关键字参数</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#36-参数组合"><span class="toc-nav-number">3.6.</span> <span class="toc-nav-text">3.6 参数组合</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#4-递归函数"><span class="toc-nav-number">4.</span> <span class="toc-nav-text">4. 递归函数</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#41-递归函数的定义"><span class="toc-nav-number">4.1.</span> <span class="toc-nav-text">4.1 递归函数的定义</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#42-栈溢出问题"><span class="toc-nav-number">4.2.</span> <span class="toc-nav-text">4.2 栈溢出问题</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#43-尾递归"><span class="toc-nav-number">4.3.</span> <span class="toc-nav-text">4.3 尾递归</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#推荐文章"><span class="toc-nav-number">5.</span> <span class="toc-nav-text">推荐文章</span></a></li></ol>                </div><div class="                col-lg-8 col-lg-offset-2                col-md-10 col-md-offset-1                post-container">                <h2 id="1-内置函数"><a class="anchorjs-link " href="#1-内置函数" aria-label="Anchor link for: 1 内置函数" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>1. 内置函数</h2><p>python的内置参数详见以下链接，也可以通过help(function_name)来查看具体函数的使用帮助。</p><p><a href="http://docs.python.org/3/library/functions.html#abs" target="_blank" rel="noopener">http://docs.python.org/3/library/functions.html#abs</a></p><div class="table-responsive"><table class="table"><thead><tr><th></th><th>Built-in Functions</th><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="https://docs.python.org/3/library/functions.html#abs" target="_blank" rel="noopener"><code>abs()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-dict" target="_blank" rel="noopener"><code>dict()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#help" target="_blank" rel="noopener"><code>help()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#min" target="_blank" rel="noopener"><code>min()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#setattr" target="_blank" rel="noopener"><code>setattr()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#all" target="_blank" rel="noopener"><code>all()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#dir" target="_blank" rel="noopener"><code>dir()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#hex" target="_blank" rel="noopener"><code>hex()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#next" target="_blank" rel="noopener"><code>next()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#slice" target="_blank" rel="noopener"><code>slice()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#any" target="_blank" rel="noopener"><code>any()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#divmod" target="_blank" rel="noopener"><code>divmod()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#id" target="_blank" rel="noopener"><code>id()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#object" target="_blank" rel="noopener"><code>object()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#sorted" target="_blank" rel="noopener"><code>sorted()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#ascii" target="_blank" rel="noopener"><code>ascii()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#enumerate" target="_blank" rel="noopener"><code>enumerate()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#input" target="_blank" rel="noopener"><code>input()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#oct" target="_blank" rel="noopener"><code>oct()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#staticmethod" target="_blank" rel="noopener"><code>staticmethod()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#bin" target="_blank" rel="noopener"><code>bin()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#eval" target="_blank" rel="noopener"><code>eval()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#int" target="_blank" rel="noopener"><code>int()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#open" target="_blank" rel="noopener"><code>open()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-str" target="_blank" rel="noopener"><code>str()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#bool" target="_blank" rel="noopener"><code>bool()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#exec" target="_blank" rel="noopener"><code>exec()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#isinstance" target="_blank" rel="noopener"><code>isinstance()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#ord" target="_blank" rel="noopener"><code>ord()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#sum" target="_blank" rel="noopener"><code>sum()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#func-bytearray" target="_blank" rel="noopener"><code>bytearray()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#filter" target="_blank" rel="noopener"><code>filter()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#issubclass" target="_blank" rel="noopener"><code>issubclass()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#pow" target="_blank" rel="noopener"><code>pow()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#super" target="_blank" rel="noopener"><code>super()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#func-bytes" target="_blank" rel="noopener"><code>bytes()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#float" target="_blank" rel="noopener"><code>float()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#iter" target="_blank" rel="noopener"><code>iter()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#print" target="_blank" rel="noopener"><code>print()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-tuple" target="_blank" rel="noopener"><code>tuple()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#callable" target="_blank" rel="noopener"><code>callable()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#format" target="_blank" rel="noopener"><code>format()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#len" target="_blank" rel="noopener"><code>len()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#property" target="_blank" rel="noopener"><code>property()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#type" target="_blank" rel="noopener"><code>type()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#chr" target="_blank" rel="noopener"><code>chr()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-frozenset" target="_blank" rel="noopener"><code>frozenset()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-list" target="_blank" rel="noopener"><code>list()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-range" target="_blank" rel="noopener"><code>range()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#vars" target="_blank" rel="noopener"><code>vars()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#classmethod" target="_blank" rel="noopener"><code>classmethod()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#getattr" target="_blank" rel="noopener"><code>getattr()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#locals" target="_blank" rel="noopener"><code>locals()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#repr" target="_blank" rel="noopener"><code>repr()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#zip" target="_blank" rel="noopener"><code>zip()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#compile" target="_blank" rel="noopener"><code>compile()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#globals" target="_blank" rel="noopener"><code>globals()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#map" target="_blank" rel="noopener"><code>map()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#reversed" target="_blank" rel="noopener"><code>reversed()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#__import__" target="_blank" rel="noopener"><code>__import__()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#complex" target="_blank" rel="noopener"><code>complex()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#hasattr" target="_blank" rel="noopener"><code>hasattr()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#max" target="_blank" rel="noopener"><code>max()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#round" target="_blank" rel="noopener"><code>round()</code></a></td><td></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#delattr" target="_blank" rel="noopener"><code>delattr()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#hash" target="_blank" rel="noopener"><code>hash()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-memoryview" target="_blank" rel="noopener"><code>memoryview()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-set" target="_blank" rel="noopener"><code>set()</code></a></td><td></td></tr></tbody></table></div><p>调用函数需要知道函数名和参数，如果传入的参数不对，会报<code>TypeError</code>的错误并且给出错误信息。</p><h3 id="11-数据类型转换函数"><a class="anchorjs-link " href="#11-数据类型转换函数" aria-label="Anchor link for: 11 数据类型转换函数" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>1.1 数据类型转换函数</h3><p>&#8203;  数据类型转换函数可以对数据类型进行转换，例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="string">'123'</span>)</span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="number">12.34</span>)</span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>float(<span class="string">'12.34'</span>)</span><br><span class="line"><span class="number">12.34</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(<span class="number">1.23</span>)</span><br><span class="line"><span class="string">'1.23'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(<span class="number">100</span>)</span><br><span class="line"><span class="string">'100'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bool(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bool(<span class="string">''</span>)</span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></tbody></table></div></figure><h3 id="12-函数引用"><a class="anchorjs-link " href="#12-函数引用" aria-label="Anchor link for: 12 函数引用" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>1.2 函数引用</h3><p>函数名其实就是指向一个函数对象的引用，完全可以把函数名赋给一个变量，相当于给这个函数起了一个“别名”：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = abs <span class="comment"># 变量a指向abs函数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a(<span class="number">-1</span>) <span class="comment"># 所以也可以通过a调用abs函数</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></tbody></table></div></figure><h2 id="2-定义函数"><a class="anchorjs-link " href="#2-定义函数" aria-label="Anchor link for: 2 定义函数" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2. 定义函数</h2><h3 id="21-函数定义"><a class="anchorjs-link " href="#21-函数定义" aria-label="Anchor link for: 21 函数定义" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.1 函数定义</h3><p>&#8203;  在Python中，定义一个函数要使用<code>def</code>语句，依次写出函数名、括号、括号中的参数和冒号<code>:</code>，然后，在缩进块中编写函数体，函数的返回值用<code>return</code>语句返回。如果没有<code>return</code>语句，函数执行完毕后也会返回结果，只是结果为<code>None</code>。<code>return None</code>可以简写为<code>return</code>。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br></pre></td></tr></tbody></table></div></figure><h3 id="22-空函数"><a class="anchorjs-link " href="#22-空函数" aria-label="Anchor link for: 22 空函数" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.2 空函数</h3><p>如果想定义一个什么事也不做的空函数，可以用<code>pass</code>语句：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nop</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></tbody></table></div></figure><p><code>pass</code>语句主要用来暂时让程序运行不报错，待后续再补充函数内容。同理，<code>pass</code>还可以用在其他语句里，比如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></tbody></table></div></figure><h3 id="23-参数检查"><a class="anchorjs-link " href="#23-参数检查" aria-label="Anchor link for: 23 参数检查" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.3 参数检查</h3><p>&#8203;  调用函数时，如果参数个数不对，Python解释器会自动检查出来，并抛出<code>TypeError</code>。如果要对参数类型进行检查，可以使用内置函数<code>isinstance()</code>实现。例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> isinstance(x, (int, float)):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">'bad operand type'</span>)</span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br></pre></td></tr></tbody></table></div></figure><h3 id="24-多返回值"><a class="anchorjs-link " href="#24-多返回值" aria-label="Anchor link for: 24 多返回值" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.4 多返回值</h3><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(x, y, step, angle=<span class="number">0</span>)</span>:</span></span><br><span class="line">    nx = x + step * math.cos(angle)</span><br><span class="line">    ny = y - step * math.sin(angle)</span><br><span class="line">    <span class="keyword">return</span> nx, ny</span><br></pre></td></tr></tbody></table></div></figure><p>&#8203;  实际上python的多返回值是一个tuple。只不过按位置依次赋值。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#多返回值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x, y = move(<span class="number">100</span>, <span class="number">100</span>, <span class="number">60</span>, math.pi / <span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(x, y)</span><br><span class="line"><span class="number">151.96152422706632</span> <span class="number">70.0</span></span><br><span class="line"><span class="comment">#返回值为tuple</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = move(<span class="number">100</span>, <span class="number">100</span>, <span class="number">60</span>, math.pi / <span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(r)</span><br><span class="line">(<span class="number">151.96152422706632</span>, <span class="number">70.0</span>)</span><br></pre></td></tr></tbody></table></div></figure><h2 id="3-函数的参数"><a class="anchorjs-link " href="#3-函数的参数" aria-label="Anchor link for: 3 函数的参数" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3. 函数的参数</h2><p>&#8203;  定义函数的时候，把参数的名字和位置确定下来，函数的接口定义就完成了。对于函数的调用者来说，只需要知道如何传递正确的参数，以及函数将返回什么样的值，而函数内部的复杂逻辑被封装起来，调用者无需了解。</p><h3 id="31-位置参数"><a class="anchorjs-link " href="#31-位置参数" aria-label="Anchor link for: 31 位置参数" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.1 位置参数</h3><p>&#8203;  位置参数，即传入的参数有位置顺序区分。例如以下的<code>x</code>和<code>n</code>根据位置不同，接收对应位置的传入参数。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">power</span><span class="params">(x, n)</span>:</span></span><br><span class="line">    s = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        n = n - <span class="number">1</span></span><br><span class="line">        s = s * x</span><br><span class="line">    <span class="keyword">return</span> s</span><br></pre></td></tr></tbody></table></div></figure><h3 id="32-默认参数"><a class="anchorjs-link " href="#32-默认参数" aria-label="Anchor link for: 32 默认参数" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.2 默认参数</h3><p>&#8203;  默认参数，即对某个参数设置默认值，如果没有传入该参数则使用默认值，如果有传入该参数则使用传入值。</p><ul><li>必须参数在前，默认参数在后</li></ul><ul><li>一般将变化小的参数设置为默认参数，变化大的设置为必选参数</li></ul><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#函数定义</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">power</span><span class="params">(x, n=<span class="number">2</span>)</span>:</span></span><br><span class="line">    s = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        n = n - <span class="number">1</span></span><br><span class="line">        s = s * x</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"><span class="comment">#函数调用   </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>power(<span class="number">5</span>)</span><br><span class="line"><span class="number">25</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>power(<span class="number">5</span>, <span class="number">3</span>)</span><br><span class="line"><span class="number">125</span></span><br></pre></td></tr></tbody></table></div></figure><p>有多个默认参数时，可以按顺序提供默认参数，也可以指定默认参数的参数名传值而不按参数顺序。例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#函数定义</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enroll</span><span class="params">(name, gender, age=<span class="number">6</span>, city=<span class="string">'Beijing'</span>)</span>:</span></span><br><span class="line">    print(<span class="string">'name:'</span>, name)</span><br><span class="line">    print(<span class="string">'gender:'</span>, gender)</span><br><span class="line">    print(<span class="string">'age:'</span>, age)</span><br><span class="line">    print(<span class="string">'city:'</span>, city)</span><br><span class="line"><span class="comment">#按顺序提供默认参数，即7表示age的值   </span></span><br><span class="line">enroll(<span class="string">'Bob'</span>, <span class="string">'M'</span>, <span class="number">7</span>)</span><br><span class="line"><span class="comment">#按参数名提供默认参数，即city值，而没有age的值</span></span><br><span class="line">enroll(<span class="string">'Adam'</span>, <span class="string">'M'</span>, city=<span class="string">'Tianjin'</span>)</span><br></pre></td></tr></tbody></table></div></figure><p><strong>注意事项</strong>：默认参数必须指向不可变对象，例如整数，字符串，<code>None</code>等。不能指向可变对象，例如list。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#错误示例，默认参数为可变对象list</span></span><br><span class="line">add_end(L=[]):</span><br><span class="line">    L.append(<span class="string">'END'</span>)</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"><span class="comment">#每次调用都会在list中添加元素  </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>add_end()</span><br><span class="line">[<span class="string">'END'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>add_end()</span><br><span class="line">[<span class="string">'END'</span>, <span class="string">'END'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>add_end()</span><br><span class="line">[<span class="string">'END'</span>, <span class="string">'END'</span>, <span class="string">'END'</span>]</span><br></pre></td></tr></tbody></table></div></figure><p>以上例子中，Python函数在定义的时候，默认参数<code>L</code>的值就被计算出来了，即<code>[]</code>，因为默认参数<code>L</code>也是一个变量，它指向对象<code>[]</code>，每次调用该函数，如果改变了<code>L</code>的内容，则下次调用时，默认参数的内容就变了，不再是函数定义时的<code>[]</code>了。</p><p>可改为指向<code>None</code>这个不可变对象来避免该问题。例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#默认参数指向不可变对象None</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_end</span><span class="params">(L=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> L <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        L = []</span><br><span class="line">    L.append(<span class="string">'END'</span>)</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"><span class="comment">#每次调用恢复原默认值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>add_end()</span><br><span class="line">[<span class="string">'END'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>add_end()</span><br><span class="line">[<span class="string">'END'</span>]</span><br></pre></td></tr></tbody></table></div></figure><h3 id="33-可变参数"><a class="anchorjs-link " href="#33-可变参数" aria-label="Anchor link for: 33 可变参数" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.3 可变参数</h3><p>可变参数，即待传入的参数的个数是可变的，定义时在参数前面加个<code>*</code>，例如<code>*number</code>。可变参数在函数调用时实际上是一个tuple。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义可变参数 *number</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(*numbers)</span>:</span></span><br><span class="line">    sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> numbers:</span><br><span class="line">        sum = sum + n * n</span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line"><span class="comment">#函数调用</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc()</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="comment">#已存在list待传入</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc(nums[<span class="number">0</span>], nums[<span class="number">1</span>], nums[<span class="number">2</span>])</span><br><span class="line"><span class="number">14</span></span><br><span class="line"><span class="comment">#通过list方式出传入可变参数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc(*nums)</span><br><span class="line"><span class="number">14</span></span><br></pre></td></tr></tbody></table></div></figure><h3 id="34-关键字参数"><a class="anchorjs-link " href="#34-关键字参数" aria-label="Anchor link for: 34 关键字参数" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.4 关键字参数</h3><p>关键字参数，即可以传入0个或任意个含参数名的参数，关键字参数在函数调用时实际上是一个dict。</p><p>关键参数定义时在参数前面加<code>**</code>，例如<code>**kw</code>。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义关键字参数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span><span class="params">(name, age, **kw)</span>:</span></span><br><span class="line">    print(<span class="string">'name:'</span>, name, <span class="string">'age:'</span>, age, <span class="string">'other:'</span>, kw)</span><br><span class="line"><span class="comment">#传入必选参数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">'Michael'</span>, <span class="number">30</span>)</span><br><span class="line">name: Michael age: <span class="number">30</span> other: {}</span><br><span class="line"><span class="comment">#传入可选的关键字参数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">'Adam'</span>, <span class="number">45</span>, gender=<span class="string">'M'</span>, job=<span class="string">'Engineer'</span>)</span><br><span class="line">name: Adam age: <span class="number">45</span> other: {<span class="string">'gender'</span>: <span class="string">'M'</span>, <span class="string">'job'</span>: <span class="string">'Engineer'</span>}</span><br><span class="line"><span class="comment">#使用dict方式传入关键字参数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>extra = {<span class="string">'city'</span>: <span class="string">'Beijing'</span>, <span class="string">'job'</span>: <span class="string">'Engineer'</span>}</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">'Jack'</span>, <span class="number">24</span>, **extra)</span><br><span class="line">name: Jack age: <span class="number">24</span> other: {<span class="string">'city'</span>: <span class="string">'Beijing'</span>, <span class="string">'job'</span>: <span class="string">'Engineer'</span>}</span><br></pre></td></tr></tbody></table></div></figure><p>通过dict方式传入实际上是传入一份拷贝，函数参数的改变并不会影响到函数外原dict的值。</p><h3 id="35-命名关键字参数"><a class="anchorjs-link " href="#35-命名关键字参数" aria-label="Anchor link for: 35 命名关键字参数" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.5 命名关键字参数</h3><p>通过对关键字参数命名的方式限制只能传入指定名字的关键字参数，而不能传入其他参数。命名关键字参数需要一个特殊分隔符<code>*</code>，<code>*</code>后面的参数被视为命名关键字参数。例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义命名关键字参数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span><span class="params">(name, age, *, city, job)</span>:</span></span><br><span class="line">    print(name, age, city, job)</span><br><span class="line"><span class="comment">#命名关键字参数的调用    </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">'Jack'</span>, <span class="number">24</span>, city=<span class="string">'Beijing'</span>, job=<span class="string">'Engineer'</span>)</span><br><span class="line">Jack <span class="number">24</span> Beijing Engineer</span><br></pre></td></tr></tbody></table></div></figure><p>命名关键字参数必须传入参数名，如果没有传入参数名，调用将报错。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">'Jack'</span>, <span class="number">24</span>, <span class="string">'Beijing'</span>, <span class="string">'Engineer'</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: person() takes <span class="number">2</span> positional arguments but <span class="number">4</span> were given</span><br></pre></td></tr></tbody></table></div></figure><p>命名关键字参数可以有缺省值，即默认参数。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#命名关键字参数的缺省值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span><span class="params">(name, age, *, city=<span class="string">'Beijing'</span>, job)</span>:</span></span><br><span class="line">    print(name, age, city, job)</span><br><span class="line"><span class="comment">#函数调用</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">'Jack'</span>, <span class="number">24</span>, job=<span class="string">'Engineer'</span>)</span><br><span class="line">Jack <span class="number">24</span> Beijing Engineer</span><br></pre></td></tr></tbody></table></div></figure><h3 id="36-参数组合"><a class="anchorjs-link " href="#36-参数组合" aria-label="Anchor link for: 36 参数组合" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.6 参数组合</h3><p>必选参数、默认参数、可变参数、关键字参数和命名关键字参数，这5种参数可以组合使用。但参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#参数组合的定义</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(a, b, c=<span class="number">0</span>, *args, **kw)</span>:</span></span><br><span class="line">    print(<span class="string">'a ='</span>, a, <span class="string">'b ='</span>, b, <span class="string">'c ='</span>, c, <span class="string">'args ='</span>, args, <span class="string">'kw ='</span>, kw)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">(a, b, c=<span class="number">0</span>, *, d, **kw)</span>:</span></span><br><span class="line">    print(<span class="string">'a ='</span>, a, <span class="string">'b ='</span>, b, <span class="string">'c ='</span>, c, <span class="string">'d ='</span>, d, <span class="string">'kw ='</span>, kw)</span><br><span class="line">    </span><br><span class="line"><span class="comment">#参数组合的调用</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, x=<span class="number">99</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = (<span class="string">'a'</span>, <span class="string">'b'</span>) kw = {<span class="string">'x'</span>: <span class="number">99</span>}</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f2(<span class="number">1</span>, <span class="number">2</span>, d=<span class="number">99</span>, ext=<span class="keyword">None</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">0</span> d = <span class="number">99</span> kw = {<span class="string">'ext'</span>: <span class="keyword">None</span>}</span><br></pre></td></tr></tbody></table></div></figure><p>通过tuple和dict调用参数组合函数：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#f1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>args = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>kw = {<span class="string">'d'</span>: <span class="number">99</span>, <span class="string">'x'</span>: <span class="string">'#'</span>}</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1(*args, **kw)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = (<span class="number">4</span>,) kw = {<span class="string">'d'</span>: <span class="number">99</span>, <span class="string">'x'</span>: <span class="string">'#'</span>}</span><br><span class="line"><span class="comment">#f2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>args = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>kw = {<span class="string">'d'</span>: <span class="number">88</span>, <span class="string">'x'</span>: <span class="string">'#'</span>}</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f2(*args, **kw)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> d = <span class="number">88</span> kw = {<span class="string">'x'</span>: <span class="string">'#'</span>}</span><br></pre></td></tr></tbody></table></div></figure><p>对于任意函数，都可以通过类似<code>func(*args, **kw)</code>的形式调用它，无论它的参数是如何定义的。</p><h2 id="4-递归函数"><a class="anchorjs-link " href="#4-递归函数" aria-label="Anchor link for: 4 递归函数" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4. 递归函数</h2><h3 id="41-递归函数的定义"><a class="anchorjs-link " href="#41-递归函数的定义" aria-label="Anchor link for: 41 递归函数的定义" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.1 递归函数的定义</h3><p>递归函数即函数在内部调用函数本身（自己调用自己）。</p><p>递归的关键点：</p><ul><li>递归结束的临界值，通常使用if语句来判断临界值</li><li>递归体的递归逻辑</li></ul><p>例如，以下是fact(n) = n! = 1 x 2 x 3 x … x (n-1) x n = (n-1)! x n = fact(n-1) x n 的递归函数。</p><figure class="highlight"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#递归函数的定义</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> n * fact(n - <span class="number">1</span>)</span><br><span class="line"><span class="comment">#计算5的阶乘，递归函数调用细节</span></span><br><span class="line">===&gt; fact(5)</span><br><span class="line">===&gt; 5 * fact(4)</span><br><span class="line">===&gt; 5 * (4 * fact(3))</span><br><span class="line">===&gt; 5 * (4 * (3 * fact(2)))</span><br><span class="line">===&gt; 5 * (4 * (3 * (2 * fact(1))))</span><br><span class="line">===&gt; 5 * (4 * (3 * (2 * 1)))</span><br><span class="line">===&gt; 5 * (4 * (3 * 2))</span><br><span class="line">===&gt; 5 * (4 * 6)</span><br><span class="line">===&gt; 5 * 24</span><br><span class="line">===&gt; 120</span><br></pre></td></tr></tbody></table></div></figure><h3 id="42-栈溢出问题"><a class="anchorjs-link " href="#42-栈溢出问题" aria-label="Anchor link for: 42 栈溢出问题" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.2 栈溢出问题</h3><p>&#8203;  在计算机中，函数调用是通过栈（stack）这种数据结构实现的，每当进入一个函数调用，栈就会加一层栈帧，每当函数返回，栈就会减一层栈帧。由于栈的大小不是无限的，所以，递归调用的次数过多，会导致栈溢出。</p><p>例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>fact(<span class="number">1000</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">4</span>, <span class="keyword">in</span> fact</span><br><span class="line">  ...</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">4</span>, <span class="keyword">in</span> fact</span><br><span class="line">RuntimeError: maximum recursion depth exceeded <span class="keyword">in</span> comparison</span><br></pre></td></tr></tbody></table></div></figure><h3 id="43-尾递归"><a class="anchorjs-link " href="#43-尾递归" aria-label="Anchor link for: 43 尾递归" data-anchorjs-icon="ℬ" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.3 尾递归</h3><p>&#8203;  解决递归调用栈溢出的方法是通过<strong>尾递归</strong>优化。尾递归是指，在函数返回的时候，调用自身本身，并且，return语句不能包含表达式。这样，编译器或者解释器就可以把尾递归做优化，使递归本身无论调用多少次，都只占用一个栈帧，不会出现栈溢出的情况。</p><p>例如：</p><figure class="highlight"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#尾递归函数的定义</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> fact_iter(n, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact_iter</span><span class="params">(num, product)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> product</span><br><span class="line">    <span class="keyword">return</span> fact_iter(num - <span class="number">1</span>, num * product)</span><br><span class="line">    </span><br><span class="line"><span class="comment">#计算5的阶乘，递归函数调用细节</span></span><br><span class="line">===&gt; fact_iter(5, 1)</span><br><span class="line">===&gt; fact_iter(4, 5)</span><br><span class="line">===&gt; fact_iter(3, 20)</span><br><span class="line">===&gt; fact_iter(2, 60)</span><br><span class="line">===&gt; fact_iter(1, 120)</span><br><span class="line">===&gt; 120</span><br></pre></td></tr></tbody></table></div></figure><p>尾递归调用时，如果做了优化，栈不会增长，无论多少次调用也不会导致栈溢出。但实际上大多数编程语言没有针对尾递归做优化，Python解释器也没有做优化，因此当没有优化的情况下任何递归函数都存在栈溢出的问题。</p></div>                                                    <div class="aplayer-lrc"></div>                                            </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用pycharm给玛雅写python&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://myblong.zkb/categories/python/"/>
    
    
      <category term="python" scheme="https://myblong.zkb/tags/python/"/>
    
      <category term="python基础" scheme="https://myblong.zkb/tags/python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Maya选择插件_PatternSelection</title>
    <link href="https://myblong.zkb/2019/06/13/share/Maya%E9%80%89%E6%8B%A9%E6%8F%92%E4%BB%B6_PatternSelection/"/>
    <id>https://myblong.zkb/2019/06/13/share/Maya选择插件_PatternSelection/</id>
    <published>2019-06-13T14:18:26.790Z</published>
    <updated>2019-06-13T14:19:55.480Z</updated>
    
    <content type="html"><![CDATA[<p>Maya选择插件_PatternSelection<br><a id="more"></a><br><article class="article-content"><p><img src="http://wx2.sinaimg.cn/large/0062H1pggy1fqmy36im8zg30jg0jgqv5.gif" alt="Maya选择插件 PatternSelection" title="Maya选择插件 PatternSelection"></p><p>Pattern Selection是一个maya脚本，它选择当前选中模式中的下一个组件。适用于边缘(循环和环)，顶点和面。最好的解释如上图。</p><p>安装方法：</p><p><span style="color: #99cc00;">第一种（快捷键）</span>：</p><p>将.py文件复制到Documents/maya/版本/scripts 里面</p><p>打开maya，设置快捷键。<img src="http://wx2.sinaimg.cn/large/0062H1pggy1fqmy263vzjj312k0i23zr.jpg" alt="Maya选择插件 PatternSelection" title="Maya选择插件 PatternSelection"></p><p>为下面两段脚本分别设置快捷键：</p><pre class="prettyprint linenums"><ol class="linenums"><li class="L0"><span class="kwd">import</span><span class="pln"> patternSelection</span><span class="pun">;</span></li><li class="L1"><span class="pln">patternSelection</span><span class="pun">.</span><span class="pln">patternSelection</span><span class="pun">()</span></li></ol></pre><pre class="prettyprint linenums"><ol class="linenums"><li class="L0"><span class="kwd">import</span><span class="pln"> patternSelection</span><span class="pun">;</span></li><li class="L1"><span class="pln">patternSelection</span><span class="pun">.</span><span class="pln">patternSelectionRepeat</span><span class="pun">()</span></li></ol></pre><p>然后保存，重开maya。</p><p><span style="color: #99cc00;">第二种（按钮）</span>：讲上面两段脚本分别拖到工具架。</p><p>&nbsp;</p><table width="397"><colgroup><col width="76"><col width="107"><col width="107"><col width="107"></colgroup><tbody><tr><td width="76">文件名称</td><td colspan="3" width="107">&nbsp;patternSelection</td></tr><tr><td width="76">文件大小</td><td colspan="3" width="107">&nbsp;.py</td></tr><tr><td width="76">文件格式</td><td colspan="3" width="107">&nbsp;10kb</td></tr><tr><td width="76">支持版本</td><td colspan="3" width="107">&nbsp;理论上支持2012+，只测试了2016.5和2017</td></tr><tr><td width="76">备注</td><td colspan="3" width="107"></td></tr><tr><td width="76">下载链接</td><td colspan="3" width="107">https://pan.baidu.com/s/1d1muN0D3Q2oLGY88pS5Sww</td></tr><tr><td width="76">解压密码</td><td colspan="3" width="107">&nbsp;6666</td></tr></tbody></table><p>&nbsp;</p><p>&nbsp;</p></article></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Maya选择插件_PatternSelection&lt;br&gt;
    
    </summary>
    
      <category term="maya插件" scheme="https://myblong.zkb/categories/maya%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="maya插件" scheme="https://myblong.zkb/tags/maya%E6%8F%92%E4%BB%B6/"/>
    
      <category term="分享" scheme="https://myblong.zkb/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>python基础知识学习总结（一）</title>
    <link href="https://myblong.zkb/2019/06/12/python%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://myblong.zkb/2019/06/12/python基础知识学习总结（一）/</id>
    <published>2019-06-12T14:56:17.651Z</published>
    <updated>2019-06-12T14:56:49.583Z</updated>
    
    <content type="html"><![CDATA[<p>##python基础知识学习总结（一）<br><a id="more"></a><br><article> <aside id="sidebar">        <div id="toc" class="toc-article toc-fixed">        <strong class="toc-title">Contents</strong>                  <ol class="toc-nav"><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#1-数据类型和变量"><span class="toc-nav-number">1.</span> <span class="toc-nav-text">1. 数据类型和变量</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#11-整数"><span class="toc-nav-number">1.1.</span> <span class="toc-nav-text">1.1 整数</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#12-浮点数"><span class="toc-nav-number">1.2.</span> <span class="toc-nav-text">1.2 浮点数</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#13-字符串"><span class="toc-nav-number">1.3.</span> <span class="toc-nav-text">1.3 字符串</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#14-布尔值"><span class="toc-nav-number">1.4.</span> <span class="toc-nav-text">1.4 布尔值</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#15-空值"><span class="toc-nav-number">1.5.</span> <span class="toc-nav-text">1.5 空值</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#16-变量"><span class="toc-nav-number">1.6.</span> <span class="toc-nav-text">1.6 变量</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#17-常量"><span class="toc-nav-number">1.7.</span> <span class="toc-nav-text">1.7 常量</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#18-总结"><span class="toc-nav-number">1.8.</span> <span class="toc-nav-text">1.8 总结</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#2-字符串和编码"><span class="toc-nav-number">2.</span> <span class="toc-nav-text">2. 字符串和编码</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#21-字符编码"><span class="toc-nav-number">2.1.</span> <span class="toc-nav-text">2.1 字符编码</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#22-字符编码使用场景"><span class="toc-nav-number">2.2.</span> <span class="toc-nav-text">2.2 字符编码使用场景</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#23-python的字符串"><span class="toc-nav-number">2.3.</span> <span class="toc-nav-text">2.3 Python的字符串</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#24-字符串编码转换"><span class="toc-nav-number">2.4.</span> <span class="toc-nav-text">2.4 字符串(编码)转换</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#241-encodestrbytes"><span class="toc-nav-number">2.4.1.</span> <span class="toc-nav-text">2.4.1 encode()[str→bytes]</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#242-decodebytesstr"><span class="toc-nav-number">2.4.2.</span> <span class="toc-nav-text">2.4.2 decode()[bytes→str]</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#243-len"><span class="toc-nav-number">2.4.3.</span> <span class="toc-nav-text">2.4.3 len()</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#25-格式化"><span class="toc-nav-number">2.5.</span> <span class="toc-nav-text">2.5 格式化</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#251-的方式"><span class="toc-nav-number">2.5.1.</span> <span class="toc-nav-text">2.5.1 %的方式</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#252-format"><span class="toc-nav-number">2.5.2.</span> <span class="toc-nav-text">2.5.2 format()</span></a></li></ol></li></ol></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#3-list和tuple类型"><span class="toc-nav-number">3.</span> <span class="toc-nav-text">3. list和tuple类型</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#31-list"><span class="toc-nav-number">3.1.</span> <span class="toc-nav-text">3.1 list</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#311-list的定义"><span class="toc-nav-number">3.1.1.</span> <span class="toc-nav-text">3.1.1 list的定义</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#312-len"><span class="toc-nav-number">3.1.2.</span> <span class="toc-nav-text">3.1.2 len()</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#313-list的索引"><span class="toc-nav-number">3.1.3.</span> <span class="toc-nav-text">3.1.3 list的索引</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#314-list元素增删"><span class="toc-nav-number">3.1.4.</span> <span class="toc-nav-text">3.1.4 list元素增删</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-5"><a class="toc-nav-link" href="#3141-追加末尾元素"><span class="toc-nav-number">3.1.4.1.</span> <span class="toc-nav-text">3.1.4.1 追加末尾元素</span></a></li><li class="toc-nav-item toc-nav-level-5"><a class="toc-nav-link" href="#3142-指定位置插入元素"><span class="toc-nav-number">3.1.4.2.</span> <span class="toc-nav-text">3.1.4.2 指定位置插入元素</span></a></li><li class="toc-nav-item toc-nav-level-5"><a class="toc-nav-link" href="#3143-删除末尾元素"><span class="toc-nav-number">3.1.4.3.</span> <span class="toc-nav-text">3.1.4.3 删除末尾元素</span></a></li><li class="toc-nav-item toc-nav-level-5"><a class="toc-nav-link" href="#3144-删除指定位置元素"><span class="toc-nav-number">3.1.4.4.</span> <span class="toc-nav-text">3.1.4.4 删除指定位置元素</span></a></li><li class="toc-nav-item toc-nav-level-5"><a class="toc-nav-link" href="#3145-替换元素"><span class="toc-nav-number">3.1.4.5.</span> <span class="toc-nav-text">3.1.4.5 替换元素</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#315多维list"><span class="toc-nav-number">3.1.5.</span> <span class="toc-nav-text">3.1.5多维list</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#316-空list"><span class="toc-nav-number">3.1.6.</span> <span class="toc-nav-text">3.1.6 空list</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#32-tuple"><span class="toc-nav-number">3.2.</span> <span class="toc-nav-text">3.2 tuple</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#321-tuple的定义"><span class="toc-nav-number">3.2.1.</span> <span class="toc-nav-text">3.2.1 tuple的定义</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#322-特别说明"><span class="toc-nav-number">3.2.2.</span> <span class="toc-nav-text">3.2.2 特别说明</span></a></li></ol></li></ol></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#4-dict和set类型"><span class="toc-nav-number">4.</span> <span class="toc-nav-text">4. dict和set类型</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#41-dict"><span class="toc-nav-number">4.1.</span> <span class="toc-nav-text">4.1 dict</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#411-dict的定义"><span class="toc-nav-number">4.1.1.</span> <span class="toc-nav-text">4.1.1 dict的定义</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#412-dict的查找"><span class="toc-nav-number">4.1.2.</span> <span class="toc-nav-text">4.1.2 dict的查找</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#413-dict的删除"><span class="toc-nav-number">4.1.3.</span> <span class="toc-nav-text">4.1.3 dict的删除</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#414-特别说明"><span class="toc-nav-number">4.1.4.</span> <span class="toc-nav-text">4.1.4 特别说明</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#42-set"><span class="toc-nav-number">4.2.</span> <span class="toc-nav-text">4.2 set</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#421-set的定义"><span class="toc-nav-number">4.2.1.</span> <span class="toc-nav-text">4.2.1 set的定义</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#422-set的添加和删除"><span class="toc-nav-number">4.2.2.</span> <span class="toc-nav-text">4.2.2 set的添加和删除</span></a></li><li class="toc-nav-item toc-nav-level-4"><a class="toc-nav-link" href="#423-set的交集和并集"><span class="toc-nav-number">4.2.3.</span> <span class="toc-nav-text">4.2.3 set的交集和并集</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#43-不可变对象"><span class="toc-nav-number">4.3.</span> <span class="toc-nav-text">4.3 不可变对象</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#5-条件语句"><span class="toc-nav-number">5.</span> <span class="toc-nav-text">5. 条件语句</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#51-if格式"><span class="toc-nav-number">5.1.</span> <span class="toc-nav-text">5.1 if格式</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#52-条件简写"><span class="toc-nav-number">5.2.</span> <span class="toc-nav-text">5.2 条件简写</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#53-input使用"><span class="toc-nav-number">5.3.</span> <span class="toc-nav-text">5.3 input()使用</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#6-循环语句"><span class="toc-nav-number">6.</span> <span class="toc-nav-text">6. 循环语句</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#61-for循环"><span class="toc-nav-number">6.1.</span> <span class="toc-nav-text">6.1 for循环</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#62-while循环"><span class="toc-nav-number">6.2.</span> <span class="toc-nav-text">6.2 while循环</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#63-break"><span class="toc-nav-number">6.3.</span> <span class="toc-nav-text">6.3 break</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#64-continue"><span class="toc-nav-number">6.4.</span> <span class="toc-nav-text">6.4 continue</span></a></li></ol></li><li class="toc-nav-item toc-nav-level-2"></li></ol>                </div>      </aside>        <div class="container">        <div class="row">            <!-- Post Container -->            <div class="                col-lg-8 col-lg-offset-2                col-md-10 col-md-offset-1                post-container">                <h2 id="1-数据类型和变量"><a class="anchorjs-link " href="#1-数据类型和变量" aria-label="Anchor link for: 1 数据类型和变量" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>1. 数据类型和变量</h2><p>&#8203;  Python使用缩进来组织代码块，一般使用4个空格的缩进。使用<code>#</code>来注释一行，其他每一行都是一个语句，当语句以冒号<code>:</code>结尾时，缩进的语句视为代码块。Python对大小写敏感。</p><h3 id="11-整数"><a class="anchorjs-link " href="#11-整数" aria-label="Anchor link for: 11 整数" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>1.1 整数</h3><p>&#8203;  Python可以处理任意大小的整数，包括负整数，写法与数学上写法一致，例如：-100。如果用十六进制表示，则用前缀为<code>0x</code>和<code>0-9</code>，<code>a-f</code>表示，例如：0xff00。</p><h3 id="12-浮点数"><a class="anchorjs-link " href="#12-浮点数" aria-label="Anchor link for: 12 浮点数" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>1.2 浮点数</h3><p>&#8203;  浮点数的表示方法：3.14，-9.01。若是科学技术法表示，则10用e代替，例如：1.23$\times10^9$表示为1.23e9。</p><p>&#8203;  整数和浮点数在计算机内存储的方式不同，整数运算永远是精确的（包括除法运算），浮点数运算可能会存在四舍五入的误差。</p><h3 id="13-字符串"><a class="anchorjs-link " href="#13-字符串" aria-label="Anchor link for: 13 字符串" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>1.3 字符串</h3><p>&#8203;  字符串是<strong>单引号</strong>或<strong>双引号</strong>括起来的文本。</p><ul><li><p>如果字符串中包含单引号，则用双引号括起来；</p></li><li><p>如果包含双引号，则用单引号括起来；</p></li><li><p>如果既包含单引号又包含双引号，则使用转义字符<code>\</code>来标识，例如：<code>'I\'m \"OK\"!'</code>表示的是<code>I'm "OK"!</code>。</p></li><li><p>python中用<code>r''</code>表示<code>''</code>内部的字符串默认不转义，例如<code>print(r'\\\t\\')</code>即打印<code>\\\t\\</code>。</p></li><li><p>python中用<code>'''...'''</code>三引号来输入多行内容，其中<code>...</code>是提示符，表示接着上一行输入，例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'''line1</span></span><br><span class="line"><span class="string"><span class="meta">... </span>line2</span></span><br><span class="line"><span class="string"><span class="meta">... </span>line3'''</span>)</span><br><span class="line">line1</span><br><span class="line">line2</span><br><span class="line">line3</span><br></pre></td></tr></tbody></table></div></figure></li></ul><h3 id="14-布尔值"><a class="anchorjs-link " href="#14-布尔值" aria-label="Anchor link for: 14 布尔值" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>1.4 布尔值</h3><p>&#8203;  布尔值只有<code>True</code>和<code>Flase</code>两种（注意大小写，Python对大小写敏感），常用于if的条件判断。</p><p>&#8203;  布尔值运算规则如下：</p><ul><li><code>and</code>运算是与运算，只有所有都为<code>True</code>，<code>and</code>运算结果才是<code>True</code>。</li><li><code>or</code>运算是或运算，只要其中有一个为<code>True</code>，<code>or</code>运算结果就是<code>True</code>。</li><li><code>not</code>运算是非运算，它是一个单目运算符，把<code>True</code>变成<code>False</code>，<code>False</code>变成<code>True</code>。</li></ul><h3 id="15-空值"><a class="anchorjs-link " href="#15-空值" aria-label="Anchor link for: 15 空值" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>1.5 空值</h3><p>&#8203;  空值是Python里一个特殊的值，用<code>None</code>表示。</p><h3 id="16-变量"><a class="anchorjs-link " href="#16-变量" aria-label="Anchor link for: 16 变量" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>1.6 变量</h3><p>&#8203;  Python中变量类型不固定，即动态语言，不需要提前声明。使用<code>=</code>直接赋值，同一个变量可以反复赋值，且可以是不同类型的变量。例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">123</span>    <span class="comment">#a是整数，即a指向整数123</span></span><br><span class="line">a = <span class="string">"ABC"</span>  <span class="comment">#将a赋值成字符串，即a指向字符串"ABC"</span></span><br><span class="line">b = a      <span class="comment">#将b指向a所指向的数据("ABC")</span></span><br><span class="line">a = <span class="string">"XYZ"</span>  <span class="comment">#将a指向字符串"XYZ"</span></span><br><span class="line">print(b)   <span class="comment">#打印b将打印"ABC"而不是"XYZ"</span></span><br></pre></td></tr></tbody></table></div></figure><p>&#8203;  变量<code>a="ABC"</code>赋值中，Python解释器处理了以下事项：</p><ol><li>在内存中创建一个<code>"ABC"</code>的字符串；</li><li>在内存中创建了一个名为<code>a</code>的变量，并把它指向<code>"ABC"</code>。</li><li>把a赋值给b，实际上是将b指向<code>a所指向的数据</code>。</li></ol><h3 id="17-常量"><a class="anchorjs-link " href="#17-常量" aria-label="Anchor link for: 17 常量" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>1.7 常量</h3><p>&#8203;  常量一般用全部大写的变量名表示，例如：<code>PI=3.14</code>。实际上，Python没有机制保证PI的值不会被改变，所以本质仍然是个变量。</p><p>&#8203;  Python的除法：</p><ul><li><code>/</code>的除法计算结果是浮点数，即使是两个整数相除也是浮点数，例如<code>9 / 3</code>结果为<code>3.0</code>。</li><li><code>//</code>除法只取结果的整数部分，例如<code>10 // 3</code>结果是整数部分3。</li><li><code>%</code>表示取余数，例如：<code>10 % 3</code>结果是余数1。</li></ul><h3 id="18-总结"><a class="anchorjs-link " href="#18-总结" aria-label="Anchor link for: 18 总结" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>1.8 总结</h3><p>&#8203;  Python支持多种数据类型，在计算机内部可以把任何数据看成一个”对象”，而变量赋值就是将变量和数据对象关联起来，即变量指向该数据对象。例如<code>x=y</code>，表示把变量x指向y所指向的数据对象，随后对y的赋值并不影响x的指向。</p><p>&#8203;  Python的整数和浮点数没有大小的限制。若超出一定范围就用<code>inf</code>（无限大）表示。</p><h2 id="2-字符串和编码"><a class="anchorjs-link " href="#2-字符串和编码" aria-label="Anchor link for: 2 字符串和编码" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2. 字符串和编码</h2><h3 id="21-字符编码"><a class="anchorjs-link " href="#21-字符编码" aria-label="Anchor link for: 21 字符编码" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.1 字符编码</h3><ul><li><code>ASCII</code>编码，早期的编码包含大小写英文字母、数字和一些符号，用一个字节（8位）表示。因编码量少可能会出现乱码问题。</li><li><code>Unicode</code>编码，统一各国语言编码，用两个字节（16位）表示。如果文本全是英文，则会比ASCII编码需要多一倍的存储空间，在存储和传输上不划算。</li><li><code>UTF-8</code>编码，即可变长的Unicode编码，UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节。如果你要传输的文本包含大量英文字符，用UTF-8编码能节省空间。</li></ul><h3 id="22-字符编码使用场景"><a class="anchorjs-link " href="#22-字符编码使用场景" aria-label="Anchor link for: 22 字符编码使用场景" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.2 字符编码使用场景</h3><ul><li><p>在计算机内存中，统一使用Unicode编码。</p></li><li><p>当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。</p><p>例如：</p><p>&#8203;  用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，编辑完成后，保存的时候再把Unicode转换为UTF-8保存到文件。</p><img src="http://res.cloudinary.com/dqxtn0ick/image/upload/v1512810598/article/python/basics/UnicodeToUTF-8.png" width="40%"><p>&#8203;  浏览网页的时候，服务器会把动态的生成的Unicode内容转换为UTF-8再传输到浏览器，所以很多网页的源码上会有类似<code>&lt;meta charset="UTF-8" /&gt;</code>的信息，表示该网页正是用的UTF-8编码。</p><img src="http://res.cloudinary.com/dqxtn0ick/image/upload/v1512810599/article/python/basics/website-UTF-8.png" width="40%"></li></ul><h3 id="23-python的字符串"><a class="anchorjs-link " href="#23-python的字符串" aria-label="Anchor link for: 23 python的字符串" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.3 Python的字符串</h3><p>&#8203;  Python3的版本中，字符串是Unicode编码，即支持多语言。</p><p>&#8203;  对于单个字符的编码，Python提供<code>ord()</code>函数获取字符的整数表示，<code>chr()</code>函数把编码转换为对应的字符。例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ord(<span class="string">'A'</span>)</span><br><span class="line"><span class="number">65</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ord(<span class="string">'中'</span>)</span><br><span class="line"><span class="number">20013</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">66</span>)</span><br><span class="line"><span class="string">'B'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">25991</span>)</span><br><span class="line"><span class="string">'文'</span></span><br></pre></td></tr></tbody></table></div></figure><p>如果知道字符的整数编码，可以用十六进制写<code>str</code>：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'\u4e2d\u6587'</span></span><br><span class="line"><span class="string">'中文'</span></span><br></pre></td></tr></tbody></table></div></figure><h3 id="24-字符串编码转换"><a class="anchorjs-link " href="#24-字符串编码转换" aria-label="Anchor link for: 24 字符串编码转换" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.4 字符串(编码)转换</h3><p>&#8203;  Python的字符串类型是<code>str</code>，在内存中以Unicode表示，一个字符对应若干个字节。如果要在网络上传输，或者保存到磁盘上，就需要把<code>str</code>变为以字节为单位的<code>bytes</code>(UTF-8/ASCII编码)。</p><p>&#8203;  Python对<code>bytes</code>类型的数据用带<code>b</code>前缀的单引号或双引号表示：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="string">b'ABC'</span></span><br></pre></td></tr></tbody></table></div></figure><h4 id="241-encodestrbytes"><a class="anchorjs-link " href="#241-encodestrbytes" aria-label="Anchor link for: 241 encodestrbytes" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.4.1 encode()[str→bytes]</h4><p>&#8203;  以Unicode表示的<code>str</code>通过<code>encode()</code>方法可以编码为指定的<code>bytes</code>，即Unicode编码转换成UTF-8编码或ASCII编码，例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'ABC'</span>.encode(<span class="string">'ascii'</span>)</span><br><span class="line"><span class="string">b'ABC'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'中文'</span>.encode(<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="string">b'\xe4\xb8\xad\xe6\x96\x87'</span></span><br><span class="line"><span class="comment">#错误例子</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'中文'</span>.encode(<span class="string">'ascii'</span>)  </span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">UnicodeEncodeError: <span class="string">'ascii'</span> codec can<span class="string">'t encode characters in position 0-1: ordinal not in range(128)</span></span><br></pre></td></tr></tbody></table></div></figure><h4 id="242-decodebytesstr"><a class="anchorjs-link " href="#242-decodebytesstr" aria-label="Anchor link for: 242 decodebytesstr" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.4.2 decode()[bytes→str]</h4><p>&#8203;  要把UTF-8编码或ASCII编码转换成Unicode编码，即bytes类型转换为str类型，可用decode()转换。例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">b'ABC'</span>.decode(<span class="string">'ascii'</span>)</span><br><span class="line"><span class="string">'ABC'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">b'\xe4\xb8\xad\xe6\x96\x87'</span>.decode(<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="string">'中文'</span></span><br><span class="line"><span class="comment">#错误例子</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">b'\xe4\xb8\xad\xff'</span>.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  ...</span><br><span class="line">UnicodeDecodeError: <span class="string">'utf-8'</span> codec can<span class="string">'t decode byte 0xff in position 3: invalid start byte</span></span><br></pre></td></tr></tbody></table></div></figure><p>&#8203;  如果<code>bytes</code>中只有一小部分无效的字节，可以传入<code>errors='ignore'</code>忽略错误的字节：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">b'\xe4\xb8\xad\xff'</span>.decode(<span class="string">'utf-8'</span>, errors=<span class="string">'ignore'</span>)</span><br><span class="line"><span class="string">'中'</span></span><br></pre></td></tr></tbody></table></div></figure><h4 id="243-len"><a class="anchorjs-link " href="#243-len" aria-label="Anchor link for: 243 len" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.4.3 len()</h4><p>&#8203;  对于<code>str</code>类型len()计算的是字符数，对于<code>bytes</code>类型len()计算的是字节数。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对于str类型</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">'ABC'</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">'中文'</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="comment">#对于bytes类型</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">b'ABC'</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">b'\xe4\xb8\xad\xe6\x96\x87'</span>)</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">'中文'</span>.encode(<span class="string">'utf-8'</span>))</span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></tbody></table></div></figure><p>&#8203;  1个中文字符经过UTF-8编码后通常会占用3个字节，而1个英文字符只占用1个字节。</p><p>&#8203;  为了避免中文乱码，一般使用UTF-8编码对<code>str</code>和<code>bytes</code>进行转换，即Unicode→UTF-8。所以一般在Python源文件开头写以下信息：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br></pre></td></tr></tbody></table></div></figure><p>第一行注释是为了告诉Linux/OS X系统，这是一个Python可执行程序，Windows系统会忽略这个注释；</p><p>第二行注释是为了告诉Python解释器，按照UTF-8编码读取源代码，否则，你在源代码中写的中文输出可能会有乱码。</p><h3 id="25-格式化"><a class="anchorjs-link " href="#25-格式化" aria-label="Anchor link for: 25 格式化" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.5 格式化</h3><h4 id="251-的方式"><a class="anchorjs-link " href="#251-的方式" aria-label="Anchor link for: 251 的方式" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.5.1 %的方式</h4><p>&#8203;  使用<code>%</code>来格式化字符串，其中<code>%s</code>永远起作用，可以把任何数据类型转换成字符串，如果字符串中包含<code>%</code>，则使用<code>%%</code>转义表示字符串中的<code>%</code>。常用占位符如下：</p><div class="table-responsive"><table class="table"><thead><tr><th>占位符</th><th>替换内容</th></tr></thead><tbody><tr><td>%s</td><td>字符串</td></tr><tr><td>%d</td><td>整数</td></tr><tr><td>%f</td><td>浮点数</td></tr><tr><td>%x</td><td>十六进制整数</td></tr></tbody></table></div><p>例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Hello, %s'</span> % <span class="string">'world'</span></span><br><span class="line"><span class="string">'Hello, world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Hi, %s, you have $%d.'</span> % (<span class="string">'Michael'</span>, <span class="number">1000000</span>)</span><br><span class="line"><span class="string">'Hi, Michael, you have $1000000.'</span></span><br><span class="line"><span class="comment">#整数和浮点数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'%2d-%02d'</span> % (<span class="number">3</span>, <span class="number">1</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'%.2f'</span> % <span class="number">3.1415926</span>)</span><br><span class="line"><span class="comment"># %s的通用性</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Age: %s. Gender: %s'</span> % (<span class="number">25</span>, <span class="keyword">True</span>)</span><br><span class="line"><span class="string">'Age: 25. Gender: True'</span></span><br><span class="line"><span class="comment">#转义字符串中的%</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'growth rate: %d %%'</span> % <span class="number">7</span></span><br><span class="line"><span class="string">'growth rate: 7 %'</span></span><br></pre></td></tr></tbody></table></div></figure><h4 id="252-format"><a class="anchorjs-link " href="#252-format" aria-label="Anchor link for: 252 format" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>2.5.2 format()</h4><p>&#8203;  可以使用字符串的<code>format()</code>方法，它会用传入的参数依次替换字符串内的占位符<code>{0}</code>、<code>{1}</code>……。但建议直接使用<code>%</code>的方式。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Hello, {0}, 成绩提升了 {1:.1f}%'</span>.format(<span class="string">'小明'</span>, <span class="number">17.125</span>)</span><br><span class="line"><span class="string">'Hello, 小明, 成绩提升了 17.1%'</span></span><br></pre></td></tr></tbody></table></div></figure><h2 id="3-list和tuple类型"><a class="anchorjs-link " href="#3-list和tuple类型" aria-label="Anchor link for: 3 list和tuple类型" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3. list和tuple类型</h2><h3 id="31-list"><a class="anchorjs-link " href="#31-list" aria-label="Anchor link for: 31 list" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.1 list</h3><p>list表示列表，是<strong>可变</strong>的<strong>有序</strong>列表，即有序的集合，可以随时添加和删除元素。</p><h4 id="311-list的定义"><a class="anchorjs-link " href="#311-list的定义" aria-label="Anchor link for: 311 list的定义" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.1.1 list的定义</h4><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates = [<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br></pre></td></tr></tbody></table></div></figure><h4 id="312-len"><a class="anchorjs-link " href="#312-len" aria-label="Anchor link for: 312 len" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.1.2 len()</h4><p>用<code>len()</code>函数可以获得list元素的个数</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(classmates)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></tbody></table></div></figure><h4 id="313-list的索引"><a class="anchorjs-link " href="#313-list的索引" aria-label="Anchor link for: 313 list的索引" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.1.3 list的索引</h4><ul><li>list元素索引从0开始</li><li>索引可以引用负数表示倒数序号，例如classmates[-1]表示倒数最后一个元素，索引<code>-1</code>等价于<code>len(classmates) - 1</code></li><li>索引越界会报<code>IndexError</code>错误，倒序索引也会越界</li></ul><h4 id="314-list元素增删"><a class="anchorjs-link " href="#314-list元素增删" aria-label="Anchor link for: 314 list元素增删" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.1.4 list元素增删</h4><h5 id="3141-追加末尾元素"><a class="anchorjs-link " href="#3141-追加末尾元素" aria-label="Anchor link for: 3141 追加末尾元素" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.1.4.1 追加末尾元素</h5><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.append(<span class="string">'Adam'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>, <span class="string">'Adam'</span>]</span><br></pre></td></tr></tbody></table></div></figure><h5 id="3142-指定位置插入元素"><a class="anchorjs-link " href="#3142-指定位置插入元素" aria-label="Anchor link for: 3142 指定位置插入元素" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.1.4.2 指定位置插入元素</h5><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.insert(<span class="number">1</span>, <span class="string">'Jack'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">'Michael'</span>, <span class="string">'Jack'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>, <span class="string">'Adam'</span>]</span><br></pre></td></tr></tbody></table></div></figure><h5 id="3143-删除末尾元素"><a class="anchorjs-link " href="#3143-删除末尾元素" aria-label="Anchor link for: 3143 删除末尾元素" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.1.4.3 删除末尾元素</h5><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.pop()</span><br><span class="line"><span class="string">'Adam'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">'Michael'</span>, <span class="string">'Jack'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br></pre></td></tr></tbody></table></div></figure><h5 id="3144-删除指定位置元素"><a class="anchorjs-link " href="#3144-删除指定位置元素" aria-label="Anchor link for: 3144 删除指定位置元素" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.1.4.4 删除指定位置元素</h5><p>用pop(i)的方法，i为索引值</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.pop(<span class="number">1</span>)</span><br><span class="line"><span class="string">'Jack'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br></pre></td></tr></tbody></table></div></figure><h5 id="3145-替换元素"><a class="anchorjs-link " href="#3145-替换元素" aria-label="Anchor link for: 3145 替换元素" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.1.4.5 替换元素</h5><p>即直接给对应索引的元素重新赋值。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates[<span class="number">1</span>] = <span class="string">'Sarah'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">'Michael'</span>, <span class="string">'Sarah'</span>, <span class="string">'Tracy'</span>]</span><br></pre></td></tr></tbody></table></div></figure><h4 id="315多维list"><a class="anchorjs-link " href="#315多维list" aria-label="Anchor link for: 315多维list" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.1.5多维list</h4><p>&#8203;  list中元素的数据类型可以不同，如果要实现二维list，即将一维list中的元素定义为list即可，同理可以实现多维list。例如访问二维list可用<code>s[2][1]</code>的方式，表示一维list中的第三个元素list中的第二个元素。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = [<span class="string">'python'</span>, <span class="string">'java'</span>, [<span class="string">'asp'</span>, <span class="string">'php'</span>], <span class="string">'scheme'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(s)</span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></tbody></table></div></figure><h4 id="316-空list"><a class="anchorjs-link " href="#316-空list" aria-label="Anchor link for: 316 空list" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.1.6 空list</h4><p>&#8203;  空list即一个元素也没有，长度为0。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(L)</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></tbody></table></div></figure><h3 id="32-tuple"><a class="anchorjs-link " href="#32-tuple" aria-label="Anchor link for: 32 tuple" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.2 tuple</h3><h4 id="321-tuple的定义"><a class="anchorjs-link " href="#321-tuple的定义" aria-label="Anchor link for: 321 tuple的定义" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.2.1 tuple的定义</h4><p>&#8203;  tuple表示元组，即<strong>不可变</strong>的<strong>有序</strong>元素的集合。即没有修改元素的函数，例如append()，insert()，元素赋值等。</p><p>&#8203;  因为tuple元素不可变，所以代码更安全。当定义tuple时，元素就必须被确定下来。如果tuple中只含一个元素，则在该元素后加逗号。避免与小括号运算产生歧义。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#以下是单元素tuple的定义</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="number">1</span>,)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="number">1</span>,)</span><br><span class="line"><span class="comment">#以下是小括号运算</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></tbody></table></div></figure><h4 id="322-特别说明"><a class="anchorjs-link " href="#322-特别说明" aria-label="Anchor link for: 322 特别说明" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>3.2.2 特别说明</h4><p>tuple中的元素不可变表示元素的指向不可变，但该元素如果是list，则该list的内容可变。即list表示的是指向，该list的指向不可变，但是list中元素的指向可变，即list中的元素可变。例如：</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="string">'a'</span>, <span class="string">'b'</span>, [<span class="string">'A'</span>, <span class="string">'B'</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t[<span class="number">2</span>][<span class="number">0</span>] = <span class="string">'X'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t[<span class="number">2</span>][<span class="number">1</span>] = <span class="string">'Y'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="string">'a'</span>, <span class="string">'b'</span>, [<span class="string">'X'</span>, <span class="string">'Y'</span>])</span><br></pre></td></tr></tbody></table></div></figure><p>示意图：</p><p>list元素修改前：<code>t = ('a', 'b', ['A', 'B'])</code></p><img src="http://res.cloudinary.com/dqxtn0ick/image/upload/v1512810598/article/python/basics/tuple1.png" width="50%"><p>list元素修改后：<code>t = ('a', 'b', ['X', 'Y'])</code></p><img src="http://res.cloudinary.com/dqxtn0ick/image/upload/v1512810598/article/python/basics/tuple2.png" width="50%"><h2 id="4-dict和set类型"><a class="anchorjs-link " href="#4-dict和set类型" aria-label="Anchor link for: 4 dict和set类型" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4. dict和set类型</h2><h3 id="41-dict"><a class="anchorjs-link " href="#41-dict" aria-label="Anchor link for: 41 dict" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.1 dict</h3><h4 id="411-dict的定义"><a class="anchorjs-link " href="#411-dict的定义" aria-label="Anchor link for: 411 dict的定义" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.1.1 dict的定义</h4><p>dict即字典，相当于golang中的<code>map</code>类型，key-value型。具有极快的查找速度。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//dict的赋值</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = {<span class="string">'Michael'</span>: <span class="number">95</span>, <span class="string">'Bob'</span>: <span class="number">75</span>, <span class="string">'Tracy'</span>: <span class="number">85</span>}</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">'Michael'</span>]</span><br><span class="line"><span class="number">95</span></span><br><span class="line">//dict元素的赋值</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">'Adam'</span>] = <span class="number">67</span></span><br></pre></td></tr></tbody></table></div></figure><p>由于dict中<strong>key的值是唯一</strong>的，因此如果多次赋值，最终结果为最后一次的赋值。</p><h4 id="412-dict的查找"><a class="anchorjs-link " href="#412-dict的查找" aria-label="Anchor link for: 412 dict的查找" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.1.2 dict的查找</h4><p>如果key不存在会报错，检测key是否存在可以通过<code>in</code>或<code>get()</code>方法。当key不存在时，<code>in</code>的方式返回<code>False</code>，<code>get()</code>方法返回<code>None</code>或指定值。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#key不存在的报错</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">'Thomas'</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">KeyError: <span class="string">'Thomas'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#in方式检查key是否存在</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Thomas'</span> <span class="keyword">in</span> d</span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#get()方法检查key是否存在</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.get(<span class="string">'Thomas'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.get(<span class="string">'Thomas'</span>, <span class="number">-1</span>)</span><br><span class="line"><span class="number">-1</span></span><br></pre></td></tr></tbody></table></div></figure><h4 id="413-dict的删除"><a class="anchorjs-link " href="#413-dict的删除" aria-label="Anchor link for: 413 dict的删除" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.1.3 dict的删除</h4><p>要删除dict中的元素，可以通过用<code>pop(key)</code>方法，删除该key对应的键值对。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.pop(<span class="string">'Bob'</span>)</span><br><span class="line"><span class="number">75</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d</span><br><span class="line">{<span class="string">'Michael'</span>: <span class="number">95</span>, <span class="string">'Tracy'</span>: <span class="number">85</span>}</span><br></pre></td></tr></tbody></table></div></figure><h4 id="414-特别说明"><a class="anchorjs-link " href="#414-特别说明" aria-label="Anchor link for: 414 特别说明" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.1.4 特别说明</h4><p><strong>dict的特点</strong>：</p><ol><li>查找和插入的速度极快，不会随着key的增加而变慢；</li><li>需要占用大量的内存，内存浪费多。</li><li>dict的key必须是<strong>不可变对象</strong>，在Python中，字符串、整数等都是不可变的，而list是可变的，就不能作为key。</li></ol><p><strong>对比list的特点</strong>：</p><ol><li>查找和插入的时间随着元素的增加而增加；</li><li>占用空间小，浪费内存很少。</li></ol><h3 id="42-set"><a class="anchorjs-link " href="#42-set" aria-label="Anchor link for: 42 set" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.2 set</h3><p>&#8203;  set表示无序和无重复元素的集合，与数学意义上的集合类似，也可以看成是只有key没有value的dict。</p><h4 id="421-set的定义"><a class="anchorjs-link " href="#421-set的定义" aria-label="Anchor link for: 421 set的定义" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.2.1 set的定义</h4><p>要创建一个set，需要提供一个list作为输入集合，如果list中有重复元素则自动过滤掉。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">{<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>}</span><br><span class="line"><span class="comment">#如果有重复元素会自动过滤掉</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = set([<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">{<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>}</span><br></pre></td></tr></tbody></table></div></figure><h4 id="422-set的添加和删除"><a class="anchorjs-link " href="#422-set的添加和删除" aria-label="Anchor link for: 422 set的添加和删除" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.2.2 set的添加和删除</h4><p>通过<code>add(key)</code>方法可以添加元素到set中，可以重复添加，但无效。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.add(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">{<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>}</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.add(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">{<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>}</span><br></pre></td></tr></tbody></table></div></figure><p>通过<code>remove(key)</code>方法可以删除元素。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.remove(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">{<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>}</span><br></pre></td></tr></tbody></table></div></figure><h4 id="423-set的交集和并集"><a class="anchorjs-link " href="#423-set的交集和并集" aria-label="Anchor link for: 423 set的交集和并集" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.2.3 set的交集和并集</h4><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s2 = set([<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="comment">#交集</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 &amp; s2</span><br><span class="line">{<span class="number">2</span>, <span class="number">3</span>}</span><br><span class="line"><span class="comment">#并集</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 | s2</span><br><span class="line">{<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>}</span><br></pre></td></tr></tbody></table></div></figure><h3 id="43-不可变对象"><a class="anchorjs-link " href="#43-不可变对象" aria-label="Anchor link for: 43 不可变对象" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>4.3 不可变对象</h3><p>&#8203;  变量表示一个指向，而变量指向的内容表示一个对象。例如<code>a="abc"</code>中<code>a</code>是变量即指向，而<code>abc</code>是字符串对象。</p><p>&#8203;  Python中整数和字符串是不可变对象，而list是可变对象。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="string">'abc'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a.replace(<span class="string">'a'</span>, <span class="string">'A'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line"><span class="string">'Abc'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="string">'abc'</span></span><br></pre></td></tr></tbody></table></div></figure><p>&#8203;  例如上例中，<code>a</code>是变量，<code>abc</code>是字符串对象，当调用a的<code>replace</code>的方法时，实际上是基于原字符串对象重新创建了一个新的字符串对象<code>Abc</code>，而没有改变原字符串对象的内容。</p><p>&#8203;  对于不变对象来说，调用对象自身的任意方法，不会改变该对象自身的内容。而会创建新的对象并返回。</p><h2 id="5-条件语句"><a class="anchorjs-link " href="#5-条件语句" aria-label="Anchor link for: 5 条件语句" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>5. 条件语句</h2><h3 id="51-if格式"><a class="anchorjs-link " href="#51-if格式" aria-label="Anchor link for: 51 if格式" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>5.1 if格式</h3><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;条件判断<span class="number">1</span>&gt;:</span><br><span class="line">    &lt;执行<span class="number">1</span>&gt;</span><br><span class="line"><span class="keyword">elif</span> &lt;条件判断<span class="number">2</span>&gt;:</span><br><span class="line">    &lt;执行<span class="number">2</span>&gt;</span><br><span class="line"><span class="keyword">elif</span> &lt;条件判断<span class="number">3</span>&gt;:</span><br><span class="line">    &lt;执行<span class="number">3</span>&gt;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    &lt;执行<span class="number">4</span>&gt;</span><br></pre></td></tr></tbody></table></div></figure><p>&#8203;  以上是if语句的完整格式，注意事项：</p><ul><li>Python使用缩进规则，如果if判断条件为true，则执行缩进部分的内容。</li><li>if的执行逻辑是从上往下判断，如果某个判断为true，则会忽略剩下的<code>elif</code>和<code>else</code>。</li></ul><p>例如：以下例子打印的结果是teenager，即满足第一个if条件则后续判断不再执行。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">20</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">6</span>:</span><br><span class="line">    print(<span class="string">'teenager'</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    print(<span class="string">'adult'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'kid'</span>)</span><br></pre></td></tr></tbody></table></div></figure><h3 id="52-条件简写"><a class="anchorjs-link " href="#52-条件简写" aria-label="Anchor link for: 52 条件简写" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>5.2 条件简写</h3><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> x:</span><br><span class="line">    print(<span class="string">'True'</span>)</span><br></pre></td></tr></tbody></table></div></figure><p>只要<code>x</code>是非零数值、非空字符串、非空list等，就判断为<code>True</code>，否则为<code>False</code>。</p><h3 id="53-input使用"><a class="anchorjs-link " href="#53-input使用" aria-label="Anchor link for: 53 input使用" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>5.3 input()使用</h3><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = input(<span class="string">'birth: '</span>)</span><br><span class="line">birth = int(s)</span><br><span class="line"><span class="keyword">if</span> birth &lt; <span class="number">2000</span>:</span><br><span class="line">    print(<span class="string">'00前'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'00后'</span>)</span><br></pre></td></tr></tbody></table></div></figure><p><code>input()</code>返回的数据类型是<code>str</code>，<code>str</code>不能直接和整数比较，必须先把<code>str</code>转换成整数。Python提供了<code>int()</code>函数来转换成整数。</p><h2 id="6-循环语句"><a class="anchorjs-link " href="#6-循环语句" aria-label="Anchor link for: 6 循环语句" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>6. 循环语句</h2><h3 id="61-for循环"><a class="anchorjs-link " href="#61-for循环" aria-label="Anchor link for: 61 for循环" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>6.1 for循环</h3><p>for…in循环，即把list或tuple中的每个元素迭代出来，执行后续操作。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    print(name)</span><br></pre></td></tr></tbody></table></div></figure><p>Python提供一个<code>range(x)</code>函数，生成<code>0-(x-1)</code>的整数序列。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(range(<span class="number">5</span>))</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">//求和运算</span><br><span class="line">sum = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">101</span>):</span><br><span class="line">    sum = sum + x</span><br><span class="line">print(sum)</span><br></pre></td></tr></tbody></table></div></figure><h3 id="62-while循环"><a class="anchorjs-link " href="#62-while循环" aria-label="Anchor link for: 62 while循环" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>6.2 while循环</h3><p>while循环，只要条件满足，就不断循环，条件不满足时退出循环。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sum = <span class="number">0</span></span><br><span class="line">n = <span class="number">99</span></span><br><span class="line"><span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">    sum = sum + n</span><br><span class="line">    n = n - <span class="number">2</span></span><br><span class="line">print(sum)</span><br></pre></td></tr></tbody></table></div></figure><h3 id="63-break"><a class="anchorjs-link " href="#63-break" aria-label="Anchor link for: 63 break" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>6.3 break</h3><p>在循环中，<code>break</code>语句可以提前退出循环。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> n &lt;= <span class="number">100</span>:</span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">10</span>: <span class="comment"># 当n = 11时，条件满足，执行break语句</span></span><br><span class="line">        <span class="keyword">break</span> <span class="comment"># break语句会结束当前循环</span></span><br><span class="line">    print(n)</span><br><span class="line">    n = n + <span class="number">1</span></span><br><span class="line">print(<span class="string">'END'</span>)</span><br></pre></td></tr></tbody></table></div></figure><h3 id="64-continue"><a class="anchorjs-link " href="#64-continue" aria-label="Anchor link for: 64 continue" data-anchorjs-icon="?" style="position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>6.4 continue</h3><p>在循环过程中，可以通过<code>continue</code>语句，跳过当前的这次循环，直接开始下一次循环。</p><figure class="highlight python"><div class="table-responsive"><table class="table"><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> n &lt; <span class="number">10</span>:</span><br><span class="line">    n = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span>: <span class="comment"># 如果n是偶数，执行continue语句</span></span><br><span class="line">        <span class="keyword">continue</span> <span class="comment"># continue语句会直接继续下一轮循环，后续的print()语句不会执行</span></span><br><span class="line">    print(n)</span><br></pre></td></tr></tbody></table></div></figure><p><code>break</code>和<code>continue</code>通常都必须配合<code>if</code>语句使用。</p>                                <hr></div></div>      <style>      span.toc-nav-number{        display: none      }    </style>                                      <section>                                     </section></div>            </article></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##python基础知识学习总结（一）&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://myblong.zkb/categories/python/"/>
    
    
      <category term="python" scheme="https://myblong.zkb/tags/python/"/>
    
      <category term="python基础" scheme="https://myblong.zkb/tags/python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>python开发工具</title>
    <link href="https://myblong.zkb/2019/06/12/python%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    <id>https://myblong.zkb/2019/06/12/python开发工具/</id>
    <published>2019-06-12T14:19:16.040Z</published>
    <updated>2019-06-12T14:21:50.584Z</updated>
    
    <content type="html"><![CDATA[<p>##PyCharm是一种Python IDE<br><a id="more"></a><br><article class="article-content">            <p><img src="http://www.jetbrains.com/pycharm/img/screenshots/simpleLook@2x.jpg" alt="Python高效开发工具 JetBrains PyCharm Professional 2018.3.1" title="Python高效开发工具 JetBrains PyCharm Professional 2018.3.1"></p><p style="text-align: center;">官网&nbsp;<a href="http://www.jetbrains.com/pycharm/" rel="external" data-original-title="" title="" target="_blank">http://www.jetbrains.com/pycharm/</a></p><p>PyCharm是一种Python IDE，带有一整套可以帮助用户在使用Python语言开发时提高其效率的工具，比如调试、语法高亮、Project管理、代码跳转、智能提示、自动完成、单元测试、版本控制。此外，该IDE提供了一些高级功能，以用于支持Django框架下的专业Web开发。</p><div class="para-title level-2"><h2 class="title-text">主要功能</h2><p><a class="edit-icon j-edit-link" data-edit-dl="3" data-original-title="" title="">编辑</a></p></div><div class="para"><b>编码协助</b></div><div class="para"><p>其提供了一个带编码补全，代码片段，支持代码折叠和分割窗口的智能、可配置的编辑器，可帮助用户更快更轻松的完成编码工作。</p><div class="lemma-picture text-pic layout-right"><a class="image-link" title="" href="https://baike.baidu.com/pic/PyCharm/8143824/0/35a85edf8db1cb139d0ec2bddd54564e92584b3d?fr=lemma&amp;ct=single" target="_blank" rel="noopener" data-original-title=""><img class="" src="https://gss0.bdstatic.com/-4o3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D250/sign=796e921cb2b7d0a27fc90398fbee760d/35a85edf8db1cb139d0ec2bddd54564e92584b3d.jpg" title="Python高效开发工具 JetBrains PyCharm Professional 2018.3.1" alt="Python高效开发工具 JetBrains PyCharm Professional 2018.3.1"></a></div></div><div class="para"><b>项目代码导航</b></div><div class="para">该IDE可帮助用户即时从一个文件导航至另一个，从一个方法至其申明或者用法甚至可以穿过类的层次。若用户学会使用其提供的快捷键的话甚至能更快。</div><div class="para"><b>代码分析</b></div><div class="para">用户可使用其编码语法，错误高亮，智能检测以及一键式代码快速补全建议，使得编码更优化。</div><div class="para"><b>Python重构</b></div><div class="para">有了该功能，用户便能在项目范围内轻松进行重命名，提取方法/超类，导入域/变量/常量，移动和前推/后退重构。</div><div class="para"><b>支持Django</b></div><div class="para"><p>有了它自带的HTML，CSS和 JavaScript编辑器 ，用户可以更快速的通过Djang框架进行Web开发。此外，其还能支持CoffeeScript， Mako 和 Jinja2。</p><div class="lemma-picture text-pic layout-right"><a class="image-link" title="" href="https://baike.baidu.com/pic/PyCharm/8143824/0/5243fbf2b21193132a15011e65380cd790238dce?fr=lemma&amp;ct=single" target="_blank" rel="noopener" data-original-title=""><img class="" src="https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D220/sign=c385f6f355fbb2fb302b5f107f4b2043/5243fbf2b21193132a15011e65380cd790238dce.jpg" title="Python高效开发工具 JetBrains PyCharm Professional 2018.3.1" alt="Python高效开发工具 JetBrains PyCharm Professional 2018.3.1"></a></div></div><div class="para"><b>支持Google App引擎</b></div><div class="para">用户可选择使用Python 2.5或者2.7运行环境，为Google App引擎进行应用程序的开发，并执行例行程序部署工作。</div><div class="para"><b>集成版本控制</b></div><div class="para">登入，录出，视图拆分与合并–所有这些功能都能在其统一的VCS用户界面（可用于Mercurial， Subversion， Git， Perforce 和其他的 SCM）中得到。</div><div class="para"><b>图形页面调试器</b></div><div class="para">用户可以用其自带的功能全面的调试器对Python或者Django应用程序以及测试单元进行调整，该调试器带断点，步进，多画面视图，窗口以及评估表达式。</div><div class="para"><b>集成的单元测试</b></div><div class="para"><p>用户可以在一个文件夹运行一个测试文件，单个测试类，一个方法或者所有测试项目。</p><div class="lemma-picture text-pic layout-right"><a class="image-link" title="" href="https://baike.baidu.com/pic/PyCharm/8143824/0/4a36acaf2edda3ccd185468e01e93901213f923f?fr=lemma&amp;ct=single" target="_blank" rel="noopener" data-original-title=""><img class="" src="https://gss1.bdstatic.com/-vo3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D250/sign=c63f3dba6b600c33f479d9cd2a4d5134/4a36acaf2edda3ccd185468e01e93901213f923f.jpg" title="Python高效开发工具 JetBrains PyCharm Professional 2018.3.1" alt="Python高效开发工具 JetBrains PyCharm Professional 2018.3.1"></a></div></div><div class="para"><b>可自定义&amp;可扩展</b></div><div class="para">可绑定了&nbsp;<a href="https://baike.baidu.com/item/Textmate" target="_blank" rel="noopener" data-original-title="" title="">Textmate</a>，&nbsp;<a href="https://baike.baidu.com/item/NetBeans" target="_blank" rel="noopener" data-original-title="" title="">NetBeans</a>， Eclipse &amp; Emacs 键盘主盘，以及 Vi/Vim仿真插件。</div><div></div><div><table><tbody><tr><td width="76">文件名称</td><td colspan="3" rowspan="1" width="107">JetBrains PyCharm Professional 2018.3.1 Windows</td></tr><tr><td width="76">文件大小</td><td colspan="3" rowspan="1" width="107">267MB</td></tr><tr><td width="76">文件格式</td><td colspan="3" rowspan="1" width="107">.zip</td></tr><tr><td width="76">备注</td><td colspan="3" rowspan="1" width="107">内附安装说明</td></tr><tr><td width="76">下载链接</td><td colspan="3" rowspan="1" width="107">链接: <a href="https://pan.baidu.com/s/1euMMbLTOD3W5igX5Haw6OA" rel="external" data-original-title="" title="" target="_blank">https://pan.baidu.com/s/1euMMbLTOD3W5igX5Haw6OA</a> 提取码: qprv </td></tr></tbody></table></div>    </article></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##PyCharm是一种Python IDE&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://myblong.zkb/categories/python/"/>
    
    
      <category term="python" scheme="https://myblong.zkb/tags/python/"/>
    
      <category term="python基础" scheme="https://myblong.zkb/tags/python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>python学习_1</title>
    <link href="https://myblong.zkb/2019/06/12/python%E5%AD%A6%E4%B9%A0_1/"/>
    <id>https://myblong.zkb/2019/06/12/python学习_1/</id>
    <published>2019-06-11T16:01:44.201Z</published>
    <updated>2019-06-11T16:04:11.271Z</updated>
    
    <content type="html"><![CDATA[<p>使用pycharm给玛雅写python<br><a id="more"></a><br><div class="blog-content-box">  <div class="article-header-box">    <div class="article-header">      <div class="article-title-box">      </div>      <div class="article-info-box">        <div class="operating">                  </div>      </div>    </div>  </div>  <article class="baidu_pl">    <div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f57960eb32.css">                              <div id="content_views" class="markdown_views prism-atom-one-dark">            <!-- flowchart 箭头图标 勿删 -->            <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">              <path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"/>            </svg>            <h1><a name="t0"></a><a id="maya_python__0" target="_blank"></a>maya python 的简单使用</h1><h3><a name="t1"></a><a id="pycharmpython_2" target="_blank"></a>使用pycharm给玛雅写python</h3><blockquote><p>里边含有玛雅命令自动提示的配置<br><code>https://download.csdn.net/download/bigtail_cat/10543887</code> 文件下载网址</p></blockquote><h5><a id="_6" target="_blank"></a>基本图形的创建</h5><pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> maya<span class="token punctuation">.</span>cmds <span class="token keyword">as</span> cmds<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    cmds<span class="token punctuation">.</span>polySphere<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment"># 创建默认的小球</span>    cmds<span class="token punctuation">.</span>polySphere<span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>   <span class="token comment"># 创建半径为5的小球</span>    cmds<span class="token punctuation">.</span>polyColorPerVertex<span class="token punctuation">(</span>colorRGB<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> colorDisplayOption<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment">#设置小球的颜色</span>    cmds<span class="token punctuation">.</span>polyCube<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'myCube'</span><span class="token punctuation">,</span> depth<span class="token operator">=</span><span class="token number">12.5</span><span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">#创建立方体</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span>cmds<span class="token punctuation">.</span><span class="token builtin">help</span><span class="token punctuation">(</span><span class="token string">'polyCube'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                      <span class="token comment"># 查看polyCube函数的参数列表</span>    <span class="token comment">#下面两种创建立方体方式等同</span>    cmds<span class="token punctuation">.</span>polyCube<span class="token punctuation">(</span>w<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> h<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> sx<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> sy<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> sz<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> ax<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cuv<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> ch<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>    cmds<span class="token punctuation">.</span>polyCube<span class="token punctuation">(</span>width<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>                  height<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>                  depth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>                  subdivisionsX<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>                  subdivisionsY<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>                  subdivisionsZ<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>                  axis<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  createUVs<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>                  constructionHistory<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li></ul></pre><h5><a id="_32" target="_blank"></a>根据创建的小球获得信息并改变小球的大小</h5><pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> maya<span class="token punctuation">.</span>cmds <span class="token keyword">as</span> cmds<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    sphere <span class="token operator">=</span> cmds<span class="token punctuation">.</span>polySphere<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment"># 创建默认的小球</span>    cmds<span class="token punctuation">.</span>polySphere<span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>            <span class="token comment"># 创建半径为5的小球</span>    cmds<span class="token punctuation">.</span>polyColorPerVertex<span class="token punctuation">(</span>colorRGB<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> colorDisplayOption<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment">#设置小球的颜色</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>sphere<span class="token punctuation">)</span>    rad <span class="token operator">=</span> cmds<span class="token punctuation">.</span>polySphere<span class="token punctuation">(</span>sphere<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> q<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># 获取小球的半径</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'the sphere radius is %d'</span> <span class="token operator">%</span>rad<span class="token punctuation">)</span>    cmds<span class="token punctuation">.</span>polySphere<span class="token punctuation">(</span>sphere<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> e<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> radius<span class="token operator">=</span>rad <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment"># 将小球的半径扩大二倍</span><div class="hljs-button {2}" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li></ul></pre><h5><a id="getAttr__setAttr__49" target="_blank"></a>getAttr 和 setAttr 获得和设置属性</h5><pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)"><span class="token keyword">import</span> maya<span class="token punctuation">.</span>cmds <span class="token keyword">as</span> cmds<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    loc <span class="token operator">=</span> cmds<span class="token punctuation">.</span>spaceLocator<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment"># 创建打印定位器</span>    <span class="token keyword">print</span> loc    sx <span class="token operator">=</span> cmds<span class="token punctuation">.</span>getAttr<span class="token punctuation">(</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'.scaleX'</span><span class="token punctuation">)</span>    <span class="token comment"># 获得locator的scaleX</span>    cmds<span class="token punctuation">.</span>setAttr<span class="token punctuation">(</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'.scaleX'</span><span class="token punctuation">,</span> sx <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 修改locator的scaleX</span>    <span class="token comment"># 同下效果</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cmds<span class="token punctuation">.</span>xform<span class="token punctuation">(</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> q<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> translation<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 获得打印定位器的位置</span>    cmds<span class="token punctuation">.</span>xform<span class="token punctuation">(</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> translation<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>           <span class="token comment"># 移动打印定位器的位置</span>    <span class="token comment">#同上效果</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cmds<span class="token punctuation">.</span>getAttr<span class="token punctuation">(</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'.translate'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>           <span class="token comment"># 获得打印定位器的位置</span>    cmds<span class="token punctuation">.</span>setAttr<span class="token punctuation">(</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'.translate'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>         <span class="token comment"># 移动打印定位器的位置</span><div class="hljs-button {2}" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li></ul></pre><h5><a id="connectAttr__disconnectAttr__68" target="_blank"></a>connectAttr 和 disconnectAttr 连接与断开属性连接</h5><pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> maya<span class="token punctuation">.</span>cmds <span class="token keyword">as</span> cmds<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    sphere <span class="token operator">=</span> cmds<span class="token punctuation">.</span>polySphere<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment">#创建小球</span>    cube   <span class="token operator">=</span> cmds<span class="token punctuation">.</span>polyCube<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment"># 创建立方体</span>    cmds<span class="token punctuation">.</span>connectAttr<span class="token punctuation">(</span>cube <span class="token operator">+</span> <span class="token string">'.ry'</span><span class="token punctuation">,</span> sphere <span class="token operator">+</span> <span class="token string">'.ty'</span><span class="token punctuation">)</span> <span class="token comment">#将立方体的y-rotation连接到球体的y-translation</span>    cmds<span class="token punctuation">.</span>disconnectAttr<span class="token punctuation">(</span>cube <span class="token operator">+</span> <span class="token string">'.ry'</span><span class="token punctuation">,</span> sphere <span class="token operator">+</span> <span class="token string">'.ty'</span><span class="token punctuation">)</span>  <span class="token comment"># 断开连接</span>    <span class="token comment">#立方体每旋转九十度 小球旋转一个单位</span>    mult <span class="token operator">=</span> cmds<span class="token punctuation">.</span>createNode<span class="token punctuation">(</span><span class="token string">'multiplyDivide'</span><span class="token punctuation">)</span>    cmds<span class="token punctuation">.</span>connectAttr<span class="token punctuation">(</span>cube <span class="token operator">+</span> <span class="token string">'.ry'</span><span class="token punctuation">,</span> mult <span class="token operator">+</span> <span class="token string">'.input1X'</span><span class="token punctuation">)</span>    cmds<span class="token punctuation">.</span>setAttr<span class="token punctuation">(</span>mult <span class="token operator">+</span> <span class="token string">'.input2X'</span><span class="token punctuation">,</span> <span class="token number">1.0</span> <span class="token operator">/</span> <span class="token number">90.0</span><span class="token punctuation">)</span>    cmds<span class="token punctuation">.</span>connectAttr<span class="token punctuation">(</span>mult <span class="token operator">+</span> <span class="token string">'.outputX'</span><span class="token punctuation">,</span> sphere <span class="token operator">+</span> <span class="token string">'.ty'</span><span class="token punctuation">)</span>    cmds<span class="token punctuation">.</span>select<span class="token punctuation">(</span>cube<span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li></ul></pre><h5><a id="addAttr__88" target="_blank"></a>addAttr 增加属性</h5><pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> maya<span class="token punctuation">.</span>cmds <span class="token keyword">as</span> cmds<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    cmds<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">(</span>new<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> f<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    sphere_xform<span class="token punctuation">,</span> sphere_shape <span class="token operator">=</span> cmds<span class="token punctuation">.</span>polySphere<span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token string">'Earth'</span><span class="token punctuation">)</span>    <span class="token comment"># 添加属性</span>    cmds<span class="token punctuation">.</span>addAttr<span class="token punctuation">(</span>sphere_xform<span class="token punctuation">,</span> attributeType<span class="token operator">=</span><span class="token string">'float'</span><span class="token punctuation">,</span> shortName<span class="token operator">=</span><span class="token string">'mass'</span><span class="token punctuation">,</span> longName<span class="token operator">=</span><span class="token string">'mass'</span><span class="token punctuation">,</span> defaultValue<span class="token operator">=</span><span class="token number">5.9742e24</span><span class="token punctuation">)</span>    cmds<span class="token punctuation">.</span>addAttr<span class="token punctuation">(</span>sphere_xform<span class="token punctuation">,</span> dataType<span class="token operator">=</span><span class="token string">'string'</span><span class="token punctuation">,</span> shortName<span class="token operator">=</span><span class="token string">'alt'</span><span class="token punctuation">,</span> longName<span class="token operator">=</span><span class="token string">'alternateName'</span><span class="token punctuation">)</span>    <span class="token comment"># 向属性中添加值 设置属性</span>    cmds<span class="token punctuation">.</span>setAttr<span class="token punctuation">(</span>sphere_xform <span class="token operator">+</span> <span class="token string">'.alternateName'</span><span class="token punctuation">,</span> <span class="token string">'Terra'</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'string'</span><span class="token punctuation">)</span>    <span class="token comment"># 获得属性值</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cmds<span class="token punctuation">.</span>getAttr<span class="token punctuation">(</span>sphere_xform <span class="token operator">+</span> <span class="token string">'.mass'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cmds<span class="token punctuation">.</span>getAttr<span class="token punctuation">(</span>sphere_xform <span class="token operator">+</span> <span class="token string">'.alt'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li></ul></pre><h5><a id="_110" target="_blank"></a>创建窗口</h5><pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> maya<span class="token punctuation">.</span>cmds <span class="token keyword">as</span> cmds<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># 创建一个窗口</span>    win <span class="token operator">=</span> cmds<span class="token punctuation">.</span>window<span class="token punctuation">(</span><span class="token string">'ar_optionsWindow'</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">'first window'</span><span class="token punctuation">,</span> widthHeight<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">546</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    cmds<span class="token punctuation">.</span>showWindow<span class="token punctuation">(</span>win<span class="token punctuation">)</span>    <span class="token comment"># 修改项目标题</span>    cmds<span class="token punctuation">.</span>deleteUI<span class="token punctuation">(</span>win<span class="token punctuation">,</span> window<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    win <span class="token operator">=</span> cmds<span class="token punctuation">.</span>window<span class="token punctuation">(</span><span class="token string">'ar_optionsWindow'</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">'second window'</span><span class="token punctuation">,</span> widthHeight<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">546</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    cmds<span class="token punctuation">.</span>showWindow<span class="token punctuation">(</span>win<span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li></ul></pre><h5><a id="ls__select__128" target="_blank"></a>ls 与 select 列出与选择节点</h5><pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> maya<span class="token punctuation">.</span>cmds <span class="token keyword">as</span> cmds<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># 打印场景里边的所有节点</span>    nodes <span class="token operator">=</span> cmds<span class="token punctuation">.</span>ls<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>nodes<span class="token punctuation">)</span>    <span class="token comment"># 打印场景中所有transform类型的节点</span>    nodes <span class="token operator">=</span> cmds<span class="token punctuation">.</span>ls<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'transform'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>nodes<span class="token punctuation">)</span>    <span class="token comment"># 打印场景中所有以persp开头名字的节点</span>    nodes <span class="token operator">=</span> cmds<span class="token punctuation">.</span>ls<span class="token punctuation">(</span><span class="token string">'persp*'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>nodes<span class="token punctuation">)</span>    <span class="token comment">#打印当前场景中选中的节点</span>    cmds<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'side*'</span><span class="token punctuation">,</span> <span class="token string">'top*'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cmds<span class="token punctuation">.</span>ls<span class="token punctuation">(</span>selection<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    cmds<span class="token punctuation">.</span>select<span class="token punctuation">(</span>cmds<span class="token punctuation">.</span>ls<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'shape'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cmds<span class="token punctuation">.</span>ls<span class="token punctuation">(</span>sl<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li></ul></pre><h5><a id="file__154" target="_blank"></a>file 场景中文件的创建与打开</h5><pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> os<span class="token keyword">import</span> maya<span class="token punctuation">.</span>cmds <span class="token keyword">as</span> cmds<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    cmds<span class="token punctuation">.</span>polyCube<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 保存场景中的所有文件</span>    path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">'HOME'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'cuba.ma'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span> path    cmds<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">(</span>rename<span class="token operator">=</span>path<span class="token punctuation">)</span>    cmds<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">(</span>save<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token comment">#新建场景并打开文件</span>    cmds<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">(</span>new<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> force<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">'HOME'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'cuba.ma'</span><span class="token punctuation">)</span>  <span class="token comment"># 打开文件</span>    <span class="token keyword">print</span> path    cmds<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> force<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li></ul></pre>          </div>          <link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-258a4616f7.css" rel="stylesheet">                  </div>  </article></div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用pycharm给玛雅写python&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://myblong.zkb/categories/python/"/>
    
    
      <category term="python" scheme="https://myblong.zkb/tags/python/"/>
    
      <category term="python基础" scheme="https://myblong.zkb/tags/python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
</feed>
